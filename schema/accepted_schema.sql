-- GENERATED FILE
-- Do not edit this file directly. Instead, start a server and run "yarn makemigrations"
-- as described in the README. This file should nevertheless be checked in to version control.
--
-- Overall schema hash: a2faca5a61a921ed5828a0be4fb26461

-- Accepted on 2024-07-04T13:57:16.000Z by 20240704T135716.add_permanentDeletionRequestedAt.ts

-- Extension "btree_gin", hash 7b207eefbb36f8109cca31911e6ab886
CREATE EXTENSION IF NOT EXISTS "btree_gin" CASCADE;

-- Extension "earthdistance", hash 66955b8a3bef9618647a323de580d42f
CREATE EXTENSION IF NOT EXISTS "earthdistance" CASCADE;

-- Extension "intarray", hash 14bf539a739e9f71d442b68eba6186f2
CREATE EXTENSION IF NOT EXISTS "intarray" CASCADE;

-- Extension "vector", hash 924e891e2528a233bdca9e5c55f06694
CREATE EXTENSION IF NOT EXISTS "vector" CASCADE;

-- Extension "pg_trgm", hash 0f621a2776aceae86676ea82bf86ffc9
CREATE EXTENSION IF NOT EXISTS "pg_trgm" CASCADE;

-- Table "AdvisorRequests", hash a20ab6095196077538fbe44d0e0ce216
CREATE TABLE "AdvisorRequests" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "interestedInMetaculus" BOOL NOT NULL DEFAULT FALSE,
  "jobAds" JSONB,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_AdvisorRequests_schemaVersion", hash 35d8cdbc0192d96195a7ae9ca34a22a0
CREATE INDEX IF NOT EXISTS "idx_AdvisorRequests_schemaVersion" ON "AdvisorRequests" USING btree ("schemaVersion");

-- Index "idx_AdvisorRequests_userId", hash 25d9c659d2b73f3f09fea2a66c29f93d
CREATE INDEX IF NOT EXISTS "idx_AdvisorRequests_userId" ON "AdvisorRequests" USING btree ("userId");

-- Table "ArbitalCaches", hash 926d87578e362a43d01c334611c0ebd9
CREATE TABLE "ArbitalCaches" (
  _id VARCHAR(27) PRIMARY KEY,
  "pageAlias" TEXT NOT NULL,
  "title" TEXT NOT NULL,
  "fetchedAt" TIMESTAMPTZ NOT NULL,
  "sanitizedHtml" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ArbitalCaches_schemaVersion", hash 316eb19f4cb7fce85321939c8aa49b12
CREATE INDEX IF NOT EXISTS "idx_ArbitalCaches_schemaVersion" ON "ArbitalCaches" USING btree ("schemaVersion");

-- Index "idx_ArbitalCaches_pageAlias", hash 55eb5d7575061785409a1ff7fd5cb43f
CREATE INDEX IF NOT EXISTS "idx_ArbitalCaches_pageAlias" ON "ArbitalCaches" USING btree ("pageAlias");

-- Index "idx_ArbitalCaches_fetchedAt", hash f7b5376b3a09122557455672ab620db2
CREATE INDEX IF NOT EXISTS "idx_ArbitalCaches_fetchedAt" ON "ArbitalCaches" USING btree ("fetchedAt");

-- Table "Bans", hash 9860526d4a4c572b185bd0a39fdb61f9
CREATE TABLE "Bans" (
  _id VARCHAR(27) PRIMARY KEY,
  "expirationDate" TIMESTAMPTZ NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "ip" TEXT,
  "reason" TEXT,
  "comment" TEXT NOT NULL DEFAULT '',
  "properties" JSONB,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Bans_schemaVersion", hash e7396890f0987cadabcc81cf5de95e6f
CREATE INDEX IF NOT EXISTS "idx_Bans_schemaVersion" ON "Bans" USING btree ("schemaVersion");

-- Index "idx_Bans_ip", hash ffd4b9f7904bac682d47e37ab9b062db
CREATE INDEX IF NOT EXISTS "idx_Bans_ip" ON "Bans" USING btree ("ip");

-- Table "Books", hash 3d65cbb7da91876e55bcbf4acc6a736f
CREATE TABLE "Books" (
  _id VARCHAR(27) PRIMARY KEY,
  "postedAt" TIMESTAMPTZ,
  "title" TEXT,
  "subtitle" TEXT,
  "tocTitle" TEXT,
  "collectionId" VARCHAR(27) NOT NULL,
  "number" DOUBLE PRECISION,
  "postIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "sequenceIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "displaySequencesAsGrid" BOOL,
  "hideProgressBar" BOOL,
  "showChapters" BOOL,
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Books_schemaVersion", hash def769c782f5197886cf1b734df757a0
CREATE INDEX IF NOT EXISTS "idx_Books_schemaVersion" ON "Books" USING btree ("schemaVersion");

-- Index "idx_Books_collectionId", hash c3bc8c82b43800224b4ae3b0bf4adbea
CREATE INDEX IF NOT EXISTS "idx_Books_collectionId" ON "Books" USING btree ("collectionId");

-- Table "Chapters", hash 247cb253c0facfd40ba1f5d4f19d1da6
CREATE TABLE "Chapters" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT,
  "subtitle" TEXT,
  "number" DOUBLE PRECISION,
  "sequenceId" VARCHAR(27),
  "postIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Chapters_schemaVersion", hash 0dde99d0c305afbddcca8896c7480505
CREATE INDEX IF NOT EXISTS "idx_Chapters_schemaVersion" ON "Chapters" USING btree ("schemaVersion");

-- Index "idx_Chapters_sequenceId_number", hash f2607862c3c144ff193a9f1eafe90b4d
CREATE INDEX IF NOT EXISTS "idx_Chapters_sequenceId_number" ON "Chapters" USING btree ("sequenceId", "number");

-- Table "CkEditorUserSessions", hash a3428da867f9af8eec2c11950bb3065b
CREATE TABLE "CkEditorUserSessions" (
  _id VARCHAR(27) PRIMARY KEY,
  "documentId" TEXT NOT NULL,
  "userId" TEXT NOT NULL,
  "endedAt" TIMESTAMPTZ,
  "endedBy" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_CkEditorUserSessions_schemaVersion", hash 4f4c89c170a69520b8210f09e1b59750
CREATE INDEX IF NOT EXISTS "idx_CkEditorUserSessions_schemaVersion" ON "CkEditorUserSessions" USING btree ("schemaVersion");

-- Index "idx_CkEditorUserSessions_documentId_userId", hash 6c132baf2e84f4123891cdb0c7f10909
CREATE INDEX IF NOT EXISTS "idx_CkEditorUserSessions_documentId_userId" ON "CkEditorUserSessions" USING btree ("documentId", "userId");

-- Table "ClientIds", hash 52ceb352c518b8e9455bcdecfe364934
CREATE TABLE "ClientIds" (
  _id VARCHAR(27) PRIMARY KEY,
  "clientId" TEXT NOT NULL,
  "firstSeenReferrer" TEXT,
  "firstSeenLandingPage" TEXT,
  "userIds" TEXT[] DEFAULT '{}'::TEXT[],
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ClientIds_schemaVersion", hash 50c1a369f957a28226aa78d2ddc48778
CREATE INDEX IF NOT EXISTS "idx_ClientIds_schemaVersion" ON "ClientIds" USING btree ("schemaVersion");

-- Index "idx_idx_ClientIds_clientId_unique", hash 7fc6324638598aa69cc3dca1f358ce62
CREATE UNIQUE INDEX IF NOT EXISTS "idx_idx_ClientIds_clientId_unique" ON "ClientIds" USING btree ("clientId");

-- Index "idx_ClientIds_userIds", hash 205228f0613c319e4a52561e40657dd5
CREATE INDEX IF NOT EXISTS "idx_ClientIds_userIds" ON "ClientIds" USING gin ("userIds");

-- Table "Collections", hash 0c130716687c0bb3ce16b5a7085f634e
CREATE TABLE "Collections" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "title" TEXT NOT NULL,
  "slug" TEXT NOT NULL,
  "gridImageId" TEXT,
  "firstPageLink" TEXT NOT NULL,
  "hideStartReadingButton" BOOL,
  "noindex" BOOL NOT NULL DEFAULT FALSE,
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Collections_schemaVersion", hash 1934836177de8556fbc4432899834f99
CREATE INDEX IF NOT EXISTS "idx_Collections_schemaVersion" ON "Collections" USING btree ("schemaVersion");

-- Index "idx_Collections_slug", hash 5443dedf228f84cd1788b5ce8df07dee
CREATE INDEX IF NOT EXISTS "idx_Collections_slug" ON "Collections" USING btree ("slug");

-- Table "CommentModeratorActions", hash 66b1e93f345b898da3746ece8368d518
CREATE TABLE "CommentModeratorActions" (
  _id VARCHAR(27) PRIMARY KEY,
  "commentId" VARCHAR(27) NOT NULL,
  "type" TEXT NOT NULL,
  "endedAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_CommentModeratorActions_schemaVersion", hash 781c0eea5a515ebffa8dddc9de6e66ca
CREATE INDEX IF NOT EXISTS "idx_CommentModeratorActions_schemaVersion" ON "CommentModeratorActions" USING btree ("schemaVersion");

-- Index "idx_CommentModeratorActions_commentId_createdAt", hash b2ed867d4dcee9e478f931e0d8107487
CREATE INDEX IF NOT EXISTS "idx_CommentModeratorActions_commentId_createdAt" ON "CommentModeratorActions" USING btree ("commentId", "createdAt");

-- Table "Comments", hash aa681fc4c5cbde08e7165cdad440ceeb
CREATE TABLE "Comments" (
  _id VARCHAR(27) PRIMARY KEY,
  "parentCommentId" VARCHAR(27),
  "topLevelCommentId" VARCHAR(27),
  "postedAt" TIMESTAMPTZ NOT NULL,
  "author" TEXT,
  "postId" VARCHAR(27),
  "tagId" VARCHAR(27),
  "tagCommentType" TEXT NOT NULL DEFAULT 'DISCUSSION',
  "subforumStickyPriority" DOUBLE PRECISION,
  "userId" VARCHAR(27) NOT NULL,
  "userIP" TEXT,
  "userAgent" TEXT,
  "referrer" TEXT,
  "authorIsUnreviewed" BOOL NOT NULL DEFAULT FALSE,
  "answer" BOOL NOT NULL DEFAULT FALSE,
  "parentAnswerId" VARCHAR(27),
  "directChildrenCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "descendentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "shortform" BOOL,
  "shortformFrontpage" BOOL NOT NULL DEFAULT TRUE,
  "nominatedForReview" TEXT,
  "reviewingForReview" TEXT,
  "lastSubthreadActivity" TIMESTAMPTZ,
  "postVersion" TEXT,
  "promoted" BOOL,
  "promotedByUserId" VARCHAR(27),
  "promotedAt" TIMESTAMPTZ,
  "hideKarma" BOOL,
  "legacy" BOOL NOT NULL DEFAULT FALSE,
  "legacyId" TEXT,
  "legacyPoll" BOOL NOT NULL DEFAULT FALSE,
  "legacyParentId" TEXT,
  "retracted" BOOL NOT NULL DEFAULT FALSE,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "deletedPublic" BOOL NOT NULL DEFAULT FALSE,
  "deletedReason" TEXT,
  "deletedDate" TIMESTAMPTZ,
  "deletedByUserId" VARCHAR(27),
  "spam" BOOL NOT NULL DEFAULT FALSE,
  "repliesBlockedUntil" TIMESTAMPTZ,
  "needsReview" BOOL,
  "reviewedByUserId" VARCHAR(27),
  "hideAuthor" BOOL NOT NULL DEFAULT FALSE,
  "moderatorHat" BOOL NOT NULL DEFAULT FALSE,
  "hideModeratorHat" BOOL,
  "isPinnedOnProfile" BOOL NOT NULL DEFAULT FALSE,
  "title" VARCHAR(500),
  "relevantTagIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "debateResponse" BOOL,
  "rejected" BOOL NOT NULL DEFAULT FALSE,
  "modGPTAnalysis" TEXT,
  "modGPTRecommendation" TEXT,
  "rejectedReason" TEXT,
  "rejectedByUserId" VARCHAR(27),
  "af" BOOL NOT NULL DEFAULT FALSE,
  "suggestForAlignmentUserIds" TEXT[] NOT NULL DEFAULT '{}',
  "reviewForAlignmentUserId" TEXT,
  "afDate" TIMESTAMPTZ,
  "moveToAlignmentUserId" VARCHAR(27),
  "agentFoundationsId" TEXT,
  "originalDialogueId" VARCHAR(27),
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "contents" JSONB,
  "contents_latest" TEXT,
  "pingbacks" JSONB,
  "voteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "baseScore" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "extendedScore" JSONB,
  "score" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "afBaseScore" DOUBLE PRECISION,
  "afExtendedScore" JSONB,
  "afVoteCount" DOUBLE PRECISION
);

-- Index "idx_Comments_schemaVersion", hash b41ce21eae9409f7eaf22f4dc140a7df
CREATE INDEX IF NOT EXISTS "idx_Comments_schemaVersion" ON "Comments" USING btree ("schemaVersion");

-- Index "idx_Comments_postId", hash e5e382f99b07f6d691ae8f9c3e31211f
CREATE INDEX IF NOT EXISTS "idx_Comments_postId" ON "Comments" USING btree ("postId");

-- Index "idx_Comments_userId_postedAt", hash e9ff78a3e441541eeb86550773351e05
CREATE INDEX IF NOT EXISTS "idx_Comments_userId_postedAt" ON "Comments" USING btree ("userId", "postedAt");

-- Index "idx_Comments_parentCommentId", hash 3f1fc061148609d97c8cde3fa6cd6d8a
CREATE INDEX IF NOT EXISTS "idx_Comments_parentCommentId" ON "Comments" USING btree ("parentCommentId");

-- Index "idx_comments_top_comments", hash 194d5eb830798531da2c07ca2adc2d9c
CREATE INDEX IF NOT EXISTS "idx_comments_top_comments" ON "Comments" USING btree (
  "postId",
  "parentAnswerId",
  "answer",
  "deleted",
  "baseScore",
  "postedAt",
  "authorIsUnreviewed",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_comments_recent_replies", hash c9e2ce2fadced375d45085e3b2d96078
CREATE INDEX IF NOT EXISTS "idx_comments_recent_replies" ON "Comments" USING btree (
  "postId",
  "parentAnswerId",
  "answer",
  "deleted",
  "lastSubthreadActivity",
  "baseScore",
  "postedAt",
  "authorIsUnreviewed",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_comments_magic_comments", hash 69b7bae9f16a251edb377b23a27b7ee8
CREATE INDEX IF NOT EXISTS "idx_comments_magic_comments" ON "Comments" USING btree (
  "postId",
  "parentAnswerId",
  "answer",
  "deleted",
  "score",
  "postedAt",
  "authorIsUnreviewed",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_comments_af_top_comments", hash 6e6f2cc817007a02b25ebff17d0ef651
CREATE INDEX IF NOT EXISTS "idx_comments_af_top_comments" ON "Comments" USING btree (
  "postId",
  "parentAnswerId",
  "answer",
  "deleted",
  "afBaseScore",
  "postedAt",
  "authorIsUnreviewed",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_comments_new_comments", hash ad0d99290916b68de0d3a9a7d3e75908
CREATE INDEX IF NOT EXISTS "idx_comments_new_comments" ON "Comments" USING btree (
  "postId",
  "parentAnswerId",
  "answer",
  "deleted",
  "postedAt",
  "authorIsUnreviewed",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_Comments_userId_isPinnedOnProfile_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_af_debateResponse", hash 0d305a352a0d76a81d6710a40d4f79f1
CREATE INDEX IF NOT EXISTS "idx_Comments_userId_isPinnedOnProfile_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_af_debateResponse" ON "Comments" USING btree (
  "userId",
  "isPinnedOnProfile",
  "postedAt",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "af",
  "debateResponse"
);

-- Index "idx_Comments_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_debateResponse", hash 469e1e2e60e7e6f64eba752040ead0a9
CREATE INDEX IF NOT EXISTS "idx_Comments_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_debateResponse" ON "Comments" USING btree (
  "postedAt",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_Comments_rejected_authorIsUnreviewed_postedAt_deleted_deletedPublic_hideAuthor_userId_af_debateResponse", hash 894fd44c251f89f5e36d0246e9e9901a
CREATE INDEX IF NOT EXISTS "idx_Comments_rejected_authorIsUnreviewed_postedAt_deleted_deletedPublic_hideAuthor_userId_af_debateResponse" ON "Comments" USING btree (
  "rejected",
  "authorIsUnreviewed",
  "postedAt",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "debateResponse"
);

-- Index "idx_Comments_legacyId", hash 70ed96fabd1597d7265663b999bd3497
CREATE INDEX IF NOT EXISTS "idx_Comments_legacyId" ON "Comments" USING btree ("legacyId");

-- Index "idx_Comments_inactive_postedAt", hash f4d7054986d2b252665eefb37bb273a9
CREATE INDEX IF NOT EXISTS "idx_Comments_inactive_postedAt" ON "Comments" USING btree ("inactive", "postedAt");

-- Index "idx_Comments_userId_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_af_debateResponse", hash 18601bde631acf76a0d9e39a1a99481a
CREATE INDEX IF NOT EXISTS "idx_Comments_userId_postedAt_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_af_debateResponse" ON "Comments" USING btree (
  "userId",
  "postedAt",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "af",
  "debateResponse"
);

-- Index "idx_Comments_parentAnswerId_baseScore_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_postedAt_debateResponse", hash a65c9aa5ac564348c6b59963b290836c
CREATE INDEX IF NOT EXISTS "idx_Comments_parentAnswerId_baseScore_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_postedAt_debateResponse" ON "Comments" USING btree (
  "parentAnswerId",
  "baseScore",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_Comments_topLevelCommentId", hash 06662c05d0a9081c54a553df4f5b435d
CREATE INDEX IF NOT EXISTS "idx_Comments_topLevelCommentId" ON "Comments" USING btree ("topLevelCommentId");

-- Index "idx_Comments_agentFoundationsId", hash 1321a6dd5c33aebf83fe717671db699c
CREATE INDEX IF NOT EXISTS "idx_Comments_agentFoundationsId" ON "Comments" USING btree ("agentFoundationsId");

-- Index "idx_Comments_shortform_topLevelCommentId_lastSubthreadActivity_postedAt_baseScore", hash 4c0b28b7561f6d9719cc99592e7c23db
CREATE INDEX IF NOT EXISTS "idx_Comments_shortform_topLevelCommentId_lastSubthreadActivity_postedAt_baseScore" ON "Comments" USING btree (
  "shortform",
  "topLevelCommentId",
  "lastSubthreadActivity",
  "postedAt",
  "baseScore"
);

-- Index "idx_Comments_topLevelCommentId_postedAt_baseScore", hash cb5926a95705958926eddeb2472cd7f6
CREATE INDEX IF NOT EXISTS "idx_Comments_topLevelCommentId_postedAt_baseScore" ON "Comments" USING btree ("topLevelCommentId", "postedAt", "baseScore");

-- Index "idx_comments_nominations2018", hash 89e3e636f34b3f4b406e21dcafee76b4
CREATE INDEX IF NOT EXISTS "idx_comments_nominations2018" ON "Comments" USING btree (
  "nominatedForReview",
  "userId",
  "postId",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_comments_reviews2018", hash 9a0f3417a342b830b94de35c7a4c8f67
CREATE INDEX IF NOT EXISTS "idx_comments_reviews2018" ON "Comments" USING btree (
  "reviewingForReview",
  "userId",
  "postId",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_comments_tagId", hash 350fb9fa6469b76fa7c707d2593d0690
CREATE INDEX IF NOT EXISTS "idx_comments_tagId" ON "Comments" USING btree (
  "tagId",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_Comments_topLevelCommentId_tagCommentType_tagId_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_postedAt_debateResponse", hash 2eadf48e46a8909ce5e783f0d0db2ea1
CREATE INDEX IF NOT EXISTS "idx_Comments_topLevelCommentId_tagCommentType_tagId_authorIsUnreviewed_deleted_deletedPublic_hideAuthor_userId_af_postedAt_debateResponse" ON "Comments" USING btree (
  "topLevelCommentId",
  "tagCommentType",
  "tagId",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_comments_moderatorHat", hash 4140a6396b2665ce0ea29a8fda3671a0
CREATE INDEX IF NOT EXISTS "idx_comments_moderatorHat" ON "Comments" USING btree (
  "moderatorHat",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "af",
  "postedAt",
  "debateResponse"
);

-- Index "idx_comments_alignmentSuggestedComments", hash 10cfb1a479fc9d60f82998c1edd1a785
CREATE INDEX IF NOT EXISTS "idx_comments_alignmentSuggestedComments" ON "Comments" USING gin (
  "reviewForAlignmentUserId",
  "af",
  "suggestForAlignmentUserIds",
  "postedAt",
  "authorIsUnreviewed",
  "deleted",
  "deletedPublic",
  "hideAuthor",
  "userId",
  "debateResponse"
)
WHERE
  ("suggestForAlignmentUserIds" [0]) IS NOT NULL;

-- Index "idx_Comments_userId_createdAt", hash 9b1d0ba194ea76591c315f3e194d889b
CREATE INDEX IF NOT EXISTS "idx_Comments_userId_createdAt" ON "Comments" USING btree ("userId", "createdAt");

-- Table "Conversations", hash ab6ae583a297c604529f27d5999a39c1
CREATE TABLE "Conversations" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT,
  "participantIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "latestActivity" TIMESTAMPTZ,
  "af" BOOL,
  "messageCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "moderator" BOOL,
  "archivedByIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Conversations_schemaVersion", hash 9ed3fe77445baab11eaf03affc752cda
CREATE INDEX IF NOT EXISTS "idx_Conversations_schemaVersion" ON "Conversations" USING btree ("schemaVersion");

-- Index "idx_Conversations_moderator_messageCount_latestActivity_participantIds", hash 1996a6d0022ee1888ad82b047ebdf051
CREATE INDEX IF NOT EXISTS "idx_Conversations_moderator_messageCount_latestActivity_participantIds" ON "Conversations" USING gin (
  "moderator",
  "messageCount",
  "latestActivity",
  "participantIds"
);

-- Index "idx_Conversations_participantIds_messageCount_latestActivity", hash 610d5f1eda89bc7491089290d4368d35
CREATE INDEX IF NOT EXISTS "idx_Conversations_participantIds_messageCount_latestActivity" ON "Conversations" USING gin (
  "participantIds",
  "messageCount",
  "latestActivity"
);

-- Index "idx_Conversations_participantIds_title", hash dd47a230b052d0089b784f73ac140975
CREATE INDEX IF NOT EXISTS "idx_Conversations_participantIds_title" ON "Conversations" USING gin ("participantIds", "title");

-- Table "CronHistories", hash 59bb662655a1c3acaa27c5eed19895c0
CREATE TABLE "CronHistories" (
  _id VARCHAR(27) PRIMARY KEY,
  "intendedAt" TIMESTAMPTZ NOT NULL,
  "name" TEXT NOT NULL,
  "startedAt" TIMESTAMPTZ NOT NULL,
  "finishedAt" TIMESTAMPTZ,
  "result" JSONB
);

-- Index "idx_CronHistories_startedAt", hash 9a9a58062320c42555a1ebbebe23fd8d
CREATE INDEX IF NOT EXISTS "idx_CronHistories_startedAt" ON "CronHistories" USING btree ("startedAt");

-- Index "idx_CronHistories_intendedAt_name", hash 39b558dafdef81279dbb82e711b3db0c
CREATE UNIQUE INDEX IF NOT EXISTS "idx_CronHistories_intendedAt_name" ON "CronHistories" USING btree ("intendedAt", "name");

-- Table "CurationEmails", hash 6b794b9389a44a743515d3dd080529cc
CREATE TABLE "CurationEmails" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" TEXT NOT NULL,
  "postId" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_CurationEmails_schemaVersion", hash ad7acab2de22ad7d776ee0430222ac32
CREATE INDEX IF NOT EXISTS "idx_CurationEmails_schemaVersion" ON "CurationEmails" USING btree ("schemaVersion");

-- Index "idx_CurationEmails_userId", hash c9de5f68f2b5ec9a5751fc7a99c03c74
CREATE UNIQUE INDEX IF NOT EXISTS "idx_CurationEmails_userId" ON "CurationEmails" USING btree ("userId");

-- Table "DatabaseMetadata", hash 2835c102780dd1575934e3a270a184b0
CREATE TABLE "DatabaseMetadata" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "value" JSONB NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_DatabaseMetadata_schemaVersion", hash 652d3a1dbb65baa32fa5ce657ddf9b94
CREATE INDEX IF NOT EXISTS "idx_DatabaseMetadata_schemaVersion" ON "DatabaseMetadata" USING btree ("schemaVersion");

-- Table "DebouncerEvents", hash fc482e403dfdb88802ec05e7c9c14db3
CREATE TABLE "DebouncerEvents" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "af" BOOL,
  "dispatched" BOOL NOT NULL,
  "failed" BOOL,
  "delayTime" TIMESTAMPTZ NOT NULL,
  "upperBoundTime" TIMESTAMPTZ NOT NULL,
  "key" TEXT NOT NULL,
  "pendingEvents" TEXT[],
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_DebouncerEvents_schemaVersion", hash 4506f7de31b1bba6b7f60e963888ceb2
CREATE INDEX IF NOT EXISTS "idx_DebouncerEvents_schemaVersion" ON "DebouncerEvents" USING btree ("schemaVersion");

-- Index "idx_DebouncerEvents_dispatched_af_delayTime", hash b7895ca1a8d81071b0ab6538f2c544cd
CREATE INDEX IF NOT EXISTS "idx_DebouncerEvents_dispatched_af_delayTime" ON "DebouncerEvents" USING btree ("dispatched", "af", "delayTime");

-- Index "idx_DebouncerEvents_dispatched_af_upperBoundTime", hash 8b93b9fa8314157823000d929ed7fe36
CREATE INDEX IF NOT EXISTS "idx_DebouncerEvents_dispatched_af_upperBoundTime" ON "DebouncerEvents" USING btree ("dispatched", "af", "upperBoundTime");

-- Table "DialogueChecks", hash d7cd34f906e8d820c2063bfe270ba210
CREATE TABLE "DialogueChecks" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" TEXT NOT NULL,
  "targetUserId" TEXT NOT NULL,
  "checked" BOOL NOT NULL DEFAULT FALSE,
  "checkedAt" TIMESTAMPTZ NOT NULL,
  "hideInRecommendations" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_DialogueChecks_schemaVersion", hash 02f0f40654c796156ef0cf8a80cb4748
CREATE INDEX IF NOT EXISTS "idx_DialogueChecks_schemaVersion" ON "DialogueChecks" USING btree ("schemaVersion");

-- Index "idx_DialogueChecks_userId_targetUserId", hash 987fd50b3d95bed38a0469e2bb7dfdc2
CREATE UNIQUE INDEX IF NOT EXISTS "idx_DialogueChecks_userId_targetUserId" ON "DialogueChecks" USING btree ("userId", "targetUserId");

-- Table "DialogueMatchPreferences", hash 06005ed73e64ec256de17483f63a3003
CREATE TABLE "DialogueMatchPreferences" (
  _id VARCHAR(27) PRIMARY KEY,
  "dialogueCheckId" VARCHAR(27) NOT NULL,
  "topicPreferences" JSONB[] NOT NULL DEFAULT '{}',
  "topicNotes" TEXT NOT NULL DEFAULT '',
  "syncPreference" TEXT NOT NULL,
  "asyncPreference" TEXT NOT NULL,
  "formatNotes" TEXT NOT NULL DEFAULT '',
  "calendlyLink" TEXT,
  "generatedDialogueId" TEXT,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_DialogueMatchPreferences_schemaVersion", hash 35b07665ab91020b44baad8efe3f669b
CREATE INDEX IF NOT EXISTS "idx_DialogueMatchPreferences_schemaVersion" ON "DialogueMatchPreferences" USING btree ("schemaVersion");

-- Index "idx_DialogueMatchPreferences_dialogueCheckId", hash 0d70a0933446762377f1d538edcf023e
CREATE INDEX IF NOT EXISTS "idx_DialogueMatchPreferences_dialogueCheckId" ON "DialogueMatchPreferences" USING btree ("dialogueCheckId");

-- Table "DigestPosts", hash 5cff3919b2c653a5d9655bd3a0b93cfe
CREATE TABLE "DigestPosts" (
  _id VARCHAR(27) PRIMARY KEY,
  "digestId" VARCHAR(27) NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "emailDigestStatus" TEXT,
  "onsiteDigestStatus" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_DigestPosts_schemaVersion", hash db94a59dfba18576b5108897817e1419
CREATE INDEX IF NOT EXISTS "idx_DigestPosts_schemaVersion" ON "DigestPosts" USING btree ("schemaVersion");

-- Index "idx_DigestPosts_digestId", hash e41d48b52a1eda7c04d73d5612183a03
CREATE INDEX IF NOT EXISTS "idx_DigestPosts_digestId" ON "DigestPosts" USING btree ("digestId");

-- Table "Digests", hash 4e3d60727228b6e90ea266b8e7378f9d
CREATE TABLE "Digests" (
  _id VARCHAR(27) PRIMARY KEY,
  "num" DOUBLE PRECISION NOT NULL,
  "startDate" TIMESTAMPTZ NOT NULL,
  "endDate" TIMESTAMPTZ,
  "publishedDate" TIMESTAMPTZ,
  "onsiteImageId" TEXT,
  "onsitePrimaryColor" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Digests_schemaVersion", hash 6008cbdcdc4a8962c4397ad03ece43f2
CREATE INDEX IF NOT EXISTS "idx_Digests_schemaVersion" ON "Digests" USING btree ("schemaVersion");

-- Index "idx_Digests_num", hash bab4d6a9df63659ffe9d6c34b45f22f6
CREATE INDEX IF NOT EXISTS "idx_Digests_num" ON "Digests" USING btree ("num");

-- Table "ElectionCandidates", hash 204187689e964e6cf39aad8ba760d734
CREATE TABLE "ElectionCandidates" (
  _id VARCHAR(27) PRIMARY KEY,
  "electionName" TEXT NOT NULL,
  "name" TEXT NOT NULL,
  "logoSrc" TEXT NOT NULL,
  "href" TEXT NOT NULL,
  "fundraiserLink" TEXT,
  "gwwcLink" TEXT,
  "gwwcId" TEXT,
  "description" TEXT NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "postCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "tagId" VARCHAR(27) NOT NULL,
  "isElectionFundraiser" BOOL NOT NULL DEFAULT FALSE,
  "amountRaised" DOUBLE PRECISION,
  "targetAmount" DOUBLE PRECISION,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "voteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "baseScore" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "extendedScore" JSONB,
  "score" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "afBaseScore" DOUBLE PRECISION,
  "afExtendedScore" JSONB,
  "afVoteCount" DOUBLE PRECISION
);

-- Index "idx_ElectionCandidates_schemaVersion", hash 444e53ebddbbc4f0ac075befd70a00ea
CREATE INDEX IF NOT EXISTS "idx_ElectionCandidates_schemaVersion" ON "ElectionCandidates" USING btree ("schemaVersion");

-- Index "idx_ElectionCandidates_electionName", hash ea44a92e94103401b2b41e5298815bc7
CREATE INDEX IF NOT EXISTS "idx_ElectionCandidates_electionName" ON "ElectionCandidates" USING btree ("electionName");

-- Table "ElectionVotes", hash 68af0ee0f6bb5bc1420e59083e047906
CREATE TABLE "ElectionVotes" (
  _id VARCHAR(27) PRIMARY KEY,
  "electionName" TEXT NOT NULL,
  "userId" VARCHAR(27),
  "compareState" JSONB,
  "vote" JSONB,
  "submittedAt" TIMESTAMPTZ,
  "submissionComments" JSONB,
  "userExplanation" TEXT,
  "userOtherComments" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ElectionVotes_schemaVersion", hash 2420b8375e3244d2c4b85c472552e42d
CREATE INDEX IF NOT EXISTS "idx_ElectionVotes_schemaVersion" ON "ElectionVotes" USING btree ("schemaVersion");

-- Index "idx_ElectionVotes_electionName_userId", hash ba9969c81a6340f62daba1b8f3226d1f
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ElectionVotes_electionName_userId" ON "ElectionVotes" USING btree ("electionName", COALESCE("userId", ''));

-- Index "idx_ElectionVotes_electionName", hash 90ed6f5caa57bbd7e8c0be957b3a970f
CREATE INDEX IF NOT EXISTS "idx_ElectionVotes_electionName" ON "ElectionVotes" USING btree ("electionName");

-- Table "ElicitQuestionPredictions", hash 26ade39f44c0c4a7b82a904862743a70
CREATE TABLE "ElicitQuestionPredictions" (
  _id VARCHAR(27) PRIMARY KEY,
  "prediction" DOUBLE PRECISION NOT NULL,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "notes" TEXT,
  "creator" JSONB NOT NULL,
  "userId" VARCHAR(27),
  "sourceUrl" TEXT,
  "sourceId" TEXT,
  "binaryQuestionId" VARCHAR(27) NOT NULL
);

-- Table "ElicitQuestions", hash cb7db7490ccb8d9a1af7e0ee237c6503
CREATE TABLE "ElicitQuestions" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT NOT NULL,
  "notes" TEXT,
  "resolution" TEXT,
  "resolvesBy" TIMESTAMPTZ NOT NULL,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Table "EmailTokens", hash dd2bf71ae4e75db4fc09f70fb539094f
CREATE TABLE "EmailTokens" (
  _id VARCHAR(27) PRIMARY KEY,
  "token" TEXT NOT NULL,
  "tokenType" TEXT NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "usedAt" TIMESTAMPTZ,
  "params" JSONB,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_EmailTokens_schemaVersion", hash f41c49a3c50652685a55bd31b0058dc1
CREATE INDEX IF NOT EXISTS "idx_EmailTokens_schemaVersion" ON "EmailTokens" USING btree ("schemaVersion");

-- Index "idx_EmailTokens_token", hash df1b0ab92769a55ab75029d7c6954c56
CREATE INDEX IF NOT EXISTS "idx_EmailTokens_token" ON "EmailTokens" USING btree ("token");

-- Table "FeaturedResources", hash 301fdc211ee94d58590e0f1603e9fbfe
CREATE TABLE "FeaturedResources" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT NOT NULL,
  "body" TEXT,
  "ctaText" TEXT NOT NULL,
  "ctaUrl" TEXT NOT NULL,
  "expiresAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_FeaturedResources_schemaVersion", hash 129d2123c26ba82541994f86b28f3093
CREATE INDEX IF NOT EXISTS "idx_FeaturedResources_schemaVersion" ON "FeaturedResources" USING btree ("schemaVersion");

-- Table "ForumEvents", hash 61e8a083abfa15e17af9349c6a10c088
CREATE TABLE "ForumEvents" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT NOT NULL,
  "startDate" TIMESTAMPTZ NOT NULL,
  "endDate" TIMESTAMPTZ NOT NULL,
  "darkColor" TEXT NOT NULL,
  "lightColor" TEXT NOT NULL,
  "contrastColor" TEXT,
  "tagId" VARCHAR(27) NOT NULL,
  "bannerImageId" TEXT,
  "includesPoll" BOOL NOT NULL DEFAULT FALSE,
  "publicData" JSONB,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "frontpageDescription" JSONB,
  "frontpageDescription_latest" TEXT,
  "frontpageDescriptionMobile" JSONB,
  "frontpageDescriptionMobile_latest" TEXT,
  "postPageDescription" JSONB,
  "postPageDescription_latest" TEXT
);

-- Index "idx_ForumEvents_schemaVersion", hash 8a94e78964ef6826716c8b3332c2d0d7
CREATE INDEX IF NOT EXISTS "idx_ForumEvents_schemaVersion" ON "ForumEvents" USING btree ("schemaVersion");

-- Index "idx_ForumEvents_endDate", hash 7b3e561bb79fe51c13ce17bd75d2d493
CREATE INDEX IF NOT EXISTS "idx_ForumEvents_endDate" ON "ForumEvents" USING btree ("endDate");

-- Table "GardenCodes", hash 52cac856f3d62baf3398d5be5d8b404c
CREATE TABLE "GardenCodes" (
  _id VARCHAR(27) PRIMARY KEY,
  "code" TEXT NOT NULL,
  "title" TEXT NOT NULL DEFAULT 'Guest Day Pass',
  "userId" VARCHAR(27) NOT NULL,
  "slug" TEXT NOT NULL,
  "startTime" TIMESTAMPTZ,
  "endTime" TIMESTAMPTZ NOT NULL,
  "fbLink" TEXT,
  "type" TEXT NOT NULL DEFAULT 'public',
  "hidden" BOOL NOT NULL DEFAULT FALSE,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "afOnly" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "contents" JSONB,
  "contents_latest" TEXT,
  "pingbacks" JSONB
);

-- Index "idx_GardenCodes_schemaVersion", hash 5e79c8a6333d59ae3ee3aae5a2e58bb4
CREATE INDEX IF NOT EXISTS "idx_GardenCodes_schemaVersion" ON "GardenCodes" USING btree ("schemaVersion");

-- Index "idx_GardenCodes_code_deleted", hash bfb60057677cbb6fede669ac09a4f455
CREATE INDEX IF NOT EXISTS "idx_GardenCodes_code_deleted" ON "GardenCodes" USING btree ("code", "deleted");

-- Index "idx_GardenCodes_userId_deleted", hash 0ce6128f44881482dcd45140f9351fc8
CREATE INDEX IF NOT EXISTS "idx_GardenCodes_userId_deleted" ON "GardenCodes" USING btree ("userId", "deleted");

-- Index "idx_GardenCodes_code_deleted_userId", hash 141e1f2f4164290d60ce44e2ff97777d
CREATE INDEX IF NOT EXISTS "idx_GardenCodes_code_deleted_userId" ON "GardenCodes" USING btree ("code", "deleted", "userId");

-- Table "GoogleServiceAccountSessions", hash 3e28e15fd22d4ee37fa2a15724bb8b18
CREATE TABLE "GoogleServiceAccountSessions" (
  _id VARCHAR(27) PRIMARY KEY,
  "email" TEXT NOT NULL,
  "refreshToken" TEXT NOT NULL,
  "estimatedExpiry" TIMESTAMPTZ NOT NULL,
  "active" BOOL NOT NULL,
  "revoked" BOOL NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_GoogleServiceAccountSessions_schemaVersion", hash 91e68032f64cd5bc385f2c6e3ede7ab1
CREATE INDEX IF NOT EXISTS "idx_GoogleServiceAccountSessions_schemaVersion" ON "GoogleServiceAccountSessions" USING btree ("schemaVersion");

-- Table "Images", hash 916e2cd705fc786067921d86e1558f59
CREATE TABLE "Images" (
  _id VARCHAR(27) PRIMARY KEY,
  "originalUrl" TEXT,
  "identifier" TEXT NOT NULL,
  "identifierType" TEXT NOT NULL,
  "cdnHostedUrl" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Images_schemaVersion", hash 2d51b4db2e9315e50fb6fa57e3bc8b7a
CREATE INDEX IF NOT EXISTS "idx_Images_schemaVersion" ON "Images" USING btree ("schemaVersion");

-- Index "idx_Images_identifier", hash f5094f743a61a4cbbcfca541623a2842
CREATE INDEX IF NOT EXISTS "idx_Images_identifier" ON "Images" USING btree ("identifier");

-- Index "idx_Images_cdnHostedUrl", hash 0ee56f026b18f07817fccfb5f1395698
CREATE INDEX IF NOT EXISTS "idx_Images_cdnHostedUrl" ON "Images" USING btree ("cdnHostedUrl");

-- Table "LWEvents", hash d2758469185cd83bd1feb55c069a1a4f
CREATE TABLE "LWEvents" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27),
  "name" TEXT,
  "documentId" TEXT,
  "important" BOOL,
  "properties" JSONB,
  "intercom" BOOL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_LWEvents_schemaVersion", hash 7864174a4c3f83034780a9d70d09acf6
CREATE INDEX IF NOT EXISTS "idx_LWEvents_schemaVersion" ON "LWEvents" USING btree ("schemaVersion");

-- Index "idx_LWEvents_name_createdAt", hash 21daece86cdb38dd88f911c1d6c1ca66
CREATE INDEX IF NOT EXISTS "idx_LWEvents_name_createdAt" ON "LWEvents" USING btree ("name", "createdAt");

-- Index "idx_LWEvents_name_userId_documentId_createdAt", hash 3bf46bab3753b51ee3d7c8ca3799221d
CREATE INDEX IF NOT EXISTS "idx_LWEvents_name_userId_documentId_createdAt" ON "LWEvents" USING btree ("name", "userId", "documentId", "createdAt");

-- Index "idx_LWEvents_name_userId_createdAt", hash d53c61613d168417885a0f573539b373
CREATE INDEX IF NOT EXISTS "idx_LWEvents_name_userId_createdAt" ON "LWEvents" USING btree ("name", "userId", "createdAt");

-- Index "idx_LWEvents_name_properties__ip_createdAt_userId", hash 8877c44ed56ea7fb0c8b43ab33b46c79
CREATE INDEX IF NOT EXISTS "idx_LWEvents_name_properties__ip_createdAt_userId" ON "LWEvents" USING gin (
  "name",
  ("properties" -> 'ip'),
  "createdAt",
  "userId"
);

-- Table "LegacyData", hash d45debc4c574f940da4c065f7f259ff2
CREATE TABLE "LegacyData" (
  _id VARCHAR(27) PRIMARY KEY,
  "objectId" TEXT NOT NULL,
  "collectionName" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_LegacyData_schemaVersion", hash 17db9226c827bf48d48c09b871698cc5
CREATE INDEX IF NOT EXISTS "idx_LegacyData_schemaVersion" ON "LegacyData" USING btree ("schemaVersion");

-- Index "idx_LegacyData_objectId", hash b815bc14f9dbfb24a8b4adf7d9f2d77d
CREATE INDEX IF NOT EXISTS "idx_LegacyData_objectId" ON "LegacyData" USING btree ("objectId");

-- Table "Localgroups", hash 87a36302129cba8276af1951481ba426
CREATE TABLE "Localgroups" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT,
  "nameInAnotherLanguage" TEXT,
  "organizerIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "lastActivity" TIMESTAMPTZ,
  "types" TEXT[] NOT NULL DEFAULT '{''LW''}',
  "categories" TEXT[],
  "isOnline" BOOL NOT NULL DEFAULT FALSE,
  "mongoLocation" JSONB,
  "googleLocation" JSONB,
  "location" TEXT,
  "contactInfo" TEXT,
  "facebookLink" TEXT,
  "facebookPageLink" TEXT,
  "meetupLink" TEXT,
  "slackLink" TEXT,
  "website" TEXT,
  "bannerImageId" TEXT,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "salesforceId" TEXT,
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Localgroups_schemaVersion", hash 93b593fa28385bdef3dc7ae1aa5ffbab
CREATE INDEX IF NOT EXISTS "idx_Localgroups_schemaVersion" ON "Localgroups" USING btree ("schemaVersion");

-- Index "idx_Localgroups_organizerIds_deleted_name", hash e69f78ffefad182e5b7978380dce5ea9
CREATE INDEX IF NOT EXISTS "idx_Localgroups_organizerIds_deleted_name" ON "Localgroups" USING gin ("organizerIds", "deleted", "name");

-- Index "idx_Localgroups_organizerIds_inactive_deleted_name", hash abc0d09b805cce2be8d9f132aaf0256b
CREATE INDEX IF NOT EXISTS "idx_Localgroups_organizerIds_inactive_deleted_name" ON "Localgroups" USING gin ("organizerIds", "inactive", "deleted", "name");

-- Index "idx_Localgroups_organizerIds_inactive_deleted", hash a5f3ca05e948166f61e13baa17cc6b12
CREATE INDEX IF NOT EXISTS "idx_Localgroups_organizerIds_inactive_deleted" ON "Localgroups" USING gin ("organizerIds", "inactive", "deleted");

-- Index "idx_Localgroups_inactive_deleted_name", hash dc236569c3858d0cecf3a0d6d3fc92ff
CREATE INDEX IF NOT EXISTS "idx_Localgroups_inactive_deleted_name" ON "Localgroups" USING btree ("inactive", "deleted", "name");

-- Index "idx_Localgroups_mongoLocation_isOnline_inactive_deleted", hash a55fa07b4b6ebea30d0a4e4e89667dff
CREATE INDEX IF NOT EXISTS "idx_Localgroups_mongoLocation_isOnline_inactive_deleted" ON "Localgroups" USING btree (
  "mongoLocation",
  "isOnline",
  "inactive",
  "deleted"
);

-- Index "idx_Localgroups_isOnline_inactive_deleted_name", hash 7be6f80eaedfe9f223df00491c389782
CREATE INDEX IF NOT EXISTS "idx_Localgroups_isOnline_inactive_deleted_name" ON "Localgroups" USING btree ("isOnline", "inactive", "deleted", "name");

-- Table "ManifoldProbabilitiesCaches", hash d13fb558af5fd34e8f5cb019f86f98d1
CREATE UNLOGGED TABLE "ManifoldProbabilitiesCaches" (
  _id VARCHAR(27) PRIMARY KEY,
  "marketId" TEXT NOT NULL,
  "probability" DOUBLE PRECISION NOT NULL,
  "isResolved" BOOL NOT NULL,
  "year" DOUBLE PRECISION NOT NULL,
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ManifoldProbabilitiesCaches_schemaVersion", hash da45c318cc10a05be5b54496e23ead41
CREATE INDEX IF NOT EXISTS "idx_ManifoldProbabilitiesCaches_schemaVersion" ON "ManifoldProbabilitiesCaches" USING btree ("schemaVersion");

-- Index "idx_ManifoldProbabilitiesCaches_marketId", hash 38472a861f1691d02e80356ad209f74e
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ManifoldProbabilitiesCaches_marketId" ON "ManifoldProbabilitiesCaches" USING btree ("marketId");

-- Table "Messages", hash 288a69c408512027da27e55d43d10788
CREATE TABLE "Messages" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "conversationId" VARCHAR(27) NOT NULL,
  "noEmail" BOOL NOT NULL DEFAULT FALSE,
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Messages_schemaVersion", hash 9a4f639aedb8280254875d6adaba5b65
CREATE INDEX IF NOT EXISTS "idx_Messages_schemaVersion" ON "Messages" USING btree ("schemaVersion");

-- Index "idx_Messages_conversationId_createdAt", hash ba123cb019bacf65d4b5cc72c0df1ebc
CREATE INDEX IF NOT EXISTS "idx_Messages_conversationId_createdAt" ON "Messages" USING btree ("conversationId", "createdAt");

-- Table "Migrations", hash a24b2254be98c9cfdb945f573e746085
CREATE TABLE "Migrations" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "started" TIMESTAMPTZ NOT NULL,
  "finished" BOOL NOT NULL DEFAULT FALSE,
  "succeeded" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Migrations_schemaVersion", hash 4b8d4f63de2f72ae66700d7626f22e13
CREATE INDEX IF NOT EXISTS "idx_Migrations_schemaVersion" ON "Migrations" USING btree ("schemaVersion");

-- Table "ModerationTemplates", hash 2d991e4297729d7ada847fcb237ae0b4
CREATE TABLE "ModerationTemplates" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "collectionName" TEXT NOT NULL,
  "order" DOUBLE PRECISION NOT NULL DEFAULT 10,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "contents" JSONB,
  "contents_latest" TEXT
);

-- Index "idx_ModerationTemplates_schemaVersion", hash 22fe95a1ade1a12ad63f5c391fa894e5
CREATE INDEX IF NOT EXISTS "idx_ModerationTemplates_schemaVersion" ON "ModerationTemplates" USING btree ("schemaVersion");

-- Index "idx_ModerationTemplates_deleted_order", hash dca104072c8770cc29efa9ac69ebd4c9
CREATE INDEX IF NOT EXISTS "idx_ModerationTemplates_deleted_order" ON "ModerationTemplates" USING btree ("deleted", "order");

-- Index "idx_ModerationTemplates_collectionName_deleted_order", hash 61b72e9f0bd30ae929443be821e5c3a9
CREATE INDEX IF NOT EXISTS "idx_ModerationTemplates_collectionName_deleted_order" ON "ModerationTemplates" USING btree ("collectionName", "deleted", "order");

-- Table "ModeratorActions", hash d126f21560c7c3520c4d2a45b2e6406a
CREATE TABLE "ModeratorActions" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "type" TEXT NOT NULL,
  "endedAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ModeratorActions_schemaVersion", hash 0ef2ef01b2370ff47f6e685af0a90fd0
CREATE INDEX IF NOT EXISTS "idx_ModeratorActions_schemaVersion" ON "ModeratorActions" USING btree ("schemaVersion");

-- Index "idx_ModeratorActions_userId_createdAt", hash c14f4434df656a52416f5868733a8c61
CREATE INDEX IF NOT EXISTS "idx_ModeratorActions_userId_createdAt" ON "ModeratorActions" USING btree ("userId", "createdAt");

-- Index "idx_ModeratorActions_type_createdAt_endedAt", hash 434dd371d5d07b938b2a9cdb6ff42b2b
CREATE INDEX IF NOT EXISTS "idx_ModeratorActions_type_createdAt_endedAt" ON "ModeratorActions" USING btree ("type", "createdAt", "endedAt");

-- Table "Notifications", hash 4df31d233d2ae389b51076b571d637c6
CREATE TABLE "Notifications" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "documentId" TEXT,
  "documentType" TEXT,
  "extraData" JSONB,
  "link" TEXT,
  "title" TEXT,
  "message" TEXT NOT NULL,
  "type" TEXT NOT NULL,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "viewed" BOOL NOT NULL DEFAULT FALSE,
  "emailed" BOOL NOT NULL DEFAULT FALSE,
  "waitingForBatch" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Notifications_schemaVersion", hash 86b84473277da6d20a9e3c8d1d41abd3
CREATE INDEX IF NOT EXISTS "idx_Notifications_schemaVersion" ON "Notifications" USING btree ("schemaVersion");

-- Index "idx_Notifications_userId_emailed_waitingForBatch_createdAt_type", hash e572824037b59eded49d186cacad811c
CREATE INDEX IF NOT EXISTS "idx_Notifications_userId_emailed_waitingForBatch_createdAt_type" ON "Notifications" USING btree (
  "userId",
  "emailed",
  "waitingForBatch",
  "createdAt",
  "type"
);

-- Index "idx_Notifications_userId_type_createdAt", hash 2faaade2612600bec5ce12e0bd675848
CREATE INDEX IF NOT EXISTS "idx_Notifications_userId_type_createdAt" ON "Notifications" USING btree ("userId", "type", "createdAt");

-- Index "idx_Notifications_documentId", hash 3edf26434cf9fc9368aa0ab9f3e295d2
CREATE INDEX IF NOT EXISTS "idx_Notifications_documentId" ON "Notifications" USING btree ("documentId");

-- Index "idx_Notifications_createdAt", hash ba34b0a004b8b1fd4c28d9c967eeea9c
CREATE INDEX IF NOT EXISTS "idx_Notifications_createdAt" ON "Notifications" USING btree ("createdAt");

-- Table "PageCache", hash 0b02b954a4045457d6df0d771ed1a06b
CREATE UNLOGGED TABLE "PageCache" (
  _id VARCHAR(27) PRIMARY KEY,
  "path" TEXT NOT NULL,
  "abTestGroups" JSONB NOT NULL,
  "bundleHash" TEXT NOT NULL,
  "renderedAt" TIMESTAMPTZ NOT NULL,
  "expiresAt" TIMESTAMPTZ NOT NULL,
  "ttlMs" DOUBLE PRECISION NOT NULL,
  "renderResult" JSONB NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PageCache_schemaVersion", hash 1974353b84fc40dd9b5ce85da7d5da42
CREATE INDEX IF NOT EXISTS "idx_PageCache_schemaVersion" ON "PageCache" USING btree ("schemaVersion");

-- Index "idx_PageCache_path_bundleHash_expiresAt", hash 726d61358c3cf1d13c509057632a654b
CREATE INDEX IF NOT EXISTS "idx_PageCache_path_bundleHash_expiresAt" ON "PageCache" USING btree ("path", "bundleHash", "expiresAt");

-- Table "PetrovDayLaunchs", hash eafdfff5f5555a3913604e69921da599
CREATE TABLE "PetrovDayLaunchs" (
  _id VARCHAR(27) PRIMARY KEY,
  "launchCode" TEXT NOT NULL,
  "hashedLaunchCode" TEXT,
  "userId" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PetrovDayLaunchs_schemaVersion", hash 04642438ecf68c8f5016e9fa6a708470
CREATE INDEX IF NOT EXISTS "idx_PetrovDayLaunchs_schemaVersion" ON "PetrovDayLaunchs" USING btree ("schemaVersion");

-- Table "PodcastEpisodes", hash d71480adbeb9437ebd38dc132560d967
CREATE TABLE "PodcastEpisodes" (
  _id VARCHAR(27) PRIMARY KEY,
  "podcastId" VARCHAR(27) NOT NULL,
  "title" TEXT NOT NULL,
  "episodeLink" TEXT NOT NULL,
  "externalEpisodeId" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PodcastEpisodes_schemaVersion", hash 33760b9e1ef787bb6ee1c2acd09ab1b4
CREATE INDEX IF NOT EXISTS "idx_PodcastEpisodes_schemaVersion" ON "PodcastEpisodes" USING btree ("schemaVersion");

-- Index "idx_PodcastEpisodes_externalEpisodeId", hash 22dd8a6811708a1a999deb174cc8a536
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PodcastEpisodes_externalEpisodeId" ON "PodcastEpisodes" USING btree ("externalEpisodeId");

-- Table "Podcasts", hash 31103600c7d4868a4769b0a62058f9b2
CREATE TABLE "Podcasts" (
  _id VARCHAR(27) PRIMARY KEY,
  "title" TEXT NOT NULL,
  "applePodcastLink" TEXT,
  "spotifyPodcastLink" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Podcasts_schemaVersion", hash 3411fca4e519504851913029510d1b14
CREATE INDEX IF NOT EXISTS "idx_Podcasts_schemaVersion" ON "Podcasts" USING btree ("schemaVersion");

-- Table "PostEmbeddings", hash df2d8150b5eaa8b64db8e03e7b67d807
CREATE TABLE "PostEmbeddings" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" VARCHAR(27) NOT NULL,
  "postHash" TEXT NOT NULL,
  "lastGeneratedAt" TIMESTAMPTZ NOT NULL,
  "model" TEXT NOT NULL,
  "embeddings" VECTOR (1536) NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PostEmbeddings_schemaVersion", hash 6f869b29bf41899c77a0aa8668b6d24f
CREATE INDEX IF NOT EXISTS "idx_PostEmbeddings_schemaVersion" ON "PostEmbeddings" USING btree ("schemaVersion");

-- Index "idx_PostEmbeddings_postId_model", hash 570e0c4ca1f4587fe2c1f5481674a89d
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PostEmbeddings_postId_model" ON "PostEmbeddings" USING btree ("postId", "model");

-- Table "PostRecommendations", hash 7998f71254379837a9b348f0c7519dac
CREATE TABLE "PostRecommendations" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27),
  "clientId" TEXT,
  "postId" VARCHAR(27) NOT NULL,
  "strategyName" TEXT NOT NULL,
  "strategySettings" JSONB,
  "recommendationCount" INTEGER NOT NULL DEFAULT 0,
  "lastRecommendedAt" TIMESTAMPTZ NOT NULL,
  "clickedAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PostRecommendations_schemaVersion", hash 05300e3f4652890dc5810ed147c21218
CREATE INDEX IF NOT EXISTS "idx_PostRecommendations_schemaVersion" ON "PostRecommendations" USING btree ("schemaVersion");

-- Index "idx_PostRecommendations_userId_clientId_postId", hash 03702f44a3083401e129845720c2c654
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PostRecommendations_userId_clientId_postId" ON "PostRecommendations" USING btree (
  COALESCE("userId", ''),
  COALESCE("clientId", ''),
  "postId"
);

-- Table "PostRelations", hash dd2334e15c4fe3d15f3c4ea3f8cc8047
CREATE TABLE "PostRelations" (
  _id VARCHAR(27) PRIMARY KEY,
  "type" TEXT NOT NULL,
  "sourcePostId" VARCHAR(27) NOT NULL,
  "targetPostId" VARCHAR(27) NOT NULL,
  "order" DOUBLE PRECISION,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PostRelations_schemaVersion", hash d9ed73deca4167d31d99444620cead0a
CREATE INDEX IF NOT EXISTS "idx_PostRelations_schemaVersion" ON "PostRelations" USING btree ("schemaVersion");

-- Index "idx_PostRelations_sourcePostId_order_createdAt", hash 860c57389422de4ab21bb5e1bc114804
CREATE INDEX IF NOT EXISTS "idx_PostRelations_sourcePostId_order_createdAt" ON "PostRelations" USING btree ("sourcePostId", "order", "createdAt");

-- Table "PostViewTimes", hash f2895fdf0848e72383314c799da8c42b
CREATE TABLE "PostViewTimes" (
  _id VARCHAR(27) PRIMARY KEY,
  "updatedAt" TIMESTAMPTZ NOT NULL,
  "windowStart" TIMESTAMPTZ NOT NULL,
  "windowEnd" TIMESTAMPTZ NOT NULL,
  "clientId" VARCHAR(27) NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "totalSeconds" DOUBLE PRECISION NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PostViewTimes_schemaVersion", hash d67d88c4c9effb542b1f0266df8d058e
CREATE INDEX IF NOT EXISTS "idx_PostViewTimes_schemaVersion" ON "PostViewTimes" USING btree ("schemaVersion");

-- Index "idx_PostViewTimes_clientId_postId_windowStart_windowEnd", hash 61f53b9ead19d63e4f41dd4cbfc1da48
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PostViewTimes_clientId_postId_windowStart_windowEnd" ON "PostViewTimes" USING btree ("clientId", "postId", "windowStart", "windowEnd");

-- Index "idx_PostViewTimes_postId", hash c35602cb72cad344c6d65cd502f7df14
CREATE INDEX IF NOT EXISTS "idx_PostViewTimes_postId" ON "PostViewTimes" USING btree ("postId");

-- Index "idx_PostViewTimes_windowEnd", hash f0522d66d10c774e5538d0f4540e2fb0
CREATE INDEX IF NOT EXISTS "idx_PostViewTimes_windowEnd" ON "PostViewTimes" USING btree ("windowEnd");

-- Index "idx_PostViewTimes_windowStart", hash 0388f1dc10e7b3bea0d5d723d691ce87
CREATE INDEX IF NOT EXISTS "idx_PostViewTimes_windowStart" ON "PostViewTimes" USING btree ("windowStart");

-- Table "PostViews", hash b6bafa58d990d72169fe327fda7c9963
CREATE TABLE "PostViews" (
  _id VARCHAR(27) PRIMARY KEY,
  "updatedAt" TIMESTAMPTZ NOT NULL,
  "windowStart" TIMESTAMPTZ NOT NULL,
  "windowEnd" TIMESTAMPTZ NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "viewCount" DOUBLE PRECISION NOT NULL,
  "uniqueViewCount" DOUBLE PRECISION NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_PostViews_schemaVersion", hash 55982e1bd12443526a823efc97da1a38
CREATE INDEX IF NOT EXISTS "idx_PostViews_schemaVersion" ON "PostViews" USING btree ("schemaVersion");

-- Index "idx_PostViews_postId_windowStart_windowEnd", hash 4ff4fac6487b6b1ca9b9a6fd89568be5
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PostViews_postId_windowStart_windowEnd" ON "PostViews" USING btree ("postId", "windowStart", "windowEnd");

-- Index "idx_PostViews_postId", hash c528983ad4f8e8f6be50baa5e81553f9
CREATE INDEX IF NOT EXISTS "idx_PostViews_postId" ON "PostViews" USING btree ("postId");

-- Index "idx_PostViews_windowEnd", hash ef218121f97b6c2a80a2896e64cdacdc
CREATE INDEX IF NOT EXISTS "idx_PostViews_windowEnd" ON "PostViews" USING btree ("windowEnd");

-- Index "idx_PostViews_windowStart", hash ffbdd6675a0d0fb1503bdecf02f2456f
CREATE INDEX IF NOT EXISTS "idx_PostViews_windowStart" ON "PostViews" USING btree ("windowStart");

-- Table "Posts", hash f69f78a31845fa492d917bc3762dad7a
CREATE TABLE "Posts" (
  _id VARCHAR(27) PRIMARY KEY,
  "postedAt" TIMESTAMPTZ NOT NULL,
  "modifiedAt" TIMESTAMPTZ,
  "url" VARCHAR(500),
  "postCategory" TEXT NOT NULL DEFAULT 'post',
  "title" VARCHAR(500) NOT NULL,
  "slug" TEXT NOT NULL,
  "viewCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "lastCommentedAt" TIMESTAMPTZ,
  "clickCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "deletedDraft" BOOL NOT NULL DEFAULT FALSE,
  "status" DOUBLE PRECISION NOT NULL,
  "isFuture" BOOL NOT NULL,
  "sticky" BOOL NOT NULL DEFAULT FALSE,
  "stickyPriority" INTEGER NOT NULL DEFAULT 2,
  "userIP" TEXT,
  "userAgent" TEXT,
  "referrer" TEXT,
  "author" TEXT,
  "userId" VARCHAR(27) NOT NULL,
  "question" BOOL NOT NULL DEFAULT FALSE,
  "authorIsUnreviewed" BOOL NOT NULL DEFAULT FALSE,
  "readTimeMinutesOverride" DOUBLE PRECISION,
  "submitToFrontpage" BOOL NOT NULL DEFAULT TRUE,
  "hiddenRelatedQuestion" BOOL NOT NULL DEFAULT FALSE,
  "originalPostRelationSourceId" TEXT,
  "shortform" BOOL NOT NULL DEFAULT FALSE,
  "canonicalSource" TEXT,
  "nominationCount2018" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "nominationCount2019" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewCount2018" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewCount2019" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewVoteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "positiveReviewVoteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "manifoldReviewMarketId" TEXT,
  "annualReviewMarketCommentId" VARCHAR(27),
  "reviewVoteScoreAF" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewVotesAF" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "reviewVoteScoreHighKarma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewVotesHighKarma" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "reviewVoteScoreAllKarma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewVotesAllKarma" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "finalReviewVoteScoreHighKarma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "finalReviewVotesHighKarma" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "finalReviewVoteScoreAllKarma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "finalReviewVotesAllKarma" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "finalReviewVoteScoreAF" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "finalReviewVotesAF" DOUBLE PRECISION[] NOT NULL DEFAULT '{}',
  "lastCommentPromotedAt" TIMESTAMPTZ,
  "tagRelevance" JSONB,
  "noIndex" BOOL NOT NULL DEFAULT FALSE,
  "rsvps" JSONB[],
  "activateRSVPs" BOOL,
  "nextDayReminderSent" BOOL NOT NULL DEFAULT FALSE,
  "onlyVisibleToLoggedIn" BOOL NOT NULL DEFAULT FALSE,
  "onlyVisibleToEstablishedAccounts" BOOL NOT NULL DEFAULT FALSE,
  "hideFromRecentDiscussions" BOOL NOT NULL DEFAULT FALSE,
  "votingSystem" TEXT DEFAULT 'twoAxis',
  "podcastEpisodeId" VARCHAR(27),
  "forceAllowType3Audio" BOOL NOT NULL DEFAULT FALSE,
  "legacy" BOOL NOT NULL DEFAULT FALSE,
  "legacyId" TEXT,
  "legacySpam" BOOL NOT NULL DEFAULT FALSE,
  "feedId" VARCHAR(27),
  "feedLink" TEXT,
  "curatedDate" TIMESTAMPTZ,
  "metaDate" TIMESTAMPTZ,
  "suggestForCuratedUserIds" VARCHAR(27) [],
  "frontpageDate" TIMESTAMPTZ,
  "collectionTitle" TEXT,
  "coauthorStatuses" JSONB[],
  "hasCoauthorPermission" BOOL NOT NULL DEFAULT TRUE,
  "socialPreviewImageId" TEXT,
  "socialPreviewImageAutoUrl" TEXT,
  "socialPreview" JSONB,
  "fmCrosspost" JSONB NOT NULL DEFAULT '{"isCrosspost":false}'::JSONB,
  "canonicalSequenceId" VARCHAR(27),
  "canonicalCollectionSlug" TEXT,
  "canonicalBookId" VARCHAR(27),
  "canonicalNextPostSlug" TEXT,
  "canonicalPrevPostSlug" TEXT,
  "unlisted" BOOL NOT NULL DEFAULT FALSE,
  "disableRecommendation" BOOL NOT NULL DEFAULT FALSE,
  "defaultRecommendation" BOOL NOT NULL DEFAULT FALSE,
  "hideFromPopularComments" BOOL NOT NULL DEFAULT FALSE,
  "draft" BOOL NOT NULL DEFAULT FALSE,
  "wasEverUndrafted" BOOL NOT NULL DEFAULT FALSE,
  "meta" BOOL NOT NULL DEFAULT FALSE,
  "hideFrontpageComments" BOOL NOT NULL DEFAULT FALSE,
  "maxBaseScore" DOUBLE PRECISION NOT NULL,
  "scoreExceeded2Date" TIMESTAMPTZ,
  "scoreExceeded30Date" TIMESTAMPTZ,
  "scoreExceeded45Date" TIMESTAMPTZ,
  "scoreExceeded75Date" TIMESTAMPTZ,
  "scoreExceeded125Date" TIMESTAMPTZ,
  "scoreExceeded200Date" TIMESTAMPTZ,
  "bannedUserIds" VARCHAR(27) [],
  "commentsLocked" BOOL,
  "commentsLockedToAccountsCreatedAfter" TIMESTAMPTZ,
  "organizerIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "groupId" VARCHAR(27),
  "eventType" TEXT,
  "isEvent" BOOL NOT NULL DEFAULT FALSE,
  "reviewedByUserId" VARCHAR(27),
  "reviewForCuratedUserId" VARCHAR(27),
  "startTime" TIMESTAMPTZ,
  "localStartTime" TIMESTAMPTZ,
  "endTime" TIMESTAMPTZ,
  "localEndTime" TIMESTAMPTZ,
  "eventRegistrationLink" TEXT,
  "joinEventLink" TEXT,
  "onlineEvent" BOOL NOT NULL DEFAULT FALSE,
  "globalEvent" BOOL NOT NULL DEFAULT FALSE,
  "mongoLocation" JSONB,
  "googleLocation" JSONB,
  "location" TEXT,
  "contactInfo" TEXT,
  "facebookLink" TEXT,
  "meetupLink" TEXT,
  "website" TEXT,
  "eventImageId" TEXT,
  "types" TEXT[],
  "metaSticky" BOOL NOT NULL DEFAULT FALSE,
  "sharingSettings" JSONB,
  "shareWithUsers" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "linkSharingKey" TEXT,
  "linkSharingKeyUsedBy" VARCHAR(27) [],
  "commentSortOrder" TEXT,
  "hideAuthor" BOOL NOT NULL DEFAULT FALSE,
  "sideCommentVisibility" TEXT,
  "moderationStyle" TEXT,
  "ignoreRateLimits" BOOL,
  "hideCommentKarma" BOOL NOT NULL DEFAULT FALSE,
  "commentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "topLevelCommentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "criticismTipsDismissed" BOOL,
  "debate" BOOL NOT NULL DEFAULT FALSE,
  "collabEditorDialogue" BOOL NOT NULL DEFAULT FALSE,
  "mostRecentPublishedDialogueResponseDate" TIMESTAMPTZ,
  "rejected" BOOL NOT NULL DEFAULT FALSE,
  "rejectedReason" TEXT,
  "rejectedByUserId" VARCHAR(27),
  "subforumTagId" VARCHAR(27),
  "af" BOOL NOT NULL DEFAULT FALSE,
  "afDate" TIMESTAMPTZ,
  "afCommentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "afLastCommentedAt" TIMESTAMPTZ,
  "afSticky" BOOL NOT NULL DEFAULT FALSE,
  "suggestForAlignmentUserIds" TEXT[] NOT NULL DEFAULT '{}',
  "reviewForAlignmentUserId" TEXT,
  "agentFoundationsId" TEXT,
  "swrCachingEnabled" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "contents" JSONB,
  "contents_latest" TEXT,
  "pingbacks" JSONB,
  "moderationGuidelines_latest" TEXT,
  "customHighlight" JSONB,
  "customHighlight_latest" TEXT,
  "voteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "baseScore" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "extendedScore" JSONB,
  "score" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "afBaseScore" DOUBLE PRECISION,
  "afExtendedScore" JSONB,
  "afVoteCount" DOUBLE PRECISION
);

-- Index "idx_Posts_schemaVersion", hash 868b45fdaa982d11d65d8043ea6df52d
CREATE INDEX IF NOT EXISTS "idx_Posts_schemaVersion" ON "Posts" USING btree ("schemaVersion");

-- Index "idx_posts_coauthorStatuses_postedAt", hash ddad21e9c4c80f658bc65847f61ed1d6
CREATE INDEX IF NOT EXISTS "idx_posts_coauthorStatuses_postedAt" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "coauthorStatuses",
  "userId",
  "postedAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "baseScore"
);

-- Index "idx_posts_score", hash efb2ad58602ce30f214cf3765cbd651e
CREATE INDEX IF NOT EXISTS "idx_posts_score" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "score",
  "isEvent",
  "_id",
  "meta",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_Posts_tagRelevance__$**", hash 519aec59462b7c8f719703be741e90e4
CREATE INDEX IF NOT EXISTS "idx_Posts_tagRelevance__$**" ON "Posts" USING gin (("tagRelevance" -> '$**'));

-- Index "idx_posts_sort_by_topAdjusted", hash 72d39b3f4a3a4b2442a2d4b2038eb03e
CREATE INDEX IF NOT EXISTS "idx_posts_sort_by_topAdjusted" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "postedAt",
  "baseScore",
  "maxBaseScore",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate"
)
WHERE
  (
    "status" = 2 AND
    "draft" IS FALSE AND
    "unlisted" IS FALSE AND
    "isFuture" IS FALSE AND
    "shortform" IS FALSE AND
    "authorIsUnreviewed" IS FALSE AND
    "hiddenRelatedQuestion" IS FALSE AND
    "isEvent" IS FALSE
  );

-- Index "idx_posts_postedAt_baseScore", hash 1ddd5d222b59da26c782882f900e6843
CREATE INDEX IF NOT EXISTS "idx_posts_postedAt_baseScore" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "postedAt",
  "baseScore",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate"
);

-- Index "idx_posts_frontpage", hash ed215efea6bdfe8eb206bb1250ab2822
CREATE INDEX IF NOT EXISTS "idx_posts_frontpage" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "sticky",
  "stickyPriority",
  "score",
  "frontpageDate",
  "_id",
  "meta",
  "isEvent",
  "af",
  "curatedDate",
  "postedAt",
  "baseScore"
)
WHERE
  "frontpageDate" > '1970-01-01T00:00:00.000Z';

-- Index "idx_posts_curated", hash 90f4b9c009a0c943bb5c8ab87f4d178b
CREATE INDEX IF NOT EXISTS "idx_posts_curated" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "sticky",
  "curatedDate",
  "postedAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "baseScore"
)
WHERE
  "curatedDate" > '1970-01-01T00:00:00.000Z';

-- Index "idx_posts_community", hash 11c07e8e38a814a8cb56708a0b6e6ef6
CREATE INDEX IF NOT EXISTS "idx_posts_community" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "sticky",
  "score",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_topQuestions", hash fa7d98ffef0cab2661d22fc9c03c7528
CREATE INDEX IF NOT EXISTS "idx_posts_topQuestions" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "question",
  "lastCommentedAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_Posts_status_isFuture_draft_unlisted_shortform_hiddenRelatedQuestion_authorIsUnreviewed_groupId_rejected_postedAt__id_meta_isEvent_af_frontpageDate_curatedDate_baseScore", hash f3272e05143dc7fa7e84abbbf7bf8c1e
CREATE INDEX IF NOT EXISTS "idx_Posts_status_isFuture_draft_unlisted_shortform_hiddenRelatedQuestion_authorIsUnreviewed_groupId_rejected_postedAt__id_meta_isEvent_af_frontpageDate_curatedDate_baseScore" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "rejected",
  "postedAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "baseScore"
);

-- Index "idx_posts_userId_createdAt", hash 2ccab524232c321aee080b53a3e07ea9
CREATE INDEX IF NOT EXISTS "idx_posts_userId_createdAt" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "userId",
  "hideAuthor",
  "deletedDraft",
  "modifiedAt",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_userId_shareWithUsers", hash 088a4e806dccb2852f1b19f3a9c72896
CREATE INDEX IF NOT EXISTS "idx_posts_userId_shareWithUsers" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "shareWithUsers",
  "deletedDraft",
  "modifiedAt",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_Posts_slug", hash d2992658f160d379e3140b2109396e24
CREATE INDEX IF NOT EXISTS "idx_Posts_slug" ON "Posts" USING btree ("slug");

-- Index "idx_Posts_legacyId", hash 5dc8c56e7122eedc7bde6e24f0ac55d5
CREATE INDEX IF NOT EXISTS "idx_Posts_legacyId" ON "Posts" USING btree ("legacyId");

-- Index "idx_Posts_status_isFuture_draft_unlisted_authorIsUnreviewed_hideFrontpageComments_lastCommentedAt__id_baseScore_af_isEvent_globalEvent_commentCount", hash 34e1e5fe70e6ac3a507eb725eb86fd86
CREATE INDEX IF NOT EXISTS "idx_Posts_status_isFuture_draft_unlisted_authorIsUnreviewed_hideFrontpageComments_lastCommentedAt__id_baseScore_af_isEvent_globalEvent_commentCount" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "authorIsUnreviewed",
  "hideFrontpageComments",
  "lastCommentedAt",
  "_id",
  "baseScore",
  "af",
  "isEvent",
  "globalEvent",
  "commentCount"
);

-- Index "idx_posts_recentDiscussionThreadsList", hash 005d6dad62c2f26c0849c9748ed8858c
CREATE INDEX IF NOT EXISTS "idx_posts_recentDiscussionThreadsList" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "lastCommentedAt",
  "baseScore",
  "hideFrontpageComments",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt"
);

-- Index "idx_posts_globalEvents", hash 04ec7f0aa8bd4f0d477a6b66a0db3465
CREATE INDEX IF NOT EXISTS "idx_posts_globalEvents" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "globalEvent",
  "eventType",
  "startTime",
  "endTime",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_2dsphere", hash 4624c3867e55752a71698600ad50f0c8
CREATE INDEX IF NOT EXISTS "idx_posts_2dsphere" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "mongoLocation",
  "eventType",
  "startTime",
  "endTime",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_events", hash 3f71d51e00b1a336beb1366492ad4264
CREATE INDEX IF NOT EXISTS "idx_posts_events" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "globalEvent",
  "onlineEvent",
  "startTime",
  "endTime",
  "createdAt",
  "baseScore",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt"
);

-- Index "idx_posts_postsWithBannedUsers", hash ca28d8daf4c04869f8ec74858dd21ff6
CREATE INDEX IF NOT EXISTS "idx_posts_postsWithBannedUsers" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "bannedUserIds",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_sunshineNewPosts", hash 8367ed19ffaf4074dad5d34a7876bbf3
CREATE INDEX IF NOT EXISTS "idx_posts_sunshineNewPosts" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "reviewedByUserId",
  "frontpageDate",
  "meta",
  "_id",
  "isEvent",
  "af",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_sunshineNewUsersPosts", hash ca5b92cc497f307b641da7aa1c6c897e
CREATE INDEX IF NOT EXISTS "idx_posts_sunshineNewUsersPosts" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "userId",
  "hideAuthor",
  "reviewedByUserId",
  "frontpageDate",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_sunshineCuratedSuggestions", hash 7117595cab2d121f7cd4d3f8559ef3e1
CREATE INDEX IF NOT EXISTS "idx_posts_sunshineCuratedSuggestions" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "postedAt",
  "reviewForCuratedUserId",
  "suggestForCuratedUserIds",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "baseScore"
)
WHERE
  "suggestForCuratedUserIds" IS NOT NULL;

-- Index "idx_Posts_userId_createdAt", hash 6f5233b89adb9e981838f3f45223a07b
CREATE INDEX IF NOT EXISTS "idx_Posts_userId_createdAt" ON "Posts" USING btree ("userId", "createdAt");

-- Index "idx_Posts_agentFoundationsId", hash 861b67cd933e8ee2312de8d6f462ceb7
CREATE INDEX IF NOT EXISTS "idx_Posts_agentFoundationsId" ON "Posts" USING btree ("agentFoundationsId");

-- Index "idx_Posts_isFuture_postedAt", hash 18721b3a2450ef8a20c6eeb8ba3b028e
CREATE INDEX IF NOT EXISTS "idx_Posts_isFuture_postedAt" ON "Posts" USING btree ("isFuture", "postedAt");

-- Index "idx_Posts_inactive_postedAt", hash 5f075d691c4a0d7e724e9f6f9f9c26e4
CREATE INDEX IF NOT EXISTS "idx_Posts_inactive_postedAt" ON "Posts" USING btree ("inactive", "postedAt");

-- Index "idx_posts_recommendable", hash 85e2a22df5613759de90497a31d86d62
CREATE INDEX IF NOT EXISTS "idx_posts_recommendable" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "meta",
  "disableRecommendation",
  "baseScore",
  "curatedDate",
  "frontpageDate",
  "_id",
  "isEvent",
  "af",
  "postedAt"
);

-- Index "idx_posts_pingbackPosts", hash 42ca0de53eeaacbbfd0315c26e212922
CREATE INDEX IF NOT EXISTS "idx_posts_pingbackPosts" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  ("pingbacks" -> 'Posts'),
  "baseScore",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt"
);

-- Index "idx_posts_nominatablePostsByVote", hash d1cb1f18f15536df97c38c5149bbbf9a
CREATE INDEX IF NOT EXISTS "idx_posts_nominatablePostsByVote" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "_id",
  "userId",
  "isEvent",
  "baseScore",
  "meta",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt"
);

-- Index "idx_posts_positiveReviewVoteCount", hash 92dd31be7f8f6598316cc17d98ff0635
CREATE INDEX IF NOT EXISTS "idx_posts_positiveReviewVoteCount" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "positiveReviewVoteCount",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_posts_positiveReviewVoteCountReviewCount", hash c3a1725eb32f835e8502fa6601f249bd
CREATE INDEX IF NOT EXISTS "idx_posts_positiveReviewVoteCountReviewCount" ON "Posts" USING btree (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "positiveReviewVoteCount",
  "reviewCount",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "af",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
);

-- Index "idx_Posts_userId_postedAt", hash d8224ae89d7828438f4123ff5704a0cf
CREATE INDEX IF NOT EXISTS "idx_Posts_userId_postedAt" ON "Posts" USING btree ("userId", "postedAt");

-- Index "idx_posts_alignmentSuggestedPosts", hash f7917caf6fb7b57ed255a6c2127a3d27
CREATE INDEX IF NOT EXISTS "idx_posts_alignmentSuggestedPosts" ON "Posts" USING gin (
  "status",
  "isFuture",
  "draft",
  "unlisted",
  "shortform",
  "hiddenRelatedQuestion",
  "authorIsUnreviewed",
  "groupId",
  "reviewForAlignmentUserId",
  "af",
  "suggestForAlignmentUserIds",
  "createdAt",
  "_id",
  "meta",
  "isEvent",
  "frontpageDate",
  "curatedDate",
  "postedAt",
  "baseScore"
)
WHERE
  ("suggestForAlignmentUserIds" [0]) IS NOT NULL;

-- Index "idx_Posts_url_postedAt", hash a16cdab43829fdd5b6bc6c30443cdaa1
CREATE INDEX IF NOT EXISTS "idx_Posts_url_postedAt" ON "Posts" USING btree ("url", "postedAt");

-- Index "idx_Posts_fmCrosspost__foreignPostId_postedAt", hash 27ded4a44d697812da928a5b52a01bed
CREATE INDEX IF NOT EXISTS "idx_Posts_fmCrosspost__foreignPostId_postedAt" ON "Posts" USING gin (("fmCrosspost" -> 'foreignPostId'), "postedAt");

-- Index "idx_Posts_defaultRecommendation", hash f4b76ace8901328373ea550f08b0073a
CREATE INDEX IF NOT EXISTS "idx_Posts_defaultRecommendation" ON "Posts" USING btree ("defaultRecommendation");

-- Table "RSSFeeds", hash a8ec2bdf3c4ddf0207965d48ec69619a
CREATE TABLE "RSSFeeds" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "ownedByUser" BOOL NOT NULL DEFAULT FALSE,
  "displayFullContent" BOOL NOT NULL DEFAULT FALSE,
  "nickname" TEXT NOT NULL,
  "url" TEXT NOT NULL,
  "status" TEXT,
  "rawFeed" JSONB NOT NULL,
  "setCanonicalUrl" BOOL NOT NULL DEFAULT FALSE,
  "importAsDraft" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_RSSFeeds_schemaVersion", hash b79a7d869d6c4bc78026f22176a41ae7
CREATE INDEX IF NOT EXISTS "idx_RSSFeeds_schemaVersion" ON "RSSFeeds" USING btree ("schemaVersion");

-- Index "idx_RSSFeeds_userId_createdAt", hash 4486d381d11cb3de65af0c1beb829d71
CREATE INDEX IF NOT EXISTS "idx_RSSFeeds_userId_createdAt" ON "RSSFeeds" USING btree ("userId", "createdAt");

-- Table "ReadStatuses", hash 6a8a531d26ad68992d26ae0046db0425
CREATE TABLE "ReadStatuses" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" VARCHAR(27),
  "tagId" VARCHAR(27),
  "userId" VARCHAR(27) NOT NULL,
  "isRead" BOOL NOT NULL,
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ReadStatuses_schemaVersion", hash af38444136ebca390aa21b8d80879189
CREATE INDEX IF NOT EXISTS "idx_ReadStatuses_schemaVersion" ON "ReadStatuses" USING btree ("schemaVersion");

-- Index "idx_ReadStatuses_userId_postId_isRead_lastUpdated", hash 48428a3566812e4acb92c898872348bf
CREATE INDEX IF NOT EXISTS "idx_ReadStatuses_userId_postId_isRead_lastUpdated" ON "ReadStatuses" USING btree ("userId", "postId", "isRead", "lastUpdated");

-- Index "idx_ReadStatuses_userId_tagId_isRead_lastUpdated", hash 335d9c2e7485e5d8068fc04d0dd5b925
CREATE INDEX IF NOT EXISTS "idx_ReadStatuses_userId_tagId_isRead_lastUpdated" ON "ReadStatuses" USING btree ("userId", "tagId", "isRead", "lastUpdated");

-- Table "RecommendationsCaches", hash 6691603ad995bae9a1252ad5a8cf43ff
CREATE TABLE "RecommendationsCaches" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" TEXT NOT NULL,
  "postId" TEXT NOT NULL,
  "source" TEXT NOT NULL,
  "scenario" TEXT NOT NULL,
  "attributionId" TEXT NOT NULL,
  "ttlMs" DOUBLE PRECISION NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_RecommendationsCaches_schemaVersion", hash 1016c21ecdd0e396935c2fcec6210448
CREATE INDEX IF NOT EXISTS "idx_RecommendationsCaches_schemaVersion" ON "RecommendationsCaches" USING btree ("schemaVersion");

-- Index "idx_RecommendationsCaches_userId_postId_source_scenario", hash 5d613c0dbda30dfe0ff9dbfd36637938
CREATE UNIQUE INDEX IF NOT EXISTS "idx_RecommendationsCaches_userId_postId_source_scenario" ON "RecommendationsCaches" USING btree ("userId", "postId", "source", "scenario");

-- Table "Reports", hash 2d5e534293c8ed78645efc40c01e44a5
CREATE TABLE "Reports" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "reportedUserId" VARCHAR(27),
  "commentId" VARCHAR(27),
  "postId" VARCHAR(27),
  "link" TEXT NOT NULL,
  "claimedUserId" VARCHAR(27),
  "description" TEXT,
  "closedAt" TIMESTAMPTZ,
  "markedAsSpam" BOOL,
  "reportedAsSpam" BOOL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Reports_schemaVersion", hash d4a3bca2c5c0b32f71f34abca921dabf
CREATE INDEX IF NOT EXISTS "idx_Reports_schemaVersion" ON "Reports" USING btree ("schemaVersion");

-- Index "idx_Reports_createdAt", hash 7ef920bccaa7ee9042970004aee02075
CREATE INDEX IF NOT EXISTS "idx_Reports_createdAt" ON "Reports" USING btree ("createdAt");

-- Index "idx_Reports_claimedUserId_createdAt", hash 64043d8bc5382fd4ce058e20f9c4d1d5
CREATE INDEX IF NOT EXISTS "idx_Reports_claimedUserId_createdAt" ON "Reports" USING btree ("claimedUserId", "createdAt");

-- Index "idx_Reports_closedAt_createdAt", hash 2ab55d5c55cf350a29da5607bc752bb7
CREATE INDEX IF NOT EXISTS "idx_Reports_closedAt_createdAt" ON "Reports" USING btree ("closedAt", "createdAt");

-- Table "ReviewVotes", hash 2f8540eee66a75fee3cff7830a3dfadd
CREATE TABLE "ReviewVotes" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "qualitativeScore" INTEGER NOT NULL DEFAULT 4,
  "quadraticScore" INTEGER NOT NULL DEFAULT 0,
  "comment" TEXT,
  "year" TEXT NOT NULL DEFAULT '2018',
  "dummy" BOOL NOT NULL DEFAULT FALSE,
  "reactions" TEXT[],
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ReviewVotes_schemaVersion", hash c283d809f99f9c6653b423cb89076bcc
CREATE INDEX IF NOT EXISTS "idx_ReviewVotes_schemaVersion" ON "ReviewVotes" USING btree ("schemaVersion");

-- Index "idx_ReviewVotes_year_userId_dummy", hash 81b03091901fc95c72cf14c1e0b9227a
CREATE INDEX IF NOT EXISTS "idx_ReviewVotes_year_userId_dummy" ON "ReviewVotes" USING btree ("year", "userId", "dummy");

-- Index "idx_ReviewVotes_postId", hash 286a47299616e756e70b394cd466335f
CREATE INDEX IF NOT EXISTS "idx_ReviewVotes_postId" ON "ReviewVotes" USING btree ("postId");

-- Index "idx_ReviewVotes_postId_userId", hash af0730839f2e575872988c968a201fce
CREATE INDEX IF NOT EXISTS "idx_ReviewVotes_postId_userId" ON "ReviewVotes" USING btree ("postId", "userId");

-- Index "idx_ReviewVotes_year_dummy_createdAt", hash 872356c7b5d1c7b2045236904494dc3b
CREATE INDEX IF NOT EXISTS "idx_ReviewVotes_year_dummy_createdAt" ON "ReviewVotes" USING btree ("year", "dummy", "createdAt");

-- Table "ReviewWinnerArts", hash f57250d3fe51b6b5dacc1c5ddc0d01e0
CREATE TABLE "ReviewWinnerArts" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" TEXT NOT NULL,
  "splashArtImagePrompt" TEXT NOT NULL,
  "splashArtImageUrl" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ReviewWinnerArts_schemaVersion", hash de99823ebd1e89788388fcdad073751a
CREATE INDEX IF NOT EXISTS "idx_ReviewWinnerArts_schemaVersion" ON "ReviewWinnerArts" USING btree ("schemaVersion");

-- Index "idx_ReviewWinnerArts_postId", hash fab0d407d41156242b6ca27263d0e329
CREATE INDEX IF NOT EXISTS "idx_ReviewWinnerArts_postId" ON "ReviewWinnerArts" USING btree ("postId");

-- Table "ReviewWinners", hash 50660b07e42ea26a1377e8d2ce423adf
CREATE TABLE "ReviewWinners" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" VARCHAR(27) NOT NULL,
  "reviewYear" DOUBLE PRECISION NOT NULL,
  "category" TEXT NOT NULL DEFAULT 'misc',
  "curatedOrder" DOUBLE PRECISION NOT NULL,
  "reviewRanking" DOUBLE PRECISION NOT NULL,
  "isAI" BOOL NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_ReviewWinners_schemaVersion", hash 2c83a9184fd96f72286e1a339fcb5ee9
CREATE INDEX IF NOT EXISTS "idx_ReviewWinners_schemaVersion" ON "ReviewWinners" USING btree ("schemaVersion");

-- Index "idx_ReviewWinners_postId", hash fc3b084306e99da132da94f6118a0e9f
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ReviewWinners_postId" ON "ReviewWinners" USING btree ("postId");

-- Index "idx_ReviewWinners_curatedOrder_category", hash fdd8d08498aae38a91ed89aa3ac38bfe
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ReviewWinners_curatedOrder_category" ON "ReviewWinners" USING btree ("curatedOrder", "category");

-- Index "idx_ReviewWinners_reviewYear_reviewRanking", hash 3382f6d5d57a836d70215623ff25b53d
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ReviewWinners_reviewYear_reviewRanking" ON "ReviewWinners" USING btree ("reviewYear", "reviewRanking");

-- Table "Revisions", hash 8801374637b3e577e5ca5449ea513084
CREATE TABLE "Revisions" (
  _id VARCHAR(27) PRIMARY KEY,
  "documentId" TEXT,
  "collectionName" TEXT,
  "fieldName" TEXT,
  "editedAt" TIMESTAMPTZ,
  "autosaveTimeoutStart" TIMESTAMPTZ,
  "updateType" TEXT,
  "version" TEXT NOT NULL,
  "commitMessage" TEXT,
  "userId" VARCHAR(27),
  "draft" BOOL,
  "originalContents" JSONB,
  "html" TEXT,
  "wordCount" DOUBLE PRECISION,
  "changeMetrics" JSONB NOT NULL,
  "googleDocMetadata" JSONB,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "voteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "baseScore" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "extendedScore" JSONB,
  "score" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "afBaseScore" DOUBLE PRECISION,
  "afExtendedScore" JSONB,
  "afVoteCount" DOUBLE PRECISION
);

-- Index "idx_Revisions_schemaVersion", hash 89886a2585cff657c23a923a7b0f4c6d
CREATE INDEX IF NOT EXISTS "idx_Revisions_schemaVersion" ON "Revisions" USING btree ("schemaVersion");

-- Index "idx_Revisions_userId_collectionName_editedAt", hash 4b2515f5aafb369606ef8205350be8d6
CREATE INDEX IF NOT EXISTS "idx_Revisions_userId_collectionName_editedAt" ON "Revisions" USING btree ("userId", "collectionName", "editedAt");

-- Index "idx_Revisions_collectionName_fieldName_editedAt__id_changeMetrics", hash 69bcc0e87af4242b6bed473deb1f01c9
CREATE INDEX IF NOT EXISTS "idx_Revisions_collectionName_fieldName_editedAt__id_changeMetrics" ON "Revisions" USING btree (
  "collectionName",
  "fieldName",
  "editedAt",
  "_id",
  "changeMetrics"
);

-- Index "idx_Revisions_documentId_version_fieldName_editedAt", hash 30c03007d122e0c394e2f0321a968bd2
CREATE INDEX IF NOT EXISTS "idx_Revisions_documentId_version_fieldName_editedAt" ON "Revisions" USING btree ("documentId", "version", "fieldName", "editedAt");

-- Table "Sequences", hash e58f44cbfcde4b13af531f34687ea6d5
CREATE TABLE "Sequences" (
  _id VARCHAR(27) PRIMARY KEY,
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "title" TEXT NOT NULL,
  "bannerImageId" TEXT,
  "gridImageId" TEXT,
  "hideFromAuthorPage" BOOL NOT NULL DEFAULT FALSE,
  "draft" BOOL NOT NULL DEFAULT FALSE,
  "isDeleted" BOOL NOT NULL DEFAULT FALSE,
  "curatedOrder" DOUBLE PRECISION,
  "userProfileOrder" DOUBLE PRECISION,
  "canonicalCollectionSlug" TEXT,
  "hidden" BOOL NOT NULL DEFAULT FALSE,
  "noindex" BOOL NOT NULL DEFAULT FALSE,
  "af" BOOL NOT NULL DEFAULT FALSE,
  "contents" JSONB,
  "contents_latest" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Sequences_schemaVersion", hash c88edf4ca151c4353e2515b20ac4ba43
CREATE INDEX IF NOT EXISTS "idx_Sequences_schemaVersion" ON "Sequences" USING btree ("schemaVersion");

-- Index "idx_Sequences_hidden_af_isDeleted_userId_userProfileOrder", hash a64051ade56d23d123a9439b1618b6e5
CREATE INDEX IF NOT EXISTS "idx_Sequences_hidden_af_isDeleted_userId_userProfileOrder" ON "Sequences" USING btree (
  "hidden",
  "af",
  "isDeleted",
  "userId",
  "userProfileOrder"
);

-- Index "idx_Sequences_hidden_af_isDeleted_userId_draft_hideFromAuthorPage_userProfileOrder", hash 8e57410c6a1b1a463ef1ce0dcd5b643c
CREATE INDEX IF NOT EXISTS "idx_Sequences_hidden_af_isDeleted_userId_draft_hideFromAuthorPage_userProfileOrder" ON "Sequences" USING btree (
  "hidden",
  "af",
  "isDeleted",
  "userId",
  "draft",
  "hideFromAuthorPage",
  "userProfileOrder"
);

-- Index "idx_Sequences_hidden_af_isDeleted_curatedOrder", hash 3bb16c4389710b6a9b9ae096b39abbc5
CREATE INDEX IF NOT EXISTS "idx_Sequences_hidden_af_isDeleted_curatedOrder" ON "Sequences" USING btree ("hidden", "af", "isDeleted", "curatedOrder");

-- Table "Sessions", hash f18afd9924be5a099d04d225aad23915
CREATE TABLE "Sessions" (
  _id TEXT NOT NULL PRIMARY KEY,
  "session" JSONB,
  "expires" TIMESTAMPTZ,
  "lastModified" TIMESTAMPTZ
);

-- Index "idx_Sessions__id_expires", hash 0504a0582d3d1cc7f678d3b0295156fe
CREATE INDEX IF NOT EXISTS "idx_Sessions__id_expires" ON "Sessions" USING btree ("_id", "expires");

-- Index "idx_Sessions_expires", hash a10586b1e3f15db3f72bd1cce90a12f5
CREATE INDEX IF NOT EXISTS "idx_Sessions_expires" ON "Sessions" USING btree ("expires");

-- Table "SideCommentCaches", hash d81967abf424b366ec204f987f41bd0e
CREATE TABLE "SideCommentCaches" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" VARCHAR(27) NOT NULL,
  "annotatedHtml" TEXT NOT NULL,
  "commentsByBlock" JSONB NOT NULL,
  "version" DOUBLE PRECISION NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_SideCommentCaches_schemaVersion", hash 6f7cbe4505d4e679b2bf88bd4e5d7ab1
CREATE INDEX IF NOT EXISTS "idx_SideCommentCaches_schemaVersion" ON "SideCommentCaches" USING btree ("schemaVersion");

-- Index "idx_SideCommentCaches_postId", hash a37595c07af4106bb13ef2fb4e20e026
CREATE INDEX IF NOT EXISTS "idx_SideCommentCaches_postId" ON "SideCommentCaches" USING btree ("postId");

-- Index "idx_SideCommentCaches_postId_version", hash 08d05ee3527f1598c0062d206f35e3dc
CREATE UNIQUE INDEX IF NOT EXISTS "idx_SideCommentCaches_postId_version" ON "SideCommentCaches" USING btree ("postId", "version");

-- Table "SplashArtCoordinates", hash f12424c0c24ab7334ce64a633a9956e6
CREATE TABLE "SplashArtCoordinates" (
  _id VARCHAR(27) PRIMARY KEY,
  "reviewWinnerArtId" VARCHAR(27) NOT NULL,
  "leftXPct" DOUBLE PRECISION NOT NULL,
  "leftYPct" DOUBLE PRECISION NOT NULL,
  "leftHeightPct" DOUBLE PRECISION NOT NULL,
  "leftWidthPct" DOUBLE PRECISION NOT NULL,
  "leftFlipped" BOOL NOT NULL DEFAULT FALSE,
  "middleXPct" DOUBLE PRECISION NOT NULL,
  "middleYPct" DOUBLE PRECISION NOT NULL,
  "middleHeightPct" DOUBLE PRECISION NOT NULL,
  "middleWidthPct" DOUBLE PRECISION NOT NULL,
  "middleFlipped" BOOL NOT NULL DEFAULT FALSE,
  "rightXPct" DOUBLE PRECISION NOT NULL,
  "rightYPct" DOUBLE PRECISION NOT NULL,
  "rightHeightPct" DOUBLE PRECISION NOT NULL,
  "rightWidthPct" DOUBLE PRECISION NOT NULL,
  "rightFlipped" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_SplashArtCoordinates_schemaVersion", hash 56667b6d713ebadc9faf72ba8bf53e88
CREATE INDEX IF NOT EXISTS "idx_SplashArtCoordinates_schemaVersion" ON "SplashArtCoordinates" USING btree ("schemaVersion");

-- Index "idx_SplashArtCoordinates_reviewWinnerArtId_createdAt", hash ae4114f771262dfad2c3f3ce9aa4a0c7
CREATE INDEX IF NOT EXISTS "idx_SplashArtCoordinates_reviewWinnerArtId_createdAt" ON "SplashArtCoordinates" USING btree ("reviewWinnerArtId", "createdAt");

-- Table "Spotlights", hash 2a5e479e518ab2873651cd8f97bfe770
CREATE TABLE "Spotlights" (
  _id VARCHAR(27) PRIMARY KEY,
  "documentId" TEXT NOT NULL,
  "documentType" TEXT NOT NULL DEFAULT 'Sequence',
  "position" DOUBLE PRECISION NOT NULL,
  "duration" DOUBLE PRECISION NOT NULL DEFAULT 3,
  "customTitle" TEXT,
  "customSubtitle" TEXT,
  "headerTitle" TEXT,
  "headerTitleLeftColor" TEXT,
  "headerTitleRightColor" TEXT,
  "lastPromotedAt" TIMESTAMPTZ NOT NULL DEFAULT '1970-01-01T00:00:00.000Z',
  "draft" BOOL NOT NULL DEFAULT TRUE,
  "showAuthor" BOOL NOT NULL DEFAULT FALSE,
  "imageFade" BOOL NOT NULL DEFAULT TRUE,
  "imageFadeColor" TEXT,
  "spotlightImageId" TEXT,
  "spotlightDarkImageId" TEXT,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "description" JSONB,
  "description_latest" TEXT
);

-- Index "idx_Spotlights_schemaVersion", hash a5d35747aaf5af3c851ec617c17108b2
CREATE INDEX IF NOT EXISTS "idx_Spotlights_schemaVersion" ON "Spotlights" USING btree ("schemaVersion");

-- Index "idx_Spotlights_lastPromotedAt", hash 188998f36e6abeee200be06b63c414e7
CREATE INDEX IF NOT EXISTS "idx_Spotlights_lastPromotedAt" ON "Spotlights" USING btree ("lastPromotedAt");

-- Index "idx_Spotlights_position", hash ea8d45fa296c8b8e50d4edbfb0a96d4d
CREATE INDEX IF NOT EXISTS "idx_Spotlights_position" ON "Spotlights" USING btree ("position");

-- Table "Subscriptions", hash 08c4c6f4373b0d384b5fb612f5b94c40
CREATE TABLE "Subscriptions" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "state" TEXT NOT NULL,
  "documentId" TEXT,
  "collectionName" TEXT NOT NULL,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "type" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Subscriptions_schemaVersion", hash 8c8bd551c328cdeceff1d185c098ffe6
CREATE INDEX IF NOT EXISTS "idx_Subscriptions_schemaVersion" ON "Subscriptions" USING btree ("schemaVersion");

-- Index "idx_Subscriptions_userId_documentId_collectionName_type_createdAt", hash e438b83fd20279578184339b5e6683b3
CREATE INDEX IF NOT EXISTS "idx_Subscriptions_userId_documentId_collectionName_type_createdAt" ON "Subscriptions" USING btree (
  "userId",
  "documentId",
  "collectionName",
  "type",
  "createdAt"
);

-- Table "SurveyQuestions", hash 166d168c7b950a92dddcce387c850822
CREATE TABLE "SurveyQuestions" (
  _id VARCHAR(27) PRIMARY KEY,
  "surveyId" VARCHAR(27) NOT NULL,
  "question" TEXT NOT NULL,
  "format" TEXT NOT NULL,
  "order" DOUBLE PRECISION NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_SurveyQuestions_schemaVersion", hash 6e1d0f57dd383a7d2013311db20a3c9d
CREATE INDEX IF NOT EXISTS "idx_SurveyQuestions_schemaVersion" ON "SurveyQuestions" USING btree ("schemaVersion");

-- Index "idx_SurveyQuestions_surveyId", hash 6878b908fbdb79039fa5548a92ada003
CREATE INDEX IF NOT EXISTS "idx_SurveyQuestions_surveyId" ON "SurveyQuestions" USING btree ("surveyId");

-- Table "SurveyResponses", hash cc7f6492f0c23da41bf23457d376f137
CREATE TABLE "SurveyResponses" (
  _id VARCHAR(27) PRIMARY KEY,
  "surveyId" VARCHAR(27) NOT NULL,
  "surveyScheduleId" VARCHAR(27) NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "clientId" VARCHAR(27) NOT NULL,
  "response" JSONB NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_SurveyResponses_schemaVersion", hash b02de3a0055e5bccaa1c1747a17ac999
CREATE INDEX IF NOT EXISTS "idx_SurveyResponses_schemaVersion" ON "SurveyResponses" USING btree ("schemaVersion");

-- Index "idx_SurveyResponses_surveyId", hash 46a1f2989771723db445dec9fddc2dab
CREATE INDEX IF NOT EXISTS "idx_SurveyResponses_surveyId" ON "SurveyResponses" USING btree ("surveyId");

-- Index "idx_SurveyResponses_surveyScheduleId", hash fd447e9879ad508eac762707466d39b2
CREATE INDEX IF NOT EXISTS "idx_SurveyResponses_surveyScheduleId" ON "SurveyResponses" USING btree ("surveyScheduleId");

-- Index "idx_SurveyResponses_userId", hash 0456fc6b8444107b3f476c9a733eb688
CREATE INDEX IF NOT EXISTS "idx_SurveyResponses_userId" ON "SurveyResponses" USING btree ("userId");

-- Index "idx_SurveyResponses_clientId", hash 89a477b51727885187b47ec1508ca474
CREATE INDEX IF NOT EXISTS "idx_SurveyResponses_clientId" ON "SurveyResponses" USING btree ("clientId");

-- Table "SurveySchedules", hash 53d24b0c576e569edcbe89b20a0dc8be
CREATE TABLE "SurveySchedules" (
  _id VARCHAR(27) PRIMARY KEY,
  "surveyId" VARCHAR(27) NOT NULL,
  "name" TEXT NOT NULL,
  "impressionsLimit" DOUBLE PRECISION,
  "maxVisitorPercentage" DOUBLE PRECISION,
  "minKarma" DOUBLE PRECISION,
  "maxKarma" DOUBLE PRECISION,
  "target" TEXT NOT NULL DEFAULT 'allUsers',
  "startDate" TIMESTAMPTZ,
  "endDate" TIMESTAMPTZ,
  "deactivated" BOOL NOT NULL DEFAULT FALSE,
  "clientIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_SurveySchedules_schemaVersion", hash 548712115859d23765dd249446c0202d
CREATE INDEX IF NOT EXISTS "idx_SurveySchedules_schemaVersion" ON "SurveySchedules" USING btree ("schemaVersion");

-- Index "idx_SurveySchedules_surveyId", hash c361b92ca5357d0557a78587c38d59e4
CREATE INDEX IF NOT EXISTS "idx_SurveySchedules_surveyId" ON "SurveySchedules" USING btree ("surveyId");

-- Index "idx_SurveySchedules_clientIds", hash a54f63b85285301926274f817fe2eca9
CREATE INDEX IF NOT EXISTS "idx_SurveySchedules_clientIds" ON "SurveySchedules" USING gin ("clientIds");

-- Table "Surveys", hash 0174f64f1611a293eee98538d61186e5
CREATE TABLE "Surveys" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Surveys_schemaVersion", hash 68e98aafd0fa3cb1efc412e5d3edc8f5
CREATE INDEX IF NOT EXISTS "idx_Surveys_schemaVersion" ON "Surveys" USING btree ("schemaVersion");

-- Table "TagFlags", hash 93eee3d967b7cf272f3ed4347d0f40d9
CREATE TABLE "TagFlags" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "slug" TEXT NOT NULL,
  "order" DOUBLE PRECISION,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "contents" JSONB,
  "contents_latest" TEXT
);

-- Index "idx_TagFlags_schemaVersion", hash 6e10621d533d6c4c1e18bde645b558b4
CREATE INDEX IF NOT EXISTS "idx_TagFlags_schemaVersion" ON "TagFlags" USING btree ("schemaVersion");

-- Index "idx_TagFlags_deleted_order_name", hash 0e8cd931b93bd7bb5de2f890be19f573
CREATE INDEX IF NOT EXISTS "idx_TagFlags_deleted_order_name" ON "TagFlags" USING btree ("deleted", "order", "name");

-- Table "TagRels", hash 8d50456042443e83960b5cef1c4fd3a0
CREATE TABLE "TagRels" (
  _id VARCHAR(27) PRIMARY KEY,
  "tagId" VARCHAR(27) NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "userId" VARCHAR(27),
  "backfilled" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "voteCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "baseScore" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "extendedScore" JSONB,
  "score" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "inactive" BOOL NOT NULL DEFAULT FALSE,
  "afBaseScore" DOUBLE PRECISION,
  "afExtendedScore" JSONB,
  "afVoteCount" DOUBLE PRECISION
);

-- Index "idx_TagRels_schemaVersion", hash adaedc1f2dae9b010cd0c7af5c025488
CREATE INDEX IF NOT EXISTS "idx_TagRels_schemaVersion" ON "TagRels" USING btree ("schemaVersion");

-- Index "idx_TagRels_postId", hash a168b7ca7c9f186b6b2939d957a88a48
CREATE INDEX IF NOT EXISTS "idx_TagRels_postId" ON "TagRels" USING btree ("postId");

-- Index "idx_TagRels_tagId", hash d726549e45ae78cf8864716b449c0ab7
CREATE INDEX IF NOT EXISTS "idx_TagRels_tagId" ON "TagRels" USING btree ("tagId");

-- Table "Tags", hash c8fd5b7d21da5d0da9355c7d023f258d
CREATE TABLE "Tags" (
  _id VARCHAR(27) PRIMARY KEY,
  "name" TEXT NOT NULL,
  "shortName" TEXT,
  "subtitle" TEXT,
  "slug" TEXT NOT NULL,
  "oldSlugs" TEXT[],
  "core" BOOL NOT NULL DEFAULT FALSE,
  "isPostType" BOOL NOT NULL DEFAULT FALSE,
  "suggestedAsFilter" BOOL NOT NULL DEFAULT FALSE,
  "defaultOrder" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "descriptionTruncationCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "postCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "userId" VARCHAR(27),
  "adminOnly" BOOL NOT NULL DEFAULT FALSE,
  "canEditUserIds" VARCHAR(27) [],
  "charsAdded" DOUBLE PRECISION,
  "charsRemoved" DOUBLE PRECISION,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "lastCommentedAt" TIMESTAMPTZ,
  "lastSubforumCommentAt" TIMESTAMPTZ,
  "needsReview" BOOL NOT NULL DEFAULT TRUE,
  "reviewedByUserId" VARCHAR(27),
  "wikiGrade" INTEGER NOT NULL DEFAULT 2,
  "wikiOnly" BOOL NOT NULL DEFAULT FALSE,
  "bannerImageId" TEXT,
  "squareImageId" TEXT,
  "tagFlagsIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "lesswrongWikiImportRevision" TEXT,
  "lesswrongWikiImportSlug" TEXT,
  "lesswrongWikiImportCompleted" BOOL,
  "htmlWithContributorAnnotations" TEXT,
  "contributionStats" JSONB,
  "introSequenceId" VARCHAR(27),
  "postsDefaultSortOrder" TEXT,
  "canVoteOnRels" TEXT[],
  "isSubforum" BOOL NOT NULL DEFAULT FALSE,
  "subforumModeratorIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "subforumIntroPostId" VARCHAR(27),
  "parentTagId" VARCHAR(27),
  "subTagIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "autoTagModel" TEXT,
  "autoTagPrompt" TEXT,
  "noindex" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "description" JSONB,
  "description_latest" TEXT,
  "subforumWelcomeText" JSONB,
  "subforumWelcomeText_latest" TEXT,
  "moderationGuidelines" JSONB,
  "moderationGuidelines_latest" TEXT
);

-- Index "idx_Tags_schemaVersion", hash 9f1281bab320c9e4ade41f4474d9c585
CREATE INDEX IF NOT EXISTS "idx_Tags_schemaVersion" ON "Tags" USING btree ("schemaVersion");

-- Index "idx_Tags_deleted_adminOnly", hash f2ea09c147b548fe8e22ee8d6d7074e2
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly" ON "Tags" USING btree ("deleted", "adminOnly");

-- Index "idx_Tags_deleted_adminOnly_name", hash f5de191b198a570983940fbfb0ca16a9
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_name" ON "Tags" USING btree ("deleted", "adminOnly", "name");

-- Index "idx_Tags_deleted_userId_createdAt", hash fba716ac88d27ce21abf19f48850da56
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_userId_createdAt" ON "Tags" USING btree ("deleted", "userId", "createdAt");

-- Index "idx_Tags_deleted_adminOnly_wikiOnly_createdAt", hash 59ecb3a0295d1f73c92ca2a1e964f37b
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_wikiOnly_createdAt" ON "Tags" USING btree ("deleted", "adminOnly", "wikiOnly", "createdAt");

-- Index "idx_Tags_deleted_adminOnly_wikiGrade_defaultOrder_postCount_name", hash 8dd1a08f86ff8dfe8961478071197fba
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_wikiGrade_defaultOrder_postCount_name" ON "Tags" USING btree (
  "deleted",
  "adminOnly",
  "wikiGrade",
  "defaultOrder",
  "postCount",
  "name"
);

-- Index "idx_Tags_deleted_slug_oldSlugs", hash 8cb08461ed56d16a88196371f3e6972c
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_slug_oldSlugs" ON "Tags" USING gin ("deleted", "slug", "oldSlugs");

-- Index "idx_Tags_deleted_core_name", hash b29da866dcf35f514fb8541cbbe27035
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_core_name" ON "Tags" USING btree ("deleted", "core", "name");

-- Index "idx_Tags_deleted_isPostType_name", hash 2cb4d32e8b1076d18ddd778f80a86061
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_isPostType_name" ON "Tags" USING btree ("deleted", "isPostType", "name");

-- Index "idx_Tags_deleted_createdAt", hash 902332a6ec59529280c63d968180b29c
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_createdAt" ON "Tags" USING btree ("deleted", "createdAt");

-- Index "idx_Tags_deleted_needsReview_createdAt", hash a7f7927d77ac57adf447442ce1744ae6
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_needsReview_createdAt" ON "Tags" USING btree ("deleted", "needsReview", "createdAt");

-- Index "idx_Tags_deleted_adminOnly_suggestedAsFilter_defaultOrder_name", hash 35e61a418ae59dcc446a94a793eb56a5
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_suggestedAsFilter_defaultOrder_name" ON "Tags" USING btree (
  "deleted",
  "adminOnly",
  "suggestedAsFilter",
  "defaultOrder",
  "name"
);

-- Index "idx_Tags_deleted_adminOnly_lesswrongWikiImportSlug", hash 556d39fa60f95bd5e907df180fa23e1f
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_lesswrongWikiImportSlug" ON "Tags" USING btree ("deleted", "adminOnly", "lesswrongWikiImportSlug");

-- Index "idx_Tags_deleted_adminOnly_tagFlagsIds", hash 127789b8c34eae3f8e5a53d4818a9098
CREATE INDEX IF NOT EXISTS "idx_Tags_deleted_adminOnly_tagFlagsIds" ON "Tags" USING gin ("deleted", "adminOnly", "tagFlagsIds");

-- Index "idx_Tags_name", hash 436ac7814a88639259f4ba50a38deb2c
CREATE INDEX IF NOT EXISTS "idx_Tags_name" ON "Tags" USING btree ("name");

-- Index "idx_Tags_parentTagId", hash 4fd510db5b7ac6d006db6f08c6ce774a
CREATE INDEX IF NOT EXISTS "idx_Tags_parentTagId" ON "Tags" USING btree ("parentTagId");

-- Table "Tweets", hash b19301e17e9028ada0ff09a6a21be169
CREATE TABLE "Tweets" (
  _id VARCHAR(27) PRIMARY KEY,
  "postId" TEXT NOT NULL,
  "tweetId" TEXT NOT NULL,
  "content" TEXT NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Tweets_schemaVersion", hash 41a33ff99c5c8dcfd994b0d297da58df
CREATE INDEX IF NOT EXISTS "idx_Tweets_schemaVersion" ON "Tweets" USING btree ("schemaVersion");

-- Index "idx_Tweets_postId", hash 4523b8c08de9bab7e8760041a6ac3432
CREATE INDEX IF NOT EXISTS "idx_Tweets_postId" ON "Tweets" USING btree ("postId");

-- Index "idx_Tweets_tweetId", hash 024d629aafe2c43ff49f9f941e915524
CREATE INDEX IF NOT EXISTS "idx_Tweets_tweetId" ON "Tweets" USING btree ("tweetId");

-- Table "TypingIndicators", hash b97ae11df17abd3e2fceb7427d545963
CREATE TABLE "TypingIndicators" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" TEXT NOT NULL,
  "documentId" TEXT NOT NULL,
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_TypingIndicators_schemaVersion", hash efac39a4a19d27486721cc3a001bbfab
CREATE INDEX IF NOT EXISTS "idx_TypingIndicators_schemaVersion" ON "TypingIndicators" USING btree ("schemaVersion");

-- Index "idx_TypingIndicators_documentId_userId", hash 9de9143abeca3103265b48323ed17094
CREATE UNIQUE INDEX IF NOT EXISTS "idx_TypingIndicators_documentId_userId" ON "TypingIndicators" USING btree ("documentId", "userId");

-- Table "UserActivities", hash db9e22420d786ee33fd533dd7ad055c2
CREATE TABLE "UserActivities" (
  _id VARCHAR(27) PRIMARY KEY,
  "visitorId" TEXT NOT NULL,
  "type" TEXT NOT NULL,
  "startDate" TIMESTAMPTZ NOT NULL,
  "endDate" TIMESTAMPTZ NOT NULL,
  "activityArray" DOUBLE PRECISION[] NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserActivities_schemaVersion", hash 44389d3016f20599a3eaa22c40360b6d
CREATE INDEX IF NOT EXISTS "idx_UserActivities_schemaVersion" ON "UserActivities" USING btree ("schemaVersion");

-- Index "idx_UserActivities_visitorId_type", hash 64c0327e70bbefd9e1c623c3ff5c3e4e
CREATE INDEX IF NOT EXISTS "idx_UserActivities_visitorId_type" ON "UserActivities" USING btree ("visitorId", "type");

-- Table "UserEAGDetails", hash 1d5e4282df499df43b248e3f6d03c7a3
CREATE TABLE "UserEAGDetails" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "careerStage" TEXT[],
  "countryOrRegion" TEXT,
  "nearestCity" TEXT,
  "willingnessToRelocate" JSONB,
  "experiencedIn" TEXT[],
  "interestedIn" TEXT[],
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserEAGDetails_schemaVersion", hash 12ed87e0216873ab10da286dcc1e7904
CREATE INDEX IF NOT EXISTS "idx_UserEAGDetails_schemaVersion" ON "UserEAGDetails" USING btree ("schemaVersion");

-- Index "idx_UserEAGDetails_userId", hash e61374fee405b034c6f8ac86e6731110
CREATE UNIQUE INDEX IF NOT EXISTS "idx_UserEAGDetails_userId" ON "UserEAGDetails" USING btree ("userId");

-- Table "UserJobAds", hash 1c8ac5c92f0ae2757161971967bd8c4c
CREATE TABLE "UserJobAds" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "jobName" TEXT NOT NULL,
  "adState" TEXT NOT NULL,
  "reminderSetAt" TIMESTAMPTZ,
  "lastUpdated" TIMESTAMPTZ NOT NULL,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserJobAds_userId_jobName", hash 2dd5c7f7f0f62e915323fe15ea008b80
CREATE UNIQUE INDEX IF NOT EXISTS "idx_UserJobAds_userId_jobName" ON "UserJobAds" USING btree ("userId", "jobName");

-- Index "idx_UserJobAds_schemaVersion", hash 6cbac2ae806ba1a717c3155e905450e6
CREATE INDEX IF NOT EXISTS "idx_UserJobAds_schemaVersion" ON "UserJobAds" USING btree ("schemaVersion");

-- Index "idx_UserJobAds_userId", hash ff7ee58d8098a1144c71f22de164614c
CREATE INDEX IF NOT EXISTS "idx_UserJobAds_userId" ON "UserJobAds" USING btree ("userId");

-- Index "idx_UserJobAds_jobName_adState", hash a63c978ef899ade1379399293e789e9f
CREATE INDEX IF NOT EXISTS "idx_UserJobAds_jobName_adState" ON "UserJobAds" USING btree ("jobName", "adState");

-- Table "UserMostValuablePosts", hash 7a534d4959718c555a93eab73c2b6e0c
CREATE TABLE "UserMostValuablePosts" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "postId" VARCHAR(27) NOT NULL,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserMostValuablePosts_schemaVersion", hash 1bbcf65e83ab354be9002ce625e1245a
CREATE INDEX IF NOT EXISTS "idx_UserMostValuablePosts_schemaVersion" ON "UserMostValuablePosts" USING btree ("schemaVersion");

-- Index "idx_UserMostValuablePosts_userId", hash 25cf687b2d27dac6cb854463c936049e
CREATE INDEX IF NOT EXISTS "idx_UserMostValuablePosts_userId" ON "UserMostValuablePosts" USING btree ("userId");

-- Index "idx_UserMostValuablePosts_userId_postId", hash e5525b082d1080743dea2b6fed6a83c9
CREATE INDEX IF NOT EXISTS "idx_UserMostValuablePosts_userId_postId" ON "UserMostValuablePosts" USING btree ("userId", "postId");

-- Table "UserRateLimits", hash 88c66914cd73fa53c03cd3b9257af8dc
CREATE TABLE "UserRateLimits" (
  _id VARCHAR(27) PRIMARY KEY,
  "userId" VARCHAR(27) NOT NULL,
  "type" TEXT NOT NULL,
  "intervalUnit" TEXT NOT NULL,
  "intervalLength" DOUBLE PRECISION NOT NULL,
  "actionsPerInterval" DOUBLE PRECISION NOT NULL,
  "endedAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserRateLimits_schemaVersion", hash c41f51951dfc27f7c88b117b68726d95
CREATE INDEX IF NOT EXISTS "idx_UserRateLimits_schemaVersion" ON "UserRateLimits" USING btree ("schemaVersion");

-- Index "idx_UserRateLimits_userId_createdAt_endedAt", hash 4ecdbea24f4a6d2d3d833cdaafe989e0
CREATE INDEX IF NOT EXISTS "idx_UserRateLimits_userId_createdAt_endedAt" ON "UserRateLimits" USING btree ("userId", "createdAt", "endedAt");

-- Table "UserTagRels", hash b4953ee2bd9d263a797b499a65feb9e8
CREATE TABLE "UserTagRels" (
  _id VARCHAR(27) PRIMARY KEY,
  "tagId" VARCHAR(27),
  "userId" VARCHAR(27) NOT NULL,
  "subforumLastVisitedAt" TIMESTAMPTZ,
  "subforumShowUnreadInSidebar" BOOL NOT NULL DEFAULT TRUE,
  "subforumEmailNotifications" BOOL NOT NULL DEFAULT FALSE,
  "subforumHideIntroPost" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_UserTagRels_schemaVersion", hash 690726726ffdcfccc8d880b2b5b9efc7
CREATE INDEX IF NOT EXISTS "idx_UserTagRels_schemaVersion" ON "UserTagRels" USING btree ("schemaVersion");

-- Index "idx_UserTagRels_tagId_userId", hash f4263e299eb78e6bd5ca595591b60df4
CREATE UNIQUE INDEX IF NOT EXISTS "idx_UserTagRels_tagId_userId" ON "UserTagRels" USING btree (COALESCE("tagId", ''), "userId");

-- Table "Users", hash fc2302228267a47ab8a5bb65859fd0d4
CREATE TABLE "Users" (
  _id VARCHAR(27) PRIMARY KEY,
  "username" TEXT,
  "emails" JSONB[],
  "isAdmin" BOOL NOT NULL DEFAULT FALSE,
  "profile" JSONB,
  "services" JSONB,
  "displayName" TEXT,
  "previousDisplayName" TEXT,
  "email" TEXT,
  "slug" TEXT,
  "noindex" BOOL NOT NULL DEFAULT FALSE,
  "groups" TEXT[],
  "lwWikiImport" BOOL,
  "theme" JSONB NOT NULL DEFAULT '{"name":"auto"}'::JSONB,
  "lastUsedTimezone" TEXT,
  "whenConfirmationEmailSent" TIMESTAMPTZ,
  "legacy" BOOL NOT NULL DEFAULT FALSE,
  "commentSorting" TEXT,
  "sortDraftsBy" TEXT,
  "reactPaletteStyle" TEXT NOT NULL DEFAULT 'listView',
  "noKibitz" BOOL,
  "showHideKarmaOption" BOOL,
  "showPostAuthorCard" BOOL,
  "hideIntercom" BOOL NOT NULL DEFAULT FALSE,
  "markDownPostEditor" BOOL NOT NULL DEFAULT FALSE,
  "hideElicitPredictions" BOOL NOT NULL DEFAULT FALSE,
  "hideAFNonMemberInitialWarning" BOOL NOT NULL DEFAULT FALSE,
  "noSingleLineComments" BOOL NOT NULL DEFAULT FALSE,
  "noCollapseCommentsPosts" BOOL NOT NULL DEFAULT FALSE,
  "noCollapseCommentsFrontpage" BOOL NOT NULL DEFAULT FALSE,
  "hideCommunitySection" BOOL NOT NULL DEFAULT FALSE,
  "expandedFrontpageSections" JSONB,
  "showCommunityInRecentDiscussion" BOOL NOT NULL DEFAULT FALSE,
  "hidePostsRecommendations" BOOL NOT NULL DEFAULT FALSE,
  "petrovOptOut" BOOL NOT NULL DEFAULT FALSE,
  "optedOutOfSurveys" BOOL,
  "acceptedTos" BOOL NOT NULL DEFAULT FALSE,
  "hideNavigationSidebar" BOOL,
  "currentFrontpageFilter" TEXT,
  "frontpageSelectedTab" TEXT,
  "frontpageFilterSettings" JSONB,
  "hideFrontpageFilterSettingsDesktop" BOOL,
  "allPostsTimeframe" TEXT,
  "allPostsFilter" TEXT,
  "allPostsSorting" TEXT,
  "allPostsShowLowKarma" BOOL,
  "allPostsIncludeEvents" BOOL,
  "allPostsHideCommunity" BOOL,
  "allPostsOpenSettings" BOOL,
  "draftsListSorting" TEXT,
  "draftsListShowArchived" BOOL,
  "draftsListShowShared" BOOL,
  "lastNotificationsCheck" TIMESTAMPTZ,
  "karma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "goodHeartTokens" DOUBLE PRECISION,
  "moderationStyle" TEXT,
  "moderatorAssistance" BOOL,
  "collapseModerationGuidelines" BOOL,
  "bannedUserIds" VARCHAR(27) [],
  "bannedPersonalUserIds" VARCHAR(27) [],
  "bookmarkedPostsMetadata" JSONB[] NOT NULL DEFAULT '{}',
  "hiddenPostsMetadata" JSONB[] NOT NULL DEFAULT '{}',
  "legacyId" TEXT,
  "deleted" BOOL NOT NULL DEFAULT FALSE,
  "permanentDeletionRequestedAt" TIMESTAMPTZ,
  "voteBanned" BOOL,
  "nullifyVotes" BOOL,
  "deleteContent" BOOL,
  "banned" TIMESTAMPTZ,
  "auto_subscribe_to_my_posts" BOOL NOT NULL DEFAULT TRUE,
  "auto_subscribe_to_my_comments" BOOL NOT NULL DEFAULT TRUE,
  "autoSubscribeAsOrganizer" BOOL NOT NULL DEFAULT TRUE,
  "notificationCommentsOnSubscribedPost" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationShortformContent" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationRepliesToMyComments" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationRepliesToSubscribedComments" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSubscribedUserPost" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSubscribedUserComment" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationPostsInGroups" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSubscribedTagPost" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSubscribedSequencePost" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationPrivateMessage" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSharedWithMe" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationAlignmentSubmissionApproved" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationEventInRadius" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationKarmaPowersGained" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationRSVPs" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationGroupAdministration" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationCommentsOnDraft" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationPostsNominatedReview" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationSubforumUnread" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"daily","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationNewMention" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationDialogueMessages" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationPublishedDialogueMessages" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationAddedAsCoauthor" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationDebateCommentsOnSubscribedPost" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"daily","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationDebateReplies" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationDialogueMatch" JSONB NOT NULL DEFAULT '{"channel":"both","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationNewDialogueChecks" JSONB NOT NULL DEFAULT '{"channel":"none","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "notificationYourTurnMatchForm" JSONB NOT NULL DEFAULT '{"channel":"onsite","batchingFrequency":"realtime","timeOfDayGMT":12,"dayOfWeekGMT":"Monday"}'::JSONB,
  "hideDialogueFacilitation" BOOL NOT NULL DEFAULT FALSE,
  "revealChecksToAdmins" BOOL NOT NULL DEFAULT FALSE,
  "optedInToDialogueFacilitation" BOOL NOT NULL DEFAULT FALSE,
  "showDialoguesList" BOOL NOT NULL DEFAULT TRUE,
  "showMyDialogues" BOOL NOT NULL DEFAULT TRUE,
  "showMatches" BOOL NOT NULL DEFAULT TRUE,
  "showRecommendedPartners" BOOL NOT NULL DEFAULT TRUE,
  "hideActiveDialogueUsers" BOOL NOT NULL DEFAULT FALSE,
  "karmaChangeNotifierSettings" JSONB NOT NULL DEFAULT '{"updateFrequency":"daily","timeOfDayGMT":11,"dayOfWeekGMT":"Saturday","showNegativeKarma":false}'::JSONB,
  "karmaChangeLastOpened" TIMESTAMPTZ,
  "karmaChangeBatchStart" TIMESTAMPTZ,
  "emailSubscribedToCurated" BOOL,
  "subscribedToDigest" BOOL NOT NULL DEFAULT FALSE,
  "unsubscribeFromAll" BOOL,
  "hideSubscribePoke" BOOL NOT NULL DEFAULT FALSE,
  "hideMeetupsPoke" BOOL NOT NULL DEFAULT FALSE,
  "hideHomeRHS" BOOL NOT NULL DEFAULT FALSE,
  "frontpagePostCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "sequenceCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "sequenceDraftCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "mongoLocation" JSONB,
  "googleLocation" JSONB,
  "location" TEXT,
  "mapLocation" JSONB,
  "mapLocationSet" BOOL,
  "mapMarkerText" TEXT,
  "htmlMapMarkerText" TEXT,
  "nearbyEventsNotifications" BOOL NOT NULL DEFAULT FALSE,
  "nearbyEventsNotificationsLocation" JSONB,
  "nearbyEventsNotificationsMongoLocation" JSONB,
  "nearbyEventsNotificationsRadius" DOUBLE PRECISION,
  "nearbyPeopleNotificationThreshold" DOUBLE PRECISION,
  "hideFrontpageMap" BOOL,
  "hideTaggingProgressBar" BOOL,
  "hideFrontpageBookAd" BOOL,
  "hideFrontpageBook2019Ad" BOOL,
  "hideFrontpageBook2020Ad" BOOL,
  "sunshineNotes" TEXT NOT NULL DEFAULT '',
  "sunshineFlagged" BOOL NOT NULL DEFAULT FALSE,
  "needsReview" BOOL NOT NULL DEFAULT FALSE,
  "sunshineSnoozed" BOOL NOT NULL DEFAULT FALSE,
  "snoozedUntilContentCount" DOUBLE PRECISION,
  "reviewedByUserId" VARCHAR(27),
  "reviewedAt" TIMESTAMPTZ,
  "afKarma" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "voteCount" DOUBLE PRECISION,
  "smallUpvoteCount" DOUBLE PRECISION,
  "smallDownvoteCount" DOUBLE PRECISION,
  "bigUpvoteCount" DOUBLE PRECISION,
  "bigDownvoteCount" DOUBLE PRECISION,
  "voteReceivedCount" DOUBLE PRECISION,
  "smallUpvoteReceivedCount" DOUBLE PRECISION,
  "smallDownvoteReceivedCount" DOUBLE PRECISION,
  "bigUpvoteReceivedCount" DOUBLE PRECISION,
  "bigDownvoteReceivedCount" DOUBLE PRECISION,
  "usersContactedBeforeReview" TEXT[],
  "fullName" TEXT,
  "shortformFeedId" VARCHAR(27),
  "viewUnreviewedComments" BOOL,
  "partiallyReadSequences" JSONB[],
  "beta" BOOL,
  "reviewVotesQuadratic" BOOL,
  "reviewVotesQuadratic2019" BOOL,
  "reviewVotesQuadratic2020" BOOL,
  "petrovPressedButtonDate" TIMESTAMPTZ,
  "petrovLaunchCodeDate" TIMESTAMPTZ,
  "defaultToCKEditor" BOOL,
  "signUpReCaptchaRating" DOUBLE PRECISION,
  "oldSlugs" TEXT[],
  "noExpandUnreadCommentsReview" BOOL NOT NULL DEFAULT FALSE,
  "postCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "maxPostCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "commentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "maxCommentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "tagRevisionCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "abTestKey" TEXT NOT NULL,
  "abTestOverrides" JSONB,
  "reenableDraftJs" BOOL,
  "walledGardenInvite" BOOL,
  "hideWalledGardenUI" BOOL,
  "walledGardenPortalOnboarded" BOOL,
  "taggingDashboardCollapsed" BOOL,
  "usernameUnset" BOOL NOT NULL DEFAULT FALSE,
  "paymentEmail" TEXT,
  "paymentInfo" TEXT,
  "profileUpdatedAt" TIMESTAMPTZ NOT NULL DEFAULT '1970-01-01T00:00:00.000Z',
  "profileImageId" TEXT,
  "jobTitle" TEXT,
  "organization" TEXT,
  "careerStage" TEXT[],
  "website" TEXT,
  "fmCrosspostUserId" TEXT,
  "linkedinProfileURL" TEXT,
  "facebookProfileURL" TEXT,
  "twitterProfileURL" TEXT,
  "githubProfileURL" TEXT,
  "profileTagIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "organizerOfGroupIds" VARCHAR(27) [] NOT NULL DEFAULT '{}',
  "programParticipation" TEXT[],
  "postingDisabled" BOOL,
  "allCommentingDisabled" BOOL,
  "commentingOnOtherUsersDisabled" BOOL,
  "conversationsDisabled" BOOL,
  "acknowledgedNewUserGuidelines" BOOL,
  "subforumPreferredLayout" TEXT,
  "hideJobAdUntil" TIMESTAMPTZ,
  "hideFromPeopleDirectory" BOOL NOT NULL DEFAULT FALSE,
  "allowDatadogSessionReplay" BOOL NOT NULL DEFAULT FALSE,
  "afPostCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "afCommentCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "afSequenceCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "afSequenceDraftCount" DOUBLE PRECISION NOT NULL DEFAULT 0,
  "reviewForAlignmentForumUserId" TEXT,
  "afApplicationText" TEXT,
  "afSubmittedApplication" BOOL,
  "hideSunshineSidebar" BOOL NOT NULL DEFAULT FALSE,
  "inactiveSurveyEmailSentAt" TIMESTAMPTZ,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB,
  "moderationGuidelines" JSONB,
  "moderationGuidelines_latest" TEXT,
  "howOthersCanHelpMe" JSONB,
  "howOthersCanHelpMe_latest" TEXT,
  "howICanHelpOthers" JSONB,
  "howICanHelpOthers_latest" TEXT,
  "biography" JSONB,
  "biography_latest" TEXT,
  "recommendationSettings" JSONB
);

-- Index "idx_Users_schemaVersion", hash 2671812c53347ee5871624cb08396d0c
CREATE INDEX IF NOT EXISTS "idx_Users_schemaVersion" ON "Users" USING btree ("schemaVersion");

-- Index "idx_Users_username", hash b00d1fb46ba2a531471c76d40a5d7c6f
CREATE UNIQUE INDEX IF NOT EXISTS "idx_Users_username" ON "Users" USING btree (COALESCE("username", ''));

-- Index "idx_Users_email", hash 2584a0fa94444ee0a21f538e9eb2703a
CREATE INDEX IF NOT EXISTS "idx_Users_email" ON "Users" USING btree ("email");

-- Index "idx_Users_emails__address", hash 0b938fef4820bbd82d843fadecbe2860
CREATE INDEX IF NOT EXISTS "idx_Users_emails__address" ON "Users" USING gin ("emails");

-- Index "idx_Users_services__resume__loginTokens__hashedToken", hash 2a52a0cef0b30b0c445419dce50dd45f
CREATE INDEX IF NOT EXISTS "idx_Users_services__resume__loginTokens__hashedToken" ON "Users" USING gin (
  (
    "services" -> 'resume' -> 'loginTokens' -> 'hashedToken'
  )
);

-- Index "idx_Users_services__resume__loginTokens__token", hash b84f8869e2e15f0bcccf83d3187fdf52
CREATE INDEX IF NOT EXISTS "idx_Users_services__resume__loginTokens__token" ON "Users" USING gin (
  (
    "services" -> 'resume' -> 'loginTokens' -> 'token'
  )
);

-- Index "idx_Users_services__resume__haveLoginTokensToDelete", hash 046ab1535836fdfe04d424e737d73a46
CREATE INDEX IF NOT EXISTS "idx_Users_services__resume__haveLoginTokensToDelete" ON "Users" USING gin (
  (
    "services" -> 'resume' -> 'haveLoginTokensToDelete'
  )
);

-- Index "idx_Users_services__resume__loginTokens__when", hash c739bca006131000c2fd16b9d1133745
CREATE INDEX IF NOT EXISTS "idx_Users_services__resume__loginTokens__when" ON "Users" USING gin (
  ("services" -> 'resume' -> 'loginTokens' -> 'when')
);

-- Index "idx_Users_services__email__verificationTokens__token", hash 33f250557a7998a480da907f43da5c72
CREATE INDEX IF NOT EXISTS "idx_Users_services__email__verificationTokens__token" ON "Users" USING gin (
  (
    "services" -> 'email' -> 'verificationTokens' -> 'token'
  )
);

-- Index "idx_Users_services__password__reset__token", hash 97e2a8f8847e651bc8da6c1ea8bec86d
CREATE INDEX IF NOT EXISTS "idx_Users_services__password__reset__token" ON "Users" USING gin (("services" -> 'password' -> 'reset' -> 'token'));

-- Index "idx_Users_services__password__reset__when", hash 9135aebd06b7db23885c717e35d44fb9
CREATE INDEX IF NOT EXISTS "idx_Users_services__password__reset__when" ON "Users" USING gin (("services" -> 'password' -> 'reset' -> 'when'));

-- Index "idx_Users_services__twitter__id", hash 7b4b571963d94e4211bef4344e6deaa9
CREATE INDEX IF NOT EXISTS "idx_Users_services__twitter__id" ON "Users" USING gin (("services" -> 'twitter' -> 'id'));

-- Index "idx_Users_services__facebook__id", hash 7130c1ac13d6b658d9e8459c2a75a040
CREATE INDEX IF NOT EXISTS "idx_Users_services__facebook__id" ON "Users" USING gin (("services" -> 'facebook' -> 'id'));

-- Index "idx_Users_services__google__id", hash e8bf9e5957148bcd89ef77d3714e5f18
CREATE INDEX IF NOT EXISTS "idx_Users_services__google__id" ON "Users" USING gin (("services" -> 'google' -> 'id'));

-- Index "idx_Users_karma__id", hash 43c52156764630160ed6ecf08af68b21
CREATE INDEX IF NOT EXISTS "idx_Users_karma__id" ON "Users" USING btree ("karma", "_id");

-- Index "idx_Users_slug", hash 8849755677e22cb95fad4e47f17a59a4
CREATE INDEX IF NOT EXISTS "idx_Users_slug" ON "Users" USING btree ("slug");

-- Index "idx_Users_isAdmin", hash ee5ce799e381c16373cef8623bbbd4da
CREATE INDEX IF NOT EXISTS "idx_Users_isAdmin" ON "Users" USING btree ("isAdmin");

-- Index "idx_Users_services__github__id", hash 4557096585a4d6fc4abd6955cc9e1ce5
CREATE INDEX IF NOT EXISTS "idx_Users_services__github__id" ON "Users" USING gin (("services" -> 'github' -> 'id'));

-- Index "idx_Users_createdAt__id", hash 9ef469085b418f065d5f3009deef0639
CREATE INDEX IF NOT EXISTS "idx_Users_createdAt__id" ON "Users" USING btree ("createdAt", "_id");

-- Index "idx_Users_services__resume__loginTokens", hash 1b87a6092d0bb900dcfb577d736b814c
CREATE INDEX IF NOT EXISTS "idx_Users_services__resume__loginTokens" ON "Users" USING gin (("services" -> 'resume' -> 'loginTokens'));

-- Index "idx_Users_email_ci", hash a5544f29b705fb7b7bd0e733c6d2af27
CREATE INDEX IF NOT EXISTS "idx_Users_email_ci" ON "Users" USING btree (LOWER("email"));

-- Index "idx_Users_emails__address_ci", hash 9a1c427753ae6f4d3d83dfec6495b329
CREATE INDEX IF NOT EXISTS "idx_Users_emails__address_ci" ON "Users" USING gin ("emails");

-- Index "idx_Users_oldSlugs", hash 32acfc42cac67c01cc695655f7d84707
CREATE INDEX IF NOT EXISTS "idx_Users_oldSlugs" ON "Users" USING gin ("oldSlugs");

-- Index "idx_Users_bannedPersonalUserIds_createdAt", hash 1e75ed011a18301597d230c820002e86
CREATE INDEX IF NOT EXISTS "idx_Users_bannedPersonalUserIds_createdAt" ON "Users" USING gin ("bannedPersonalUserIds", "createdAt");

-- Index "idx_Users_bannedUserIds_createdAt", hash 5ce8e31fe6cfca3668cf533b0a76ba7e
CREATE INDEX IF NOT EXISTS "idx_Users_bannedUserIds_createdAt" ON "Users" USING gin ("bannedUserIds", "createdAt");

-- Index "idx_Users_needsReview_signUpReCaptchaRating_createdAt", hash b6f533cf096cc223f286aff74fc0b29a
CREATE INDEX IF NOT EXISTS "idx_Users_needsReview_signUpReCaptchaRating_createdAt" ON "Users" USING btree (
  "needsReview",
  "signUpReCaptchaRating",
  "createdAt"
);

-- Index "idx_Users_banned_postCount_commentCount_lastNotificationsCheck", hash 6652c83ddbb00e80e64762fc70ebf37a
CREATE INDEX IF NOT EXISTS "idx_Users_banned_postCount_commentCount_lastNotificationsCheck" ON "Users" USING btree (
  "banned",
  "postCount",
  "commentCount",
  "lastNotificationsCheck"
);

-- Index "idx_Users_reviewedAt_createdAt", hash 39f02a36e75c6ee60e5dd15a06e1af17
CREATE INDEX IF NOT EXISTS "idx_Users_reviewedAt_createdAt" ON "Users" USING btree ("reviewedAt", "createdAt");

-- Index "idx_Users_mapLocationSet", hash 401bffed92f082ec4c7a4a7fab0cb844
CREATE INDEX IF NOT EXISTS "idx_Users_mapLocationSet" ON "Users" USING btree ("mapLocationSet");

-- Index "idx_Users_profileTagIds_deleted_deleteContent_karma", hash df0595e8bdd9ac3e13316099c880366e
CREATE INDEX IF NOT EXISTS "idx_Users_profileTagIds_deleted_deleteContent_karma" ON "Users" USING gin (
  "profileTagIds",
  "deleted",
  "deleteContent",
  "karma"
);

-- Index "idx_Users_walledGardenInvite", hash 78489b78722c7378d72f15eb064d0896
CREATE INDEX IF NOT EXISTS "idx_Users_walledGardenInvite" ON "Users" USING btree ("walledGardenInvite");

-- Index "idx_Users_optedInToDialogueFacilitation_karma", hash 9bf329a28f9bad4d53361b984906d1d5
CREATE INDEX IF NOT EXISTS "idx_Users_optedInToDialogueFacilitation_karma" ON "Users" USING btree ("optedInToDialogueFacilitation", "karma");

-- Index "idx_Users_afKarma_reviewForAlignmentForumUserId_groups_createdAt", hash 584b2f1871e2eeb9ef810ae43f603fbc
CREATE INDEX IF NOT EXISTS "idx_Users_afKarma_reviewForAlignmentForumUserId_groups_createdAt" ON "Users" USING gin (
  "afKarma",
  "reviewForAlignmentForumUserId",
  "groups",
  "createdAt"
);

-- Index "idx_Users_afSubmittedApplication_reviewForAlignmentForumUserId_groups_createdAt", hash ff1bbc3503a327b872d55e5282b5d06e
CREATE INDEX IF NOT EXISTS "idx_Users_afSubmittedApplication_reviewForAlignmentForumUserId_groups_createdAt" ON "Users" USING gin (
  "afSubmittedApplication",
  "reviewForAlignmentForumUserId",
  "groups",
  "createdAt"
);

-- Index "idx_users_nearbyEventsNotifications", hash 1966dfed88edf5ae3e5a6b2e93c63a73
CREATE INDEX IF NOT EXISTS "idx_users_nearbyEventsNotifications" ON "Users" USING btree ("nearbyEventsNotificationsMongoLocation");

-- Table "Votes", hash fee49f22fecc0965fecc554697b44b46
CREATE TABLE "Votes" (
  _id VARCHAR(27) PRIMARY KEY,
  "documentId" TEXT NOT NULL,
  "collectionName" TEXT NOT NULL,
  "userId" VARCHAR(27) NOT NULL,
  "authorIds" VARCHAR(27) [],
  "voteType" TEXT NOT NULL,
  "extendedVoteType" JSONB,
  "power" DOUBLE PRECISION NOT NULL,
  "afPower" DOUBLE PRECISION,
  "cancelled" BOOL NOT NULL DEFAULT FALSE,
  "isUnvote" BOOL NOT NULL DEFAULT FALSE,
  "votedAt" TIMESTAMPTZ NOT NULL,
  "documentIsAf" BOOL NOT NULL DEFAULT FALSE,
  "silenceNotification" BOOL NOT NULL DEFAULT FALSE,
  "schemaVersion" DOUBLE PRECISION NOT NULL DEFAULT 1,
  "createdAt" TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP NOT NULL,
  "legacyData" JSONB
);

-- Index "idx_Votes_schemaVersion", hash c33b6e891dad5121d9dbd08742a63e46
CREATE INDEX IF NOT EXISTS "idx_Votes_schemaVersion" ON "Votes" USING btree ("schemaVersion");

-- Index "idx_Votes_cancelled_userId_documentId", hash 760dc0a452e40e487f7fd3df65919064
CREATE INDEX IF NOT EXISTS "idx_Votes_cancelled_userId_documentId" ON "Votes" USING btree ("cancelled", "userId", "documentId");

-- Index "idx_Votes_cancelled_documentId", hash 710009ed76070f49d0693d82cf20fa3d
CREATE INDEX IF NOT EXISTS "idx_Votes_cancelled_documentId" ON "Votes" USING btree ("cancelled", "documentId");

-- Index "idx_Votes_cancelled_userId_votedAt", hash 13b9e0c7f43e7dba6eece6a7217677fe
CREATE INDEX IF NOT EXISTS "idx_Votes_cancelled_userId_votedAt" ON "Votes" USING btree ("cancelled", "userId", "votedAt");

-- Index "idx_Votes_authorIds", hash 0652e8c97144ed22ada0797d4fc05b0f
CREATE INDEX IF NOT EXISTS "idx_Votes_authorIds" ON "Votes" USING gin ("authorIds");

-- Index "idx_Votes_userId_cancelled_votedAt", hash 7abd45e886a11f2e7bc188c4befbf219
CREATE INDEX IF NOT EXISTS "idx_Votes_userId_cancelled_votedAt" ON "Votes" USING btree ("userId", "cancelled", "votedAt");

-- Index "idx_Votes_collectionName_votedAt", hash 6ce7af59cbd40c02dc206db09b1456c7
CREATE INDEX IF NOT EXISTS "idx_Votes_collectionName_votedAt" ON "Votes" USING btree ("collectionName", "votedAt");

-- Index "idx_Votes_collectionName_userId_voteType_cancelled_isUnvote_votedAt", hash b8eace7ac756fd6b503d166da1c9c25c
CREATE INDEX IF NOT EXISTS "idx_Votes_collectionName_userId_voteType_cancelled_isUnvote_votedAt" ON "Votes" USING btree (
  "collectionName",
  "userId",
  "voteType",
  "cancelled",
  "isUnvote",
  "votedAt"
);

-- Index "idx_Votes_collectionName_userId_cancelled_isUnvote_voteType_extendedVoteType_votedAt", hash 476105560dacfd8668fc075ae714078b
CREATE INDEX IF NOT EXISTS "idx_Votes_collectionName_userId_cancelled_isUnvote_voteType_extendedVoteType_votedAt" ON "Votes" USING btree (
  "collectionName",
  "userId",
  "cancelled",
  "isUnvote",
  "voteType",
  "extendedVoteType",
  "votedAt"
);

-- Index "idx_Votes_documentId", hash ef0bb238a0c42d6069360b35085d9435
CREATE INDEX IF NOT EXISTS "idx_Votes_documentId" ON "Votes" USING btree ("documentId");

-- CustomIndex "idx_DatabaseMetadata_name", hash 285491f99ba96895e0240f3dbb5121e3
CREATE UNIQUE INDEX IF NOT EXISTS "idx_DatabaseMetadata_name" ON public."DatabaseMetadata" USING btree (name);

-- CustomIndex "idx_DebouncerEvents_dispatched_af_key_name_filtered", hash 635b040ef20149755985c607b7225f9a
CREATE UNIQUE INDEX IF NOT EXISTS "idx_DebouncerEvents_dispatched_af_key_name_filtered" ON public."DebouncerEvents" USING btree (dispatched, af, key, name)
WHERE
  (dispatched IS FALSE);

-- CustomIndex "idx_PageCache_path_abTestGroups_bundleHash", hash 15a2130dd3573fdfb01313fa47e011fe
CREATE UNIQUE INDEX IF NOT EXISTS "idx_PageCache_path_abTestGroups_bundleHash" ON public."PageCache" USING btree (PATH, "abTestGroups", "bundleHash");

-- CustomIndex "idx_ReadStatuses_userId_postId_tagId", hash 7940ec7f3b1c0c61640593a8b967b11a
CREATE UNIQUE INDEX IF NOT EXISTS "idx_ReadStatuses_userId_postId_tagId" ON public."ReadStatuses" USING btree (
  COALESCE("userId", ''::CHARACTER VARYING),
  COALESCE("postId", ''::CHARACTER VARYING),
  COALESCE("tagId", ''::CHARACTER VARYING)
);

-- CustomIndex "idx_Users_tsvector_jobTitle", hash c3f68f7dcf187a6ba539c6be362c99e1
CREATE INDEX IF NOT EXISTS "idx_Users_tsvector_jobTitle" ON "Users" (TO_TSVECTOR('english', "jobTitle"))
WHERE
  "jobTitle" IS NOT NULL AND
  "noindex" IS NOT TRUE AND
  "hideFromPeopleDirectory" IS NOT TRUE AND
  "deleted" IS NOT TRUE AND
  "voteBanned" IS NOT TRUE AND
  "deleteContent" IS NOT TRUE AND
  "nullifyVotes" IS NOT TRUE AND
  "banned" IS NULL;

-- CustomIndex "idx_Users_tsvector_organization", hash d653b1858ed7e8e0507c8e653989b089
CREATE INDEX IF NOT EXISTS "idx_Users_tsvector_organization" ON "Users" (TO_TSVECTOR('english', "organization"))
WHERE
  "organization" IS NOT NULL AND
  "noindex" IS NOT TRUE AND
  "hideFromPeopleDirectory" IS NOT TRUE AND
  "deleted" IS NOT TRUE AND
  "voteBanned" IS NOT TRUE AND
  "deleteContent" IS NOT TRUE AND
  "nullifyVotes" IS NOT TRUE AND
  "banned" IS NULL;

-- CustomIndex "idx_Users_tsvector_mapLocationAddress", hash 4cc064bb1373509253221ee460b211cf
CREATE INDEX IF NOT EXISTS "idx_Users_tsvector_mapLocationAddress" ON "Users" (
  TO_TSVECTOR('english', "mapLocation" ->> 'formatted_address')
)
WHERE
  "mapLocation" ->> 'formatted_address' IS NOT NULL AND
  "noindex" IS NOT TRUE AND
  "hideFromPeopleDirectory" IS NOT TRUE AND
  "deleted" IS NOT TRUE AND
  "voteBanned" IS NOT TRUE AND
  "deleteContent" IS NOT TRUE AND
  "nullifyVotes" IS NOT TRUE AND
  "banned" IS NULL;

-- CustomIndex "idx_Comments_postId_promotedAt", hash a9db8a3bab744e9c97e5bf159225360b
CREATE INDEX IF NOT EXISTS "idx_Comments_postId_promotedAt" ON "Comments" ("postId", "promotedAt")
WHERE
  "promotedAt" IS NOT NULL;

-- CustomIndex "idx_Comments_userId_postId_postedAt", hash 73d35bda4c7346b2794c27dedcc915ad
CREATE INDEX IF NOT EXISTS "idx_Comments_userId_postId_postedAt" ON "Comments" ("userId", "postId", "postedAt");

-- CustomIndex "idx_comments_popular_comments", hash 9d6cc0dcc2fa817f1269426b61160ed5
CREATE INDEX IF NOT EXISTS idx_comments_popular_comments ON "Comments" ("postId", "baseScore" DESC, "postedAt" DESC)
WHERE
  ("baseScore" >= 15);

-- CustomIndex "idx_posts_pingbacks", hash 3b6615bd79e98985c2b702e87f7a14b5
CREATE INDEX IF NOT EXISTS idx_posts_pingbacks ON "Posts" USING gin (pingbacks);

-- CustomIndex "idx_Posts_max_postedAt_mostRecentPublishedDialogueResponseDate", hash 4338faf7463bec37539a3135a1e9910f
CREATE INDEX IF NOT EXISTS "idx_Posts_max_postedAt_mostRecentPublishedDialogueResponseDate" ON "Posts" (
  GREATEST(
    "postedAt",
    "mostRecentPublishedDialogueResponseDate"
  ) DESC
)
WHERE
  "collabEditorDialogue" IS TRUE;

-- Function "fm_has_verified_email", hash 6d997db78a8f710d18396d7255a82bb5
CREATE OR
REPLACE FUNCTION fm_has_verified_email (emails jsonb[]) RETURNS BOOLEAN LANGUAGE plpgsql IMMUTABLE AS $$
        DECLARE
          item jsonb;
        BEGIN
          FOR item IN SELECT unnest(emails)
          LOOP
            IF (item->>'verified')::boolean THEN
              RETURN true;
            END IF;
          END LOOP;
          RETURN false;
        END;
      $$;

-- CustomIndex "idx_Users_subscribed_to_curated_verified", hash 603f80dc36b22b97c313af3eb0f9d568
CREATE INDEX IF NOT EXISTS "idx_Users_subscribed_to_curated_verified" ON "Users" USING btree (
  "emailSubscribedToCurated",
  "unsubscribeFromAll",
  "deleted",
  "email",
  fm_has_verified_email (emails),
  "_id"
)
WHERE
  "emailSubscribedToCurated" IS TRUE AND
  "unsubscribeFromAll" IS NOT TRUE AND
  "deleted" IS NOT TRUE AND
  "email" IS NOT NULL AND
  fm_has_verified_email (emails);

-- CustomIndex "idx_Users_subscribed_to_curated", hash 480ced786a330b105dfacf424868d573
CREATE INDEX IF NOT EXISTS "idx_Users_subscribed_to_curated" ON "Users" USING btree (
  "emailSubscribedToCurated",
  "unsubscribeFromAll",
  "deleted",
  "email",
  "_id"
)
WHERE
  "emailSubscribedToCurated" IS TRUE AND
  "unsubscribeFromAll" IS NOT TRUE AND
  "deleted" IS NOT TRUE AND
  "email" IS NOT NULL;

-- Function "fm_build_nested_jsonb", hash 97d921fc2b9541c90b78fc819a2309e5
CREATE OR
REPLACE FUNCTION fm_build_nested_jsonb (target_path TEXT[], terminal_element JSONB) RETURNS JSONB LANGUAGE sql IMMUTABLE AS 'SELECT JSONB_BUILD_OBJECT(
        target_path[1],
        CASE
          WHEN CARDINALITY(target_path) = 1 THEN terminal_element
          ELSE fm_build_nested_jsonb(
            target_path[2:CARDINALITY(target_path)],
            terminal_element
          )
        END
      );';

-- Function "fm_add_to_set_native", hash c7706e7e31a19793fffb8859bc2b11b1
CREATE OR
REPLACE FUNCTION fm_add_to_set (ANYARRAY, ANYELEMENT) RETURNS ANYARRAY LANGUAGE sql IMMUTABLE AS 'SELECT CASE WHEN ARRAY_POSITION($1, $2) IS NULL THEN $1 || $2 ELSE $1 END;';

-- Function "fm_add_to_set_json", hash 8732ff06822299e2ad0ebaff47d1e3c8
CREATE OR
REPLACE FUNCTION fm_add_to_set (
  base_field JSONB,
  target_path TEXT[],
  value_to_add ANYELEMENT
) RETURNS JSONB LANGUAGE sql IMMUTABLE AS 'SELECT CASE
      WHEN base_field #> target_path IS NULL
        THEN COALESCE(base_field, ''{}''::JSONB) || fm_build_nested_jsonb(
          target_path,
          JSONB_BUILD_ARRAY(value_to_add)
        )
      WHEN EXISTS (
        SELECT *
        FROM JSONB_ARRAY_ELEMENTS(base_field #> target_path) AS elem
        WHERE elem = TO_JSONB(value_to_add)
      )
        THEN base_field
      ELSE JSONB_INSERT(
        base_field,
        (SUBSTRING(target_path::TEXT FROM ''(.*)}.*$'') || '', -1}'')::TEXT[],
        TO_JSONB(value_to_add),
        TRUE
      )
      END;';

-- Function "fm_post_tag_similarity", hash eed050a2a823cf3c69ba0acb02eec2f3
CREATE OR
REPLACE FUNCTION fm_post_tag_similarity (post_id_a TEXT, post_id_b TEXT) RETURNS FLOAT LANGUAGE sql IMMUTABLE AS 'SELECT
          COALESCE(SUM(LEAST(a, b))::FLOAT / SUM(GREATEST(a, b))::FLOAT, 0)
            AS similarity
        FROM (
          SELECT
            GREATEST((a."tagRelevance"->"tagId")::INTEGER, 0) AS a,
            GREATEST((b."tagRelevance"->"tagId")::INTEGER, 0) AS b
          FROM (
            SELECT JSONB_OBJECT_KEYS("tagRelevance") AS "tagId"
            FROM "Posts"
            WHERE "_id" IN (post_id_a, post_id_b)
          ) "allTags"
          JOIN "Posts" a ON a."_id" = post_id_a
          JOIN "Posts" b ON b."_id" = post_id_b
        ) "tagRelevance";';

-- Function "fm_jsonb_subset", hash 3acd822085c746457ae46e882ba66763
CREATE OR
REPLACE FUNCTION fm_jsonb_subset (target jsonb, candidate jsonb) RETURNS BOOLEAN AS $$
      DECLARE
        key text;
      BEGIN
        FOR key IN SELECT jsonb_object_keys(candidate)
        LOOP
          IF NOT (target ? key AND target->>key = candidate->>key) THEN
            RETURN FALSE;
          END IF;
        END LOOP;

        RETURN TRUE;
      END;
      $$ LANGUAGE plpgsql;

-- Function "fm_post_tag_ids", hash b7b5a62b03aaaffa99b4264923d3a4a7
CREATE OR
REPLACE FUNCTION fm_post_tag_ids (post_id TEXT) RETURNS TEXT[] LANGUAGE sql IMMUTABLE AS 'SELECT ARRAY_AGG(tags."tagId")
      FROM "Posts" p
      JOIN (
        SELECT JSONB_OBJECT_KEYS("tagRelevance") AS "tagId"
        FROM "Posts"
        WHERE "_id" = post_id
      ) tags ON p."_id" = post_id
      WHERE (p."tagRelevance"->tags."tagId")::INTEGER >= 1;';

-- Function "fm_confidence_sort", hash 6b98eb8991ca6583a707b6acd94db9d9
CREATE OR
REPLACE FUNCTION fm_confidence_sort (
  ups INTEGER,
  downs INTEGER,
  downvote_multiplier FLOAT DEFAULT 1
) RETURNS FLOAT LANGUAGE PLPGSQL IMMUTABLE AS $$
      DECLARE
        n INTEGER;
        z FLOAT;
        p FLOAT;
        l FLOAT;
        r float;
        u FLOAT;
      BEGIN
        n := ups + (downs * downvote_multiplier);
        IF n = 0 THEN
          RETURN n;
        END IF;
        z := 1.281551565545;
        p := ups::FLOAT / n::FLOAT;
        l := p + 1 / (2 * n) * z * z;
        r := z * SQRT(p * (1 - p) / n + z * z / (4 * n * n));
        u := 1 + 1 / n * z * z;
        RETURN (l - r) / u;
      END $$;

-- Function "fm_comment_confidence", hash 24ea015c78965588dea0eb3862272c49
CREATE OR
REPLACE FUNCTION fm_comment_confidence (
  comment_id TEXT,
  downvote_multiplier FLOAT DEFAULT 1
) RETURNS FLOAT LANGUAGE sql AS $$
        SELECT
          fm_confidence_sort(
            COALESCE(
              SUM(v."power") FILTER
                (WHERE v."voteType" IN ('bigUpvote', 'smallUpvote')),
              0
            )::INTEGER,
            COALESCE(
              -SUM(v."power") FILTER
                (WHERE v."voteType" IN ('bigDownvote', 'smallDownvote')),
              0
            )::INTEGER,
            downvote_multiplier
          )
        FROM "Comments" c
        JOIN "Votes" v ON
          v."documentId" = c."_id" AND
          v."collectionName" = 'Comments' AND
          v."isUnvote" IS NOT TRUE AND
          v."cancelled" IS NOT TRUE AND
          v."extendedVoteType" IS NULL
        WHERE c."_id" = comment_id;
      $$;

-- Function "fm_vote_added_emoji", hash 9ebab5697db83a4da22e57f0d648e8aa
CREATE OR
REPLACE FUNCTION fm_vote_added_emoji (vote_id TEXT, emoji_name TEXT) RETURNS BOOLEAN LANGUAGE sql AS $$
        SELECT
          COALESCE(target."extendedVoteType"->emoji_name = TO_JSONB(TRUE), FALSE) AND
          COALESCE(v."extendedVoteType"->emoji_name <> TO_JSONB(TRUE), TRUE)
        FROM "Votes" target
        LEFT JOIN "Votes" v ON
          v."votedAt" < target."votedAt" AND
          v."userId" = target."userId" AND
          v."documentId" = target."documentId" AND
          v."collectionName" = target."collectionName"
        WHERE
          target."_id" = vote_id
        ORDER BY v."votedAt" DESC
        LIMIT 1
      $$;

-- View "UserLoginTokens", hash bbf5be24ecfcfd052d7a674a7127ecb5
CREATE MATERIALIZED VIEW IF NOT EXISTS "UserLoginTokens" AS
SELECT
  JSONB_ARRAY_ELEMENTS("services" -> 'resume' -> 'loginTokens') ->> 'hashedToken' "hashedToken",
  "_id" "userId"
FROM
  "Users"
WHERE
  JSONB_TYPEOF("services" -> 'resume' -> 'loginTokens') = 'array';

-- Function "fm_get_user_by_login_token", hash a5c3fa531c9de30b739ca1e485849067
CREATE OR
REPLACE FUNCTION fm_get_user_by_login_token (hashed_token TEXT) RETURNS SETOF "Users" LANGUAGE plpgsql AS $$
        DECLARE
        BEGIN
          RETURN QUERY
            SELECT u.*
            FROM "Users" u
            JOIN "UserLoginTokens" lt ON lt."userId" = u."_id"
            WHERE lt."hashedToken" = hashed_token;
          IF (FOUND = FALSE) THEN
            RETURN QUERY
              SELECT *
              FROM "Users"
              WHERE "services"->'resume'->'loginTokens' @>
                ('[{"hashedToken": "' || hashed_token || '"}]')::JSONB;
          END IF;
        END
      $$;

-- Function "fm_get_user_profile_updated_at", hash c62ae89e00e77c57cadf951a6af96032
CREATE OR
REPLACE FUNCTION fm_get_user_profile_updated_at (userid TEXT) RETURNS TIMESTAMPTZ LANGUAGE sql AS $$
          SELECT COALESCE(
            (SELECT "createdAt"
            FROM (
              SELECT JSONB_OBJECT_KEYS("properties"->'after') AS "key", "createdAt"
              FROM "LWEvents"
              WHERE "documentId" = userid AND "name" = 'fieldChanges'
            ) q
            WHERE "key" IN ('username', 'displayName', 'organizerOfGroupIds', 'programParticipation', 'googleLocation', 'location', 'mapLocation', 'profileImageId', 'jobTitle', 'organization', 'careerStage', 'website', 'linkedinProfileURL', 'facebookProfileURL', 'twitterProfileURL', 'githubProfileURL', 'profileTagIds', 'biography', 'howOthersCanHelpMe', 'howICanHelpOthers')
            ORDER BY "createdAt" DESC
            LIMIT 1),
            (SELECT "createdAt" FROM "Users" WHERE "_id" = userid),
            TO_TIMESTAMP(0)
          )
      $$;

-- View "UniquePostUpvoters", hash ccef8ea6186b1b367d13b83c0be667ff
CREATE MATERIALIZED VIEW IF NOT EXISTS "UniquePostUpvoters" AS
SELECT
  p."_id" AS "postId",
  ARRAY_AGG(
    DISTINCT ('x' || SUBSTR(MD5(v."userId"), 1, 8))::BIT(32)::INTEGER
  ) AS "voters"
FROM
  "Posts" p
  INNER JOIN "Votes" v ON p."_id" = v."documentId" AND
  v."collectionName" = 'Posts' AND
  v."cancelled" IS NOT TRUE AND
  v."isUnvote" IS NOT TRUE AND
  v."voteType" IN ('smallUpvote', 'bigUpvote')
GROUP BY
  p."_id";

-- CustomIndex "idx_UniquePostUpvoters_postId", hash 977bcfb6d4daa6c56eb313bfb58a4b29
CREATE UNIQUE INDEX IF NOT EXISTS "idx_UniquePostUpvoters_postId" ON "UniquePostUpvoters" ("postId");

-- View "ConversationUnreadMessages", hash 35ca2ef862ebcbc4f3c38b89783f438e
CREATE OR REPLACE VIEW "ConversationUnreadMessages" AS
SELECT
  q."conversationId",
  q."userId",
  EXISTS (
    SELECT
      *
    FROM
      "Notifications" n
      INNER JOIN "Messages" m ON n."userId" = q."userId" AND
      n."documentId" = m."_id" AND
      n."documentType" = 'message' AND
      n."emailed" IS NOT TRUE AND
      n."waitingForBatch" IS NOT TRUE AND
      n."deleted" IS NOT TRUE AND
      n."viewed" IS NOT TRUE AND
      m."conversationId" = q."conversationId"
  ) "hasUnreadMessages"
FROM
  (
    SELECT
      "_id" "conversationId",
      UNNEST("participantIds") "userId"
    FROM
      "Conversations"
  ) q;

-- CustomIndex "idx_user_login_tokens_hashed_token", hash 408438b72d331ec71af1108193b3f1d9
CREATE UNIQUE INDEX IF NOT EXISTS idx_user_login_tokens_hashed_token ON "UserLoginTokens" USING BTREE ("hashedToken");
