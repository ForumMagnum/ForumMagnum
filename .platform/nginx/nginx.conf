# Elastic Beanstalk Nginx Configuration File

#user  nginx;
worker_processes  auto;
error_log  /Users/jbabcock/tmp/nginx/error.log;
pid        /Users/jbabcock/tmp/nginx/nginx.pid;
worker_rlimit_nofile    131441;

events {
    worker_connections  1024;
}

http {
    include       /opt/homebrew/etc/nginx/mime.types;
    default_type  application/octet-stream;

    access_log    /Users/jbabcock/tmp/nginx/access.log;

    server_tokens off;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

    include  conf.d/*.conf;

    proxy_cache_path /Users/jbabcock/tmp/nginx/nginx_cache levels=1:2 keys_zone=my_cache:10m max_size=10g inactive=60m use_temp_path=off;

    map $http_upgrade $connection_upgrade {
            default       "upgrade";
    }
    map $http_accept_encoding $ae_variant {
        default   '';
        ~*br     'br';
        ~*gzip   'gzip';
    }

    server {
        listen 3009 default_server;
        #gzip on;
        #gzip_comp_level 4;
        #gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        brotli on;

        # Compress data even for clients that are connecting to us via proxies,
        # identified by the "Via" header (required for CloudFront).
        gzip_proxied any;
        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary on;

        access_log    /Users/jbabcock/tmp/nginx/access.log main;

        if ($http_x_forwarded_proto = 'http'){
            return 301 https://$host$request_uri;
        }

        location ~ ^(/js/|/allStyles|/public/) {
            proxy_cache my_cache;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            proxy_cache_valid 200 60m;    # Cache successful responses for 60 minutes
            proxy_cache_key $request_uri$ae_variant;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;

            brotli on;
            brotli_static on;
            proxy_pass            http://localhost:3000;
            proxy_http_version    1.1;
        }

        location / {
            proxy_pass            http://localhost:3000;
            proxy_http_version    1.1;

            proxy_set_header    Connection             $connection_upgrade;
            proxy_set_header    Upgrade                $http_upgrade;
            proxy_set_header    Host                   $host;
            proxy_set_header    X-Real-IP              $remote_addr;
            proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;
        }
        
        location /api/notificationEvents {
            proxy_pass            http://localhost:3000;
            proxy_http_version    1.1;

            proxy_set_header    Connection             $connection_upgrade;
            proxy_set_header    Upgrade                $http_upgrade;
            proxy_set_header    Host                   $host;
            proxy_set_header    X-Real-IP              $remote_addr;
            proxy_set_header    X-Forwarded-For        $proxy_add_x_forwarded_for;

            proxy_read_timeout 24h;
            proxy_send_timeout 24h;

            access_log /Users/jbabcock/tmp/nginx/server-sent-events-access.log main;
        }

        # Include the Elastic Beanstalk generated locations
        include conf.d/elasticbeanstalk/*.conf;
    }
}
