const _o1 = (_0: any,_1: any) => ({"kind":_0,"definitions":_1})
const _o2 = (_0: any,_1: any,_2: any,_3: any) => ({"kind":_0,"name":_1,"typeCondition":_2,"selectionSet":_3})
const _o3 = (_0: any,_1: any) => ({"kind":_0,"value":_1})
const _o4 = (_0: any,_1: any) => ({"kind":_0,"name":_1})
const _o5 = (_0: any,_1: any) => ({"kind":_0,"selections":_1})
const _o6 = (_0: any,_1: any,_2: any) => ({"kind":_0,"name":_1,"selectionSet":_2})
const _o7 = (_0: any,_1: any,_2: any,_3: any) => ({"kind":_0,"name":_1,"arguments":_2,"selectionSet":_3})
const _o8 = (_0: any,_1: any,_2: any) => ({"kind":_0,"name":_1,"value":_2})
const _o9 = (_0: any,_1: any,_2: any) => ({"kind":_0,"value":_1,"block":_2})
const _o10 = (_0: any,_1: any,_2: any) => ({"kind":_0,"name":_1,"arguments":_2})
const _o11 = (_0: any,_1: any,_2: any,_3: any,_4: any) => ({"kind":_0,"operation":_1,"name":_2,"variableDefinitions":_3,"selectionSet":_4})
const _o12 = (_0: any,_1: any,_2: any) => ({"kind":_0,"variable":_1,"type":_2})
const _o13 = (_0: any,_1: any) => ({"kind":_0,"fields":_1})
const _o14 = (_0: any,_1: any) => ({"kind":_0,"type":_1})
const _o15 = (_0: any,_1: any,_2: any,_3: any) => ({"kind":_0,"operation":_1,"name":_2,"selectionSet":_3})
const _o16 = (_0: any,_1: any,_2: any,_3: any,_4: any) => ({"kind":_0,"alias":_1,"name":_2,"arguments":_3,"selectionSet":_4})
const _1="Document"
const _2="FragmentDefinition"
const _3="Name"
const _4=_o3(_3,"BookmarksMinimumInfoFragment")
const _5="NamedType"
const _6=_o4(_5,_o3(_3,"Bookmark"))
const _7="SelectionSet"
const _8="Field"
const _9=_o3(_3,"_id")
const _10=_o4(_8,_9)
const _11=_o4(_8,_o3(_3,"active"))
const _12=_o2(_2,_4,_6,_o5(_7,[_10,_11]))
const _13=_o3(_3,"PostsMinimumInfo")
const _14=_o4(_5,_o3(_3,"Post"))
const _15=_o3(_3,"slug")
const _16=_o4(_8,_15)
const _17=_o4(_8,_o3(_3,"title"))
const _18=_o4(_8,_o3(_3,"draft"))
const _19=_o4(_8,_o3(_3,"shortform"))
const _20=_o3(_3,"af")
const _21=_o4(_8,_20)
const _22=_o3(_3,"userId")
const _23=_o4(_8,_22)
const _24=_o4(_8,_o3(_3,"coauthorUserIds"))
const _25=_o4(_8,_o3(_3,"rejected"))
const _26=_o2(_2,_13,_14,_o5(_7,[_10,_16,_17,_18,_19,_o4(_8,_o3(_3,"hideCommentKarma")),_21,_23,_24,_25,_o4(_8,_o3(_3,"collabEditorDialogue"))]))
const _27=_o3(_3,"PostsBase")
const _28="FragmentSpread"
const _29=_o4(_28,_13)
const _30=_o3(_3,"url")
const _31=_o4(_8,_30)
const _32=_o4(_8,_o3(_3,"postedAt"))
const _33=_o4(_8,_o3(_3,"status"))
const _34=_o4(_8,_o3(_3,"frontpageDate"))
const _35=_o4(_8,_o3(_3,"deletedDraft"))
const _36=_o4(_8,_o3(_3,"tagRelevance"))
const _37=_o3(_3,"linkSharingKey")
const _38=_o4(_8,_o3(_3,"commentCount"))
const _39=_o4(_8,_o3(_3,"voteCount"))
const _40=_o4(_8,_o3(_3,"baseScore"))
const _41=_o4(_8,_o3(_3,"extendedScore"))
const _42=_o4(_8,_o3(_3,"emojiReactors"))
const _43=_o4(_8,_o3(_3,"score"))
const _44=_o4(_8,_o3(_3,"lastVisitedAt"))
const _45=_o3(_3,"isRead")
const _46=_o4(_8,_45)
const _47=_o4(_8,_o3(_3,"lastCommentedAt"))
const _48=_o4(_8,_o3(_3,"canonicalCollectionSlug"))
const _49=_o4(_8,_o3(_3,"question"))
const _50=_o4(_8,_o3(_3,"location"))
const _51=_o4(_8,_o3(_3,"googleLocation"))
const _52=_o4(_8,_o3(_3,"facebookLink"))
const _53=_o4(_8,_o3(_3,"meetupLink"))
const _54=_o4(_8,_o3(_3,"website"))
const _55=_o4(_8,_o3(_3,"contactInfo"))
const _56=_o4(_8,_o3(_3,"isEvent"))
const _57=_o4(_8,_o3(_3,"eventImageId"))
const _58=_o3(_3,"eventType")
const _59=_o4(_8,_o3(_3,"types"))
const _60=_o3(_3,"groupId")
const _61=_o4(_8,_60)
const _62=_o4(_8,_o3(_3,"reviewedByUserId"))
const _63=_o4(_8,_o3(_3,"authorIsUnreviewed"))
const _64=_o4(_8,_o3(_3,"afDate"))
const _65=_o4(_8,_o3(_3,"suggestForAlignmentUserIds"))
const _66=_o4(_8,_o3(_3,"reviewForAlignmentUserId"))
const _67=_o4(_8,_o3(_3,"afBaseScore"))
const _68=_o4(_8,_o3(_3,"afExtendedScore"))
const _69=_o4(_8,_o3(_3,"afCommentCount"))
const _70=_o4(_8,_o3(_3,"hideAuthor"))
const _71=_o4(_8,_o3(_3,"moderationStyle"))
const _72=_o4(_8,_o3(_3,"reviewVoteCount"))
const _73=_o3(_3,"name")
const _74=_o4(_8,_73)
const _75=_o4(_8,_o3(_3,"organizerIds"))
const _76=_o4(_8,_o3(_3,"forceAllowType3Audio"))
const _77=_o4(_8,_o3(_3,"votingSystem"))
const _78=_o2(_2,_27,_14,_o5(_7,[_29,_31,_32,_o4(_8,_o3(_3,"sticky")),_o4(_8,_o3(_3,"metaSticky")),_o4(_8,_o3(_3,"stickyPriority")),_33,_34,_o4(_8,_o3(_3,"meta")),_35,_o4(_8,_o3(_3,"postCategory")),_36,_o4(_8,_o3(_3,"shareWithUsers")),_o4(_8,_o3(_3,"sharingSettings")),_o4(_8,_37),_o4(_8,_o3(_3,"contents_latest")),_38,_39,_40,_41,_42,_o4(_8,_o3(_3,"unlisted")),_43,_44,_o4(_8,_o3(_3,"isFuture")),_46,_47,_o4(_8,_o3(_3,"lastCommentPromotedAt")),_48,_o4(_8,_o3(_3,"curatedDate")),_o4(_8,_o3(_3,"commentsLocked")),_o4(_8,_o3(_3,"commentsLockedToAccountsCreatedAfter")),_o4(_8,_o3(_3,"debate")),_49,_o4(_8,_o3(_3,"hiddenRelatedQuestion")),_o4(_8,_o3(_3,"originalPostRelationSourceId")),_23,_50,_51,_o4(_8,_o3(_3,"onlineEvent")),_o4(_8,_o3(_3,"globalEvent")),_o4(_8,_o3(_3,"startTime")),_o4(_8,_o3(_3,"endTime")),_o4(_8,_o3(_3,"localStartTime")),_o4(_8,_o3(_3,"localEndTime")),_o4(_8,_o3(_3,"eventRegistrationLink")),_o4(_8,_o3(_3,"joinEventLink")),_52,_53,_54,_55,_56,_57,_o4(_8,_58),_59,_61,_62,_o4(_8,_o3(_3,"suggestForCuratedUserIds")),_o4(_8,_o3(_3,"suggestForCuratedUsernames")),_o4(_8,_o3(_3,"reviewForCuratedUserId")),_63,_64,_65,_66,_67,_68,_69,_o4(_8,_o3(_3,"afLastCommentedAt")),_o4(_8,_o3(_3,"afSticky")),_70,_71,_o4(_8,_o3(_3,"ignoreRateLimits")),_o4(_8,_o3(_3,"submitToFrontpage")),_19,_o4(_8,_o3(_3,"onlyVisibleToLoggedIn")),_o4(_8,_o3(_3,"onlyVisibleToEstablishedAccounts")),_o4(_8,_o3(_3,"reviewCount")),_72,_o4(_8,_o3(_3,"positiveReviewVoteCount")),_o4(_8,_o3(_3,"manifoldReviewMarketId")),_o4(_8,_o3(_3,"annualReviewMarketProbability")),_o4(_8,_o3(_3,"annualReviewMarketIsResolved")),_o4(_8,_o3(_3,"annualReviewMarketYear")),_o4(_8,_o3(_3,"annualReviewMarketUrl")),_o6(_8,_o3(_3,"group"),_o5(_7,[_10,_74,_75])),_o4(_8,_o3(_3,"rsvpCounts")),_o4(_8,_o3(_3,"podcastEpisodeId")),_76,_o4(_8,_o3(_3,"nominationCount2019")),_o4(_8,_o3(_3,"reviewCount2019")),_77,_o4(_8,_o3(_3,"disableRecommendation"))]))
const _79=_o3(_3,"UsersMinimumInfo")
const _80=_o4(_5,_o3(_3,"User"))
const _81=_o4(_8,_o3(_3,"createdAt"))
const _82=_o3(_3,"username")
const _83=_o4(_8,_82)
const _84=_o3(_3,"displayName")
const _85=_o4(_8,_84)
const _86=_o4(_8,_o3(_3,"profileImageId"))
const _87=_o4(_8,_o3(_3,"karma"))
const _88=_o4(_8,_o3(_3,"afKarma"))
const _89=_o3(_3,"deleted")
const _90=_o4(_8,_89)
const _91=_o4(_8,_o3(_3,"htmlBio"))
const _92=_o4(_8,_o3(_3,"jobTitle"))
const _93=_o4(_8,_o3(_3,"organization"))
const _94=_o4(_8,_o3(_3,"postCount"))
const _95=_o4(_8,_o3(_3,"afPostCount"))
const _96=_o2(_2,_79,_80,_o5(_7,[_10,_16,_81,_83,_85,_86,_87,_88,_90,_o4(_8,_o3(_3,"isAdmin")),_91,_92,_93,_94,_38,_o4(_8,_o3(_3,"sequenceCount")),_95,_69,_o4(_8,_o3(_3,"spamRiskScore")),_o4(_8,_o3(_3,"tagRevisionCount")),_62]))
const _97=_o3(_3,"PostsAuthors")
const _98=_o3(_3,"user")
const _99=_o4(_28,_79)
const _100=_o4(_8,_o3(_3,"bannedUserIds"))
const _101=_o4(_8,_o3(_3,"moderatorAssistance"))
const _102=_o4(_8,_o3(_3,"groups"))
const _103=_o4(_8,_o3(_3,"banned"))
const _104=_o4(_8,_o3(_3,"allCommentingDisabled"))
const _105=_o3(_3,"coauthors")
const _106=_o5(_7,[_99])
const _107=_o6(_8,_105,_106)
const _108=_o2(_2,_97,_14,_o5(_7,[_o6(_8,_98,_o5(_7,[_99,_86,_71,_100,_101,_102,_103,_104])),_107]))
const _109=_o3(_3,"TagBasicInfo")
const _110=_o4(_5,_o3(_3,"Tag"))
const _111=_o4(_8,_o3(_3,"shortName"))
const _112=_o4(_8,_o3(_3,"core"))
const _113=_o4(_8,_o3(_3,"needsReview"))
const _114=_o4(_8,_o3(_3,"wikiOnly"))
const _115=_o4(_8,_o3(_3,"noindex"))
const _116=_o4(_8,_o3(_3,"isArbitalImport"))
const _117=_o4(_8,_o3(_3,"currentUserVote"))
const _118=_o4(_8,_o3(_3,"currentUserExtendedVote"))
const _119=_o2(_2,_109,_110,_o5(_7,[_10,_23,_74,_111,_16,_112,_94,_o4(_8,_o3(_3,"adminOnly")),_o4(_8,_o3(_3,"canEditUserIds")),_o4(_8,_o3(_3,"suggestedAsFilter")),_113,_o4(_8,_o3(_3,"descriptionTruncationCount")),_81,_114,_90,_o4(_8,_o3(_3,"isSubforum")),_115,_116,_o4(_8,_o3(_3,"isPlaceholderPage")),_40,_41,_43,_67,_68,_39,_117,_118]))
const _120=_o3(_3,"TagPreviewFragment")
const _121=_o4(_28,_109)
const _122=_o3(_3,"parentTag")
const _123=_o5(_7,[_121])
const _124=_o6(_8,_122,_123)
const _125=_o3(_3,"subTags")
const _126=_o6(_8,_125,_123)
const _127=_o3(_3,"description")
const _128=_o4(_8,_o3(_3,"htmlHighlight"))
const _129=_o4(_8,_o3(_3,"canVoteOnRels"))
const _130=_o2(_2,_120,_110,_o5(_7,[_121,_46,_124,_126,_o6(_8,_127,_o5(_7,[_10,_128])),_129,_116]))
const _131=_o3(_3,"CommentsList")
const _132=_o4(_5,_o3(_3,"Comment"))
const _133=_o3(_3,"postId")
const _134=_o4(_8,_133)
const _135=_o3(_3,"tagId")
const _136=_o4(_8,_135)
const _137=_o3(_3,"tag")
const _138=_o5(_7,[_10,_16])
const _139=_o6(_8,_137,_138)
const _140=_o4(_8,_o3(_3,"relevantTagIds"))
const _141=_o4(_28,_120)
const _142=_o5(_7,[_141])
const _143=_o6(_8,_o3(_3,"relevantTags"),_142)
const _144=_o4(_8,_o3(_3,"tagCommentType"))
const _145=_o3(_3,"topLevelCommentId")
const _146=_o3(_3,"contents")
const _147=_o4(_8,_o3(_3,"html"))
const _148=_o4(_8,_o3(_3,"plaintextMainText"))
const _149=_o4(_8,_o3(_3,"wordCount"))
const _150=_o3(_3,"deletedPublic")
const _151=_o4(_8,_150)
const _152=_o3(_3,"deletedReason")
const _153=_o4(_8,_152)
const _154=_o6(_8,_98,_106)
const _155=_o4(_8,_o3(_3,"lastSubthreadActivity"))
const _156=_o4(_8,_o3(_3,"rejectedReason"))
const _157=_o3(_3,"forumEventId")
const _158=_o2(_2,_131,_132,_o5(_7,[_10,_134,_136,_139,_140,_143,_144,_o4(_8,_o3(_3,"parentCommentId")),_o4(_8,_145),_o4(_8,_o3(_3,"descendentCount")),_17,_o6(_8,_146,_o5(_7,[_10,_147,_148,_149])),_32,_o4(_8,_o3(_3,"lastEditedAt")),_o4(_8,_o3(_3,"repliesBlockedUntil")),_23,_18,_90,_151,_o4(_8,_o3(_3,"deletedByUserId")),_153,_70,_63,_154,_117,_118,_40,_41,_43,_39,_42,_21,_64,_o4(_8,_o3(_3,"moveToAlignmentUserId")),_67,_68,_65,_66,_113,_o4(_8,_o3(_3,"answer")),_o4(_8,_o3(_3,"parentAnswerId")),_o4(_8,_o3(_3,"retracted")),_o4(_8,_o3(_3,"postVersion")),_62,_19,_o4(_8,_o3(_3,"shortformFrontpage")),_155,_o4(_8,_o3(_3,"moderatorHat")),_o4(_8,_o3(_3,"hideModeratorHat")),_o4(_8,_o3(_3,"nominatedForReview")),_o4(_8,_o3(_3,"reviewingForReview")),_o4(_8,_o3(_3,"promoted")),_o6(_8,_o3(_3,"promotedByUser"),_106),_o4(_8,_o3(_3,"directChildrenCount")),_77,_o4(_8,_o3(_3,"isPinnedOnProfile")),_o4(_8,_o3(_3,"debateResponse")),_25,_156,_o4(_8,_o3(_3,"originalDialogueId")),_o4(_8,_157),_o4(_8,_o3(_3,"forumEventMetadata"))]))
const _159=_o3(_3,"PostsListBase")
const _160=_o4(_28,_27)
const _161=_o3(_3,"customHighlight")
const _162=_o4(_8,_o3(_3,"plaintextDescription"))
const _163=_o5(_7,[_10,_154])
const _164=_o4(_28,_131)
const _165=_o5(_7,[_164])
const _166=_o3(_3,"tags")
const _167=_o3(_3,"socialPreviewData")
const _168=_o4(_8,_o3(_3,"imageUrl"))
const _169=_o2(_2,_159,_14,_o5(_7,[_160,_o4(_28,_97),_o4(_8,_o3(_3,"readTimeMinutes")),_156,_o6(_8,_161,_o5(_7,[_10,_147,_162])),_o6(_8,_o3(_3,"lastPromotedComment"),_163),_o6(_8,_o3(_3,"bestAnswer"),_165),_o6(_8,_166,_123),_o6(_8,_167,_o5(_7,[_10,_168])),_o4(_8,_o3(_3,"feedId")),_o4(_8,_o3(_3,"totalDialogueResponseCount")),_o4(_8,_o3(_3,"unreadDebateResponseCount")),_o4(_8,_o3(_3,"dialogTooltipPreview")),_o4(_8,_o3(_3,"disableSidenotes"))]))
const _170=_o3(_3,"PostsList")
const _171=_o4(_28,_159)
const _172=_o3(_3,"version")
const _173=_o4(_8,_172)
const _174=_o6(_8,_o3(_3,"fmCrosspost"),_o5(_7,[_o4(_8,_o3(_3,"isCrosspost")),_o4(_8,_o3(_3,"hostedHere")),_o4(_8,_o3(_3,"foreignPostId"))]))
const _175=_o2(_2,_170,_14,_o5(_7,[_171,_35,_o6(_8,_146,_o5(_7,[_10,_128,_162,_149,_173])),_174,_100]))
const _176=_o3(_3,"PostPodcastEpisode")
const _177=_o4(_8,_o3(_3,"episodeLink"))
const _178=_o4(_8,_o3(_3,"externalEpisodeId"))
const _179=_o6(_8,_o3(_3,"podcastEpisode"),_o5(_7,[_10,_17,_o6(_8,_o3(_3,"podcast"),_o5(_7,[_10,_17,_o4(_8,_o3(_3,"applePodcastLink")),_o4(_8,_o3(_3,"spotifyPodcastLink"))])),_177,_178]))
const _180=_o2(_2,_176,_14,_o5(_7,[_179]))
const _181=_o3(_3,"PostsListWithVotes")
const _182=_o4(_28,_170)
const _183=_o4(_28,_176)
const _184=_o2(_2,_181,_14,_o5(_7,[_182,_117,_118,_183]))
const _185=_o3(_3,"BookmarksWithDocumentFragment")
const _186=_o4(_28,_4)
const _187=_o3(_3,"post")
const _188=_o4(_28,_181)
const _189=_o5(_7,[_188])
const _190=_o6(_8,_187,_189)
const _191=_o2(_2,_185,_6,_o5(_7,[_186,_190]))
const _192=_o3(_3,"UltraFeedComment")
const _193=_o2(_2,_192,_132,_o5(_7,[_164,_190]))
const _194=_o3(_3,"BookmarksFeedItemFragment")
const _195=_o3(_3,"collectionName")
const _196=_o4(_8,_195)
const _197=_o4(_8,_o3(_3,"lastUpdated"))
const _198=_o3(_3,"comment")
const _199=_o5(_7,[_o4(_28,_192)])
const _200=_o2(_2,_194,_6,_o5(_7,[_186,_196,_197,_190,_o6(_8,_198,_199)]))
const _201=_o3(_3,"RevisionDisplay")
const _202=_o4(_5,_o3(_3,"Revision"))
const _203=_o2(_2,_201,_202,_o5(_7,[_10,_173,_147,_149,_128,_162]))
const _204=_o3(_3,"SequencesPageTitleFragment")
const _205=_o4(_5,_o3(_3,"Sequence"))
const _206=_o5(_7,[_10,_17])
const _207=_o6(_8,_o3(_3,"canonicalCollection"),_206)
const _208=_o2(_2,_204,_205,_o5(_7,[_10,_17,_48,_207]))
const _209=_o3(_3,"SequencesPageFragment")
const _210=_o4(_28,_204)
const _211=_o4(_28,_201)
const _212=_o5(_7,[_211])
const _213=_o6(_8,_146,_212)
const _214=_o4(_8,_o3(_3,"gridImageId"))
const _215=_o4(_8,_o3(_3,"bannerImageId"))
const _216=_o4(_8,_o3(_3,"curatedOrder"))
const _217=_o4(_8,_o3(_3,"postsCount"))
const _218=_o4(_8,_o3(_3,"readPostsCount"))
const _219=_o2(_2,_209,_205,_o5(_7,[_210,_81,_23,_154,_213,_214,_215,_48,_18,_o4(_8,_o3(_3,"isDeleted")),_o4(_8,_o3(_3,"hidden")),_o4(_8,_o3(_3,"hideFromAuthorPage")),_115,_216,_o4(_8,_o3(_3,"userProfileOrder")),_21,_217,_218]))
const _220=_o3(_3,"ChaptersFragment")
const _221=_o4(_5,_o3(_3,"Chapter"))
const _222=_o4(_8,_o3(_3,"subtitle"))
const _223=_o4(_8,_o3(_3,"number"))
const _224=_o3(_3,"sequenceId")
const _225=_o3(_3,"postIds")
const _226=_o4(_8,_225)
const _227=_o3(_3,"posts")
const _228=_o6(_8,_227,_189)
const _229=_o2(_2,_220,_221,_o5(_7,[_10,_81,_17,_222,_213,_223,_o4(_8,_224),_226,_228]))
const _230=_o3(_3,"SequencesPageWithChaptersFragment")
const _231=_o4(_28,_209)
const _232=_o3(_3,"chapters")
const _233=_o4(_28,_220)
const _234=_o5(_7,[_233])
const _235=_o2(_2,_230,_205,_o5(_7,[_231,_o6(_8,_232,_234)]))
const _236=_o3(_3,"BookPageFragment")
const _237=_o4(_5,_o3(_3,"Book"))
const _238=_o3(_3,"sequences")
const _239=_o2(_2,_236,_237,_o5(_7,[_10,_81,_17,_223,_222,_o4(_8,_o3(_3,"tocTitle")),_213,_o4(_8,_o3(_3,"sequenceIds")),_o6(_8,_238,_o5(_7,[_o4(_28,_230)])),_226,_228,_o4(_8,_o3(_3,"collectionId")),_o4(_8,_o3(_3,"displaySequencesAsGrid")),_o4(_8,_o3(_3,"hideProgressBar")),_o4(_8,_o3(_3,"showChapters"))]))
const _240=_o3(_3,"RevisionEdit")
const _241=_o4(_8,_o3(_3,"editedAt"))
const _242=_o4(_8,_o3(_3,"commitMessage"))
const _243=_o3(_3,"type")
const _244=_o4(_8,_243)
const _245=_o3(_3,"data")
const _246=_o4(_8,_245)
const _247=_o6(_8,_o3(_3,"originalContents"),_o5(_7,[_244,_246]))
const _248=_o4(_8,_o3(_3,"markdown"))
const _249=_o2(_2,_240,_202,_o5(_7,[_211,_o4(_8,_o3(_3,"updateType")),_241,_23,_242,_247,_248,_o4(_8,_o3(_3,"ckEditorMarkup"))]))
const _250=_o3(_3,"BookEdit")
const _251=_o4(_28,_236)
const _252=_o5(_7,[_o4(_28,_240)])
const _253=_o6(_8,_146,_252)
const _254=_o2(_2,_250,_237,_o5(_7,[_251,_253]))
const _255=_o3(_3,"ChaptersEdit")
const _256=_o2(_2,_255,_221,_o5(_7,[_233,_253]))
const _257=_o3(_3,"documentId")
const _258=_o4(_8,_257)
const _259=_o4(_8,_o3(_3,"endedAt"))
const _260=_o3(_3,"ModeratorClientIDInfo")
const _261=_o4(_8,_o3(_3,"clientId"))
const _262=_o4(_8,_o3(_3,"firstSeenReferrer"))
const _263=_o4(_8,_o3(_3,"firstSeenLandingPage"))
const _264=_o3(_3,"users")
const _265=_o6(_8,_264,_106)
const _266=_o2(_2,_260,_o4(_5,_o3(_3,"ClientId")),_o5(_7,[_10,_261,_81,_262,_263,_265]))
const _267=_o3(_3,"CollectionContinueReadingFragment")
const _268=_o4(_5,_o3(_3,"Collection"))
const _269=_o2(_2,_267,_268,_o5(_7,[_10,_17,_16,_214]))
const _270=_o3(_3,"CollectionsPageFragment")
const _271=_o5(_7,[_251])
const _272=_o2(_2,_270,_268,_o5(_7,[_10,_81,_16,_23,_154,_17,_213,_o4(_8,_o3(_3,"firstPageLink")),_214,_o6(_8,_o3(_3,"books"),_271),_o4(_8,_o3(_3,"hideStartReadingButton")),_115]))
const _273=_o3(_3,"CollectionsEditFragment")
const _274=_o4(_28,_270)
const _275=_o2(_2,_273,_268,_o5(_7,[_274,_253]))
const _276=_o3(_3,"CollectionsBestOfFragment")
const _277=_o2(_2,_276,_268,_o5(_7,[_10,_81,_16,_23,_154,_17,_214,_115,_217,_218,_213]))
const _278=_o3(_3,"ShortformComments")
const _279=_o5(_7,[_29])
const _280=_o6(_8,_187,_279)
const _281=_o2(_2,_278,_132,_o5(_7,[_164,_280,_143]))
const _282=_o3(_3,"FrontpageShortformComments")
const _283=_o4(_28,_278)
const _284=_o3(_3,"latestChildren")
const _285=_o5(_7,[_10,_85])
const _286=_o6(_8,_98,_285)
const _287=_o2(_2,_282,_132,_o5(_7,[_283,_o6(_8,_284,_o5(_7,[_10,_32,_286]))]))
const _288=_o3(_3,"DraftComments")
const _289=_o3(_3,"parentComment")
const _290=_o2(_2,_288,_132,_o5(_7,[_164,_280,_o6(_8,_289,_163)]))
const _291=_o3(_3,"CommentEdit")
const _292=_o2(_2,_291,_132,_o5(_7,[_164,_140,_253]))
const _293=_o3(_3,"DeletedCommentsMetaData")
const _294=_o2(_2,_293,_132,_o5(_7,[_10,_90,_o4(_8,_o3(_3,"deletedDate")),_o6(_8,_o3(_3,"deletedByUser"),_285),_153,_151]))
const _295=_o3(_3,"DeletedCommentsModerationLog")
const _296=_o4(_28,_293)
const _297=_o2(_2,_295,_132,_o5(_7,[_296,_154,_o6(_8,_187,_o5(_7,[_17,_16,_10]))]))
const _298=_o3(_3,"CommentWithRepliesFragment")
const _299=_o6(_8,_137,_123)
const _300=_o5(_7,[_160])
const _301=_o2(_2,_298,_132,_o5(_7,[_164,_155,_o6(_8,_284,_165),_299,_o6(_8,_187,_300)]))
const _302=_o3(_3,"StickySubforumCommentFragment")
const _303=_o4(_28,_298)
const _304=_o2(_2,_302,_132,_o5(_7,[_303,_299]))
const _305=_o3(_3,"WithVoteComment")
const _306=_o4(_8,_o3(_3,"__typename"))
const _307=_o5(_7,[_306,_10,_117,_118,_40,_41,_43,_67,_68,_39])
const _308=_o2(_2,_305,_132,_307)
const _309=_o3(_3,"CommentsListWithModGPTAnalysis")
const _310=_o2(_2,_309,_132,_o5(_7,[_164,_280,_o4(_8,_o3(_3,"modGPTAnalysis"))]))
const _311=_o3(_3,"PostsForAutocomplete")
const _312=_o6(_8,_146,_o5(_7,[_248]))
const _313=_o2(_2,_311,_14,_o5(_7,[_10,_17,_23,_40,_41,_154,_312]))
const _314=_o3(_3,"CommentsForAutocomplete")
const _315=_o5(_7,[_o4(_28,_311)])
const _316=_o2(_2,_314,_132,_o5(_7,[_10,_134,_40,_41,_81,_154,_312,_o6(_8,_187,_315)]))
const _317=_o3(_3,"CommentsForAutocompleteWithParents")
const _318=_o4(_28,_314)
const _319=_o5(_7,[_318])
const _320=_o2(_2,_317,_132,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_o5(_7,[_318,_o6(_8,_289,_319)]))]))]))]))]))]))]))]))]))]))
const _321=_o3(_3,"SuggestAlignmentComment")
const _322=_o6(_8,_o3(_3,"suggestForAlignmentUsers"),_285)
const _323=_o2(_2,_321,_132,_o5(_7,[_164,_280,_65,_322]))
const _324=_o3(_3,"ConversationsMinimumInfo")
const _325=_o4(_5,_o3(_3,"Conversation"))
const _326=_o3(_3,"participantIds")
const _327=_o3(_3,"moderator")
const _328=_o2(_2,_324,_325,_o5(_7,[_10,_81,_o4(_8,_o3(_3,"latestActivity")),_17,_o4(_8,_326),_o4(_8,_o3(_3,"archivedByIds")),_o4(_8,_o3(_3,"messageCount")),_o4(_8,_327)]))
const _329=_o3(_3,"messageListFragment")
const _330=_o4(_5,_o3(_3,"Message"))
const _331=_o3(_3,"conversationId")
const _332=_o4(_8,_331)
const _333=_o2(_2,_329,_330,_o5(_7,[_10,_o6(_8,_98,_o5(_7,[_99,_86])),_o6(_8,_146,_o5(_7,[_147,_148])),_81,_332,_39,_40,_43,_41,_117,_118]))
const _334=_o3(_3,"ConversationsList")
const _335=_o4(_28,_324)
const _336=_o5(_7,[_o4(_28,_329)])
const _337=_o2(_2,_334,_325,_o5(_7,[_335,_o6(_8,_o3(_3,"participants"),_106),_o6(_8,_o3(_3,"latestMessage"),_336)]))
const _338=_o3(_3,"ConversationsListWithReadStatus")
const _339=_o4(_28,_334)
const _340=_o2(_2,_338,_325,_o5(_7,[_339,_o4(_8,_o3(_3,"hasUnreadMessages"))]))
const _341=_o3(_3,"DigestPostsMinimumInfo")
const _342=_o3(_3,"digestId")
const _343=_o4(_8,_o3(_3,"emailDigestStatus"))
const _344=_o4(_8,_o3(_3,"onsiteDigestStatus"))
const _345=_o2(_2,_341,_o4(_5,_o3(_3,"DigestPost")),_o5(_7,[_10,_o4(_8,_342),_134,_343,_344]))
const _346=_o3(_3,"DigestsMinimumInfo")
const _347=_o3(_3,"num")
const _348=_o3(_3,"startDate")
const _349=_o4(_8,_348)
const _350=_o3(_3,"endDate")
const _351=_o4(_8,_350)
const _352=_o2(_2,_346,_o4(_5,_o3(_3,"Digest")),_o5(_7,[_10,_o4(_8,_347),_349,_351,_o4(_8,_o3(_3,"publishedDate")),_o4(_8,_o3(_3,"onsiteImageId")),_o4(_8,_o3(_3,"onsitePrimaryColor"))]))
const _353=_o4(_5,_o3(_3,"ElectionCandidate"))
const _354=_o3(_3,"electionName")
const _355=_o4(_8,_127)
const _356=_o3(_3,"WithVoteElectionCandidate")
const _357=_o5(_7,[_306,_10,_43,_40,_41,_67,_39,_117,_118])
const _358=_o2(_2,_356,_353,_357)
const _359=_o3(_3,"ElicitQuestionFragment")
const _360=_o4(_8,_o3(_3,"notes"))
const _361=_o4(_8,_o3(_3,"resolution"))
const _362=_o4(_8,_o3(_3,"resolvesBy"))
const _363=_o2(_2,_359,_o4(_5,_o3(_3,"ElicitQuestion")),_o5(_7,[_10,_17,_360,_361,_362]))
const _364=_o3(_3,"FeaturedResourcesFragment")
const _365=_o2(_2,_364,_o4(_5,_o3(_3,"FeaturedResource")),_o5(_7,[_10,_17,_o4(_8,_o3(_3,"body")),_o4(_8,_o3(_3,"ctaText")),_o4(_8,_o3(_3,"ctaUrl")),_o4(_8,_o3(_3,"expiresAt"))]))
const _366=_o3(_3,"FieldChangeFragment")
const _367=_o3(_3,"fieldName")
const _368=_o4(_8,_367)
const _369=_o2(_2,_366,_o4(_5,_o3(_3,"FieldChange")),_o5(_7,[_10,_81,_23,_o4(_8,_o3(_3,"changeGroup")),_258,_368,_o4(_8,_o3(_3,"oldValue")),_o4(_8,_o3(_3,"newValue"))]))
const _370=_o3(_3,"ForumEventsMinimumInfo")
const _371=_o4(_5,_o3(_3,"ForumEvent"))
const _372=_o3(_3,"commentId")
const _373=_o4(_8,_372)
const _374=_o2(_2,_370,_371,_o5(_7,[_10,_17,_349,_351,_o4(_8,_o3(_3,"darkColor")),_o4(_8,_o3(_3,"lightColor")),_o4(_8,_o3(_3,"bannerTextColor")),_o4(_8,_o3(_3,"contrastColor")),_136,_134,_373,_215,_o4(_8,_o3(_3,"eventFormat")),_o4(_8,_o3(_3,"customComponent")),_o4(_8,_o3(_3,"commentPrompt")),_o4(_8,_o3(_3,"isGlobal")),_o4(_8,_o3(_3,"pollAgreeWording")),_o4(_8,_o3(_3,"pollDisagreeWording")),_o4(_8,_o3(_3,"maxStickersPerUser"))]))
const _375=_o3(_3,"ForumEventsDisplay")
const _376=_o4(_28,_370)
const _377=_o3(_3,"frontpageDescription")
const _378=_o5(_7,[_10,_147])
const _379=_o3(_3,"frontpageDescriptionMobile")
const _380=_o3(_3,"postPageDescription")
const _381=_o3(_3,"pollQuestion")
const _382=_o2(_2,_375,_371,_o5(_7,[_376,_o4(_8,_o3(_3,"publicData")),_39,_280,_299,_o6(_8,_377,_378),_o6(_8,_379,_378),_o6(_8,_380,_378),_o6(_8,_381,_o5(_7,[_10,_147,_148]))]))
const _383=_o3(_3,"ForumEventsEdit")
const _384=_o2(_2,_383,_371,_o5(_7,[_376,_o6(_8,_377,_252),_o6(_8,_379,_252),_o6(_8,_380,_252),_o6(_8,_381,_252)]))
const _385=_o4(_5,_o3(_3,"GoogleServiceAccountSession"))
const _386=_o3(_3,"email")
const _387=_o4(_8,_386)
const _388=_o3(_3,"GoogleServiceAccountSessionAdminInfo")
const _389=_o2(_2,_388,_385,_o5(_7,[_10,_387,_o4(_8,_o3(_3,"estimatedExpiry"))]))
const _390=_o3(_3,"JargonTerms")
const _391=_o4(_5,_o3(_3,"JargonTerm"))
const _392=_o4(_8,_o3(_3,"term"))
const _393=_o4(_8,_o3(_3,"humansAndOrAIEdited"))
const _394=_o4(_8,_o3(_3,"approved"))
const _395=_o4(_8,_o3(_3,"altTerms"))
const _396=_o2(_2,_390,_391,_o5(_7,[_10,_134,_392,_253,_393,_394,_90,_395]))
const _397=_o3(_3,"LlmConversationsFragment")
const _398=_o4(_5,_o3(_3,"LlmConversation"))
const _399=_o2(_2,_397,_398,_o5(_7,[_10,_23,_17,_81,_o4(_8,_o3(_3,"lastUpdatedAt")),_90]))
const _400=_o3(_3,"LlmConversationsViewingPageFragment")
const _401=_o4(_28,_397)
const _402=_o2(_2,_400,_398,_o5(_7,[_401,_o4(_8,_o3(_3,"totalCharacterCount")),_154]))
const _403=_o3(_3,"LlmMessagesFragment")
const _404=_o4(_8,_o3(_3,"content"))
const _405=_o2(_2,_403,_o4(_5,_o3(_3,"LlmMessage")),_o5(_7,[_10,_23,_332,_o4(_8,_o3(_3,"role")),_404,_81]))
const _406=_o3(_3,"LlmConversationsWithMessagesFragment")
const _407=_o3(_3,"messages")
const _408=_o2(_2,_406,_398,_o5(_7,[_401,_o6(_8,_407,_o5(_7,[_o4(_28,_403)]))]))
const _409=_o3(_3,"localGroupsBase")
const _410=_o4(_5,_o3(_3,"Localgroup"))
const _411=_o4(_8,_o3(_3,"isOnline"))
const _412=_o4(_8,_o3(_3,"mongoLocation"))
const _413=_o2(_2,_409,_410,_o5(_7,[_10,_81,_75,_o6(_8,_o3(_3,"organizers"),_106),_o4(_8,_o3(_3,"lastActivity")),_74,_o4(_8,_o3(_3,"nameInAnotherLanguage")),_411,_50,_51,_412,_59,_o4(_8,_o3(_3,"categories")),_55,_52,_o4(_8,_o3(_3,"facebookPageLink")),_53,_o4(_8,_o3(_3,"slackLink")),_54,_215,_o4(_8,_o3(_3,"inactive")),_90]))
const _414=_o3(_3,"localGroupsHomeFragment")
const _415=_o4(_28,_409)
const _416=_o2(_2,_414,_410,_o5(_7,[_415,_213]))
const _417=_o3(_3,"localGroupsEdit")
const _418=_o2(_2,_417,_410,_o5(_7,[_415,_253]))
const _419=_o3(_3,"localGroupsIsOnline")
const _420=_o2(_2,_419,_410,_o5(_7,[_10,_74,_411]))
const _421=_o3(_3,"newEventFragment")
const _422=_o4(_5,_o3(_3,"LWEvent"))
const _423=_o4(_8,_o3(_3,"important"))
const _424=_o4(_8,_o3(_3,"properties"))
const _425=_o4(_8,_o3(_3,"intercom"))
const _426=_o2(_2,_421,_422,_o5(_7,[_10,_81,_23,_74,_423,_424,_425]))
const _427=_o3(_3,"lastEventFragment")
const _428=_o2(_2,_427,_422,_o5(_7,[_10,_81,_258,_23,_74,_423,_424,_425]))
const _429=_o3(_3,"emailHistoryFragment")
const _430=_o2(_2,_429,_422,_o5(_7,[_10,_81,_23,_74,_424]))
const _431=_o3(_3,"WithVoteMessage")
const _432=_o2(_2,_431,_330,_357)
const _433=_o3(_3,"ModerationTemplateFragment")
const _434=_o4(_8,_o3(_3,"order"))
const _435=_o2(_2,_433,_o4(_5,_o3(_3,"ModerationTemplate")),_o5(_7,[_10,_74,_196,_434,_90,_253]))
const _436=_o3(_3,"MultiDocumentMinimumInfo")
const _437=_o4(_5,_o3(_3,"MultiDocument"))
const _438=_o3(_3,"parentDocumentId")
const _439=_o4(_8,_o3(_3,"oldSlugs"))
const _440=_o4(_8,_o3(_3,"tabTitle"))
const _441=_o4(_8,_o3(_3,"tabSubtitle"))
const _442=_o4(_8,_o3(_3,"legacyData"))
const _443=_o2(_2,_436,_437,_o5(_7,[_10,_o4(_8,_438),_196,_368,_23,_16,_439,_17,_440,_441,_o4(_8,_o3(_3,"preview")),_o4(_8,_o3(_3,"index")),_90,_81,_442,_40,_41,_43,_67,_68,_39,_117,_118]))
const _444=_o3(_3,"WithVoteMultiDocument")
const _445=_o4(_28,_436)
const _446=_o5(_7,[_445])
const _447=_o2(_2,_444,_437,_446)
const _448=_o3(_3,"NotificationsList")
const _449=_o4(_8,_o3(_3,"documentType"))
const _450=_o4(_8,_o3(_3,"link"))
const _451=_o2(_2,_448,_o4(_5,_o3(_3,"Notification")),_o5(_7,[_10,_258,_449,_90,_23,_81,_450,_o4(_8,_o3(_3,"message")),_244,_o4(_8,_o3(_3,"viewed")),_o4(_8,_o3(_3,"extraData"))]))
const _452=_o3(_3,"PetrovDayActionInfo")
const _453=_o2(_2,_452,_o4(_5,_o3(_3,"PetrovDayAction")),_o5(_7,[_10,_81,_23,_o4(_8,_o3(_3,"actionType")),_246]))
const _454=_o3(_3,"PodcastEpisodeCreateFragment")
const _455=_o4(_5,_o3(_3,"PodcastEpisode"))
const _456=_o4(_8,_o3(_3,"schemaVersion"))
const _457=_o4(_8,_o3(_3,"podcastId"))
const _458=_o2(_2,_454,_455,_o5(_7,[_10,_456,_81,_442,_457,_17,_177,_178]))
const _459=_o3(_3,"PodcastEpisodeFull")
const _460=_o2(_2,_459,_455,_o5(_7,[_10,_457,_17,_177,_178]))
const _461=_o3(_3,"PodcastSelect")
const _462=_o2(_2,_461,_o4(_5,_o3(_3,"Podcast")),_206)
const _463=_o3(_3,"SplashArtCoordinates")
const _464=_o4(_5,_o3(_3,"SplashArtCoordinate"))
const _465=_o3(_3,"reviewWinnerArtId")
const _466=_o2(_2,_463,_464,_o5(_7,[_10,_o4(_8,_465),_o4(_8,_o3(_3,"leftXPct")),_o4(_8,_o3(_3,"leftYPct")),_o4(_8,_o3(_3,"leftHeightPct")),_o4(_8,_o3(_3,"leftWidthPct")),_o4(_8,_o3(_3,"leftFlipped")),_o4(_8,_o3(_3,"middleXPct")),_o4(_8,_o3(_3,"middleYPct")),_o4(_8,_o3(_3,"middleHeightPct")),_o4(_8,_o3(_3,"middleWidthPct")),_o4(_8,_o3(_3,"middleFlipped")),_o4(_8,_o3(_3,"rightXPct")),_o4(_8,_o3(_3,"rightYPct")),_o4(_8,_o3(_3,"rightHeightPct")),_o4(_8,_o3(_3,"rightWidthPct")),_o4(_8,_o3(_3,"rightFlipped"))]))
const _467=_o3(_3,"SplashArtCoordinatesEdit")
const _468=_o4(_28,_463)
const _469=_o2(_2,_467,_464,_o5(_7,[_468,_81]))
const _470=_o3(_3,"ReviewWinnerTopPostsPage")
const _471=_o4(_5,_o3(_3,"ReviewWinner"))
const _472=_o4(_8,_o3(_3,"category"))
const _473=_o4(_8,_o3(_3,"reviewYear"))
const _474=_o4(_8,_o3(_3,"reviewRanking"))
const _475=_o3(_3,"reviewWinnerArt")
const _476=_o4(_8,_o3(_3,"splashArtImageUrl"))
const _477=_o5(_7,[_o4(_28,_467)])
const _478=_o6(_8,_o3(_3,"activeSplashArtCoordinates"),_477)
const _479=_o2(_2,_470,_471,_o5(_7,[_10,_472,_216,_473,_474,_o6(_8,_475,_o5(_7,[_476,_478]))]))
const _480=_o3(_3,"PostsTopItemInfo")
const _481=_o3(_3,"reviewWinner")
const _482=_o6(_8,_481,_o5(_7,[_o4(_28,_470)]))
const _483=_o2(_2,_480,_14,_o5(_7,[_29,_46,_286,_482]))
const _484=_o3(_3,"PostsListWithVotesAndSequence")
const _485=_o3(_3,"canonicalSequence")
const _486=_o5(_7,[_231])
const _487=_o2(_2,_484,_14,_o5(_7,[_188,_o6(_8,_485,_486)]))
const _488=_o3(_3,"RSSFeedMinimumInfo")
const _489=_o4(_5,_o3(_3,"RSSFeed"))
const _490=_o4(_8,_o3(_3,"ownedByUser"))
const _491=_o4(_8,_o3(_3,"displayFullContent"))
const _492=_o4(_8,_o3(_3,"nickname"))
const _493=_o4(_8,_o3(_3,"importAsDraft"))
const _494=_o2(_2,_488,_489,_o5(_7,[_10,_23,_154,_81,_490,_491,_492,_31,_493]))
const _495=_o3(_3,"PostsDetails")
const _496=_o4(_8,_o3(_3,"canonicalSource"))
const _497=_o4(_8,_o3(_3,"noIndex"))
const _498=_o4(_8,_o3(_3,"text"))
const _499=_o6(_8,_167,_o5(_7,[_10,_498,_168]))
const _500=_o5(_7,[_o4(_28,_488)])
const _501=_o4(_8,_o3(_3,"sourcePostId"))
const _502=_o2(_2,_495,_14,_o5(_7,[_171,_496,_497,_o4(_8,_o3(_3,"viewCount")),_o6(_8,_166,_142),_499,_36,_o4(_8,_o3(_3,"commentSortOrder")),_o4(_8,_o3(_3,"sideCommentVisibility")),_o4(_8,_o3(_3,"collectionTitle")),_o4(_8,_o3(_3,"canonicalPrevPostSlug")),_o4(_8,_o3(_3,"canonicalNextPostSlug")),_o4(_8,_o3(_3,"canonicalSequenceId")),_o4(_8,_o3(_3,"canonicalBookId")),_o6(_8,_485,_206),_o6(_8,_o3(_3,"canonicalBook"),_206),_207,_100,_71,_117,_118,_o4(_8,_o3(_3,"feedLink")),_o6(_8,_o3(_3,"feed"),_500),_o6(_8,_o3(_3,"sourcePostRelations"),_o5(_7,[_10,_501,_o6(_8,_o3(_3,"sourcePost"),_189),_434])),_o6(_8,_o3(_3,"targetPostRelations"),_o5(_7,[_10,_501,_o4(_8,_o3(_3,"targetPostId")),_o6(_8,_o3(_3,"targetPost"),_189),_434])),_o4(_8,_o3(_3,"rsvps")),_o4(_8,_o3(_3,"activateRSVPs")),_174]))
const _503=_o3(_3,"UltraFeedPostFragment")
const _504=_o4(_28,_495)
const _505=_o4(_8,_o3(_3,"autoFrontpage"))
const _506=_o2(_2,_503,_14,_o5(_7,[_504,_188,_o6(_8,_146,_o5(_7,[_10,_147,_128,_149,_162,_173])),_505,_77]))
const _507=_o3(_3,"PostsReviewVotingList")
const _508=_o3(_3,"qualitativeScore")
const _509=_o4(_8,_508)
const _510=_o4(_8,_o3(_3,"quadraticScore"))
const _511=_o5(_7,[_10,_509,_510])
const _512=_o2(_2,_507,_14,_o5(_7,[_188,_o4(_8,_o3(_3,"reviewVoteScoreAllKarma")),_o4(_8,_o3(_3,"reviewVotesAllKarma")),_o4(_8,_o3(_3,"reviewVoteScoreHighKarma")),_o4(_8,_o3(_3,"reviewVotesHighKarma")),_o4(_8,_o3(_3,"reviewVoteScoreAF")),_o4(_8,_o3(_3,"reviewVotesAF")),_o6(_8,_o3(_3,"currentUserReviewVote"),_511)]))
const _513=_o3(_3,"PostsModerationGuidelines")
const _514=_o3(_3,"moderationGuidelines")
const _515=_o2(_2,_513,_14,_o5(_7,[_29,_34,_o6(_8,_98,_o5(_7,[_10,_85,_71])),_71,_o6(_8,_514,_o5(_7,[_10,_147,_247]))]))
const _516=_o3(_3,"CurationNoticesFragment")
const _517=_o2(_2,_516,_o4(_5,_o3(_3,"CurationNotice")),_o5(_7,[_10,_81,_23,_154,_373,_o6(_8,_198,_165),_134,_280,_90,_253]))
const _518=_o3(_3,"SunshineCurationPostsList")
const _519=_o3(_3,"curationNotices")
const _520=_o5(_7,[_o4(_28,_516)])
const _521=_o2(_2,_518,_14,_o5(_7,[_182,_o6(_8,_519,_520)]))
const _522=_o3(_3,"WithVoteTagRel")
const _523=_o4(_5,_o3(_3,"TagRel"))
const _524=_o2(_2,_522,_523,_357)
const _525=_o3(_3,"tagRel")
const _526="Argument"
const _527="Variable"
const _528=_o4(_527,_135)
const _529=_o8(_526,_135,_528)
const _530=_o5(_7,[_o4(_28,_522)])
const _531=_o7(_8,_525,[_529],_530)
const _532=_o3(_3,"PostsListTagWithVotes")
const _533=_o2(_2,_532,_14,_o5(_7,[_188,_531]))
const _534=_o3(_3,"PostsExpandedHighlight")
const _535=_o2(_2,_534,_14,_o5(_7,[_10,_o6(_8,_146,_o5(_7,[_10,_147,_149]))]))
const _536=_o3(_3,"PostsPlaintextDescription")
const _537=_o5(_7,[_10,_162])
const _538=_o2(_2,_536,_14,_o5(_7,[_10,_o6(_8,_146,_537)]))
const _539=_o3(_3,"RevisionMetadata")
const _540=_o2(_2,_539,_202,_o5(_7,[_10,_173,_241,_242,_23,_43,_40,_41,_39,_117,_118]))
const _541=_o3(_3,"PostsRevision")
const _542=_o4(_527,_172)
const _543=_o8(_526,_172,_542)
const _544=[_543]
const _545=_o3(_3,"revisions")
const _546=_o4(_28,_539)
const _547=_o6(_8,_545,_o5(_7,[_546]))
const _548=_o2(_2,_541,_14,_o5(_7,[_504,_173,_o7(_8,_146,_544,_212),_547]))
const _549=_o3(_3,"PostSequenceNavigation")
const _550=_o3(_3,"sequence")
const _551=_o4(_527,_224)
const _552=_o8(_526,_224,_551)
const _553=[_552]
const _554=_o3(_3,"prevOrNext")
const _555="StringValue"
const _556=_o5(_7,[_10])
const _557=_o3(_3,"nextPost")
const _558=_o2(_2,_549,_14,_o5(_7,[_o7(_8,_550,_553,_486),_o7(_8,_o3(_3,"prevPost"),_553,_o5(_7,[_188,_o7(_8,_550,[_552,_o8(_526,_554,_o9(_555,"prev",false))],_556)])),_o7(_8,_557,_553,_o5(_7,[_188,_o7(_8,_550,[_552,_o8(_526,_554,_o9(_555,"next",false))],_556)]))]))
const _559=_o3(_3,"ReviewWinnerArtImages")
const _560=_o2(_2,_559,_o4(_5,_o3(_3,"ReviewWinnerArt")),_o5(_7,[_10,_134,_o4(_8,_o3(_3,"splashArtImagePrompt")),_476,_478]))
const _561=_o3(_3,"ReviewWinnerAll")
const _562=_o5(_7,[_o4(_28,_559)])
const _563=_o4(_8,_o3(_3,"competitorCount"))
const _564=_o2(_2,_561,_471,_o5(_7,[_10,_472,_216,_134,_473,_474,_o6(_8,_475,_562),_563]))
const _565=_o3(_3,"JargonTermsPost")
const _566=_o2(_2,_565,_391,_o5(_7,[_10,_392,_393,_394,_90,_395,_213]))
const _567=_o3(_3,"PostsWithNavigationAndRevision")
const _568=_o4(_28,_541)
const _569=_o4(_28,_549)
const _570=_o6(_8,_481,_o5(_7,[_o4(_28,_561)]))
const _571=_o6(_8,_o3(_3,"glossary"),_o5(_7,[_o4(_28,_565)]))
const _572=_o2(_2,_567,_14,_o5(_7,[_568,_569,_o6(_8,_161,_212),_o10(_8,_o3(_3,"tableOfContentsRevision"),_544),_570,_183,_571]))
const _573=_o3(_3,"PostsPage")
const _574=_o4(_8,_o3(_3,"myEditorAccess"))
const _575=_o2(_2,_573,_14,_o5(_7,[_504,_173,_213,_574]))
const _576=_o3(_3,"PostsWithNavigation")
const _577=_o4(_28,_573)
const _578=_o3(_3,"tableOfContents")
const _579=_o4(_8,_578)
const _580=_o2(_2,_576,_14,_o5(_7,[_577,_569,_579,_570,_183,_571]))
const _581=_o3(_3,"SideCommentCacheMinimumInfo")
const _582=_o2(_2,_581,_o4(_5,_o3(_3,"SideCommentCache")),_o5(_7,[_10,_134,_o4(_8,_o3(_3,"annotatedHtml")),_o4(_8,_o3(_3,"commentsByBlock")),_173,_81]))
const _583=_o3(_3,"PostSideComments")
const _584=_o2(_2,_583,_14,_o5(_7,[_10,_o4(_8,_o3(_3,"sideComments")),_o6(_8,_o3(_3,"sideCommentsCache"),_o5(_7,[_o4(_28,_581)]))]))
const _585=_o3(_3,"PostsEdit")
const _586=_o4(_28,_583)
const _587=_o6(_8,_514,_252)
const _588=_o4(_8,_o3(_3,"imageId"))
const _589=_o2(_2,_585,_14,_o5(_7,[_504,_586,_574,_173,_24,_o4(_8,_o3(_3,"readTimeMinutesOverride")),_174,_o4(_8,_o3(_3,"hideFromRecentDiscussions")),_o4(_8,_o3(_3,"hideFromPopularComments")),_587,_o6(_8,_161,_252),_579,_o4(_8,_o3(_3,"subforumTagId")),_o4(_8,_o3(_3,"socialPreviewImageId")),_o6(_8,_o3(_3,"socialPreview"),_o5(_7,[_588,_498])),_o6(_8,_167,_o5(_7,[_10,_588,_498])),_o6(_8,_98,_o5(_7,[_99,_71,_100,_101])),_o6(_8,_o3(_3,"usersSharedWith"),_106),_107,_o4(_8,_o3(_3,"generateDraftJargon"))]))
const _590=_o3(_3,"PostsEditQueryFragment")
const _591=_o4(_28,_585)
const _592=_o7(_8,_146,_544,_252)
const _593=_o2(_2,_590,_14,_o5(_7,[_591,_592]))
const _594=_o3(_3,"PostsEditMutationFragment")
const _595=_o2(_2,_594,_14,_o5(_7,[_591,_253]))
const _596=_o3(_3,"PostsRevisionsList")
const _597=_o2(_2,_596,_14,_o5(_7,[_10,_547]))
const _598=_o3(_3,"PostsRecentDiscussion")
const _599=_o3(_3,"recentComments")
const _600=_o3(_3,"commentsLimit")
const _601=_o4(_527,_600)
const _602=_o3(_3,"maxAgeHours")
const _603=_o4(_527,_602)
const _604=_o8(_526,_602,_603)
const _605=_o4(_527,_20)
const _606=_o8(_526,_20,_605)
const _607=[_o8(_526,_600,_601),_604,_606]
const _608=_o2(_2,_598,_14,_o5(_7,[_188,_o7(_8,_599,_607,_165)]))
const _609=_o3(_3,"CommentsListWithTopLevelComment")
const _610=_o3(_3,"topLevelComment")
const _611=_o2(_2,_609,_132,_o5(_7,[_164,_o6(_8,_610,_165)]))
const _612=_o3(_3,"ShortformRecentDiscussion")
const _613=_o5(_7,[_o4(_28,_609)])
const _614=_o2(_2,_612,_14,_o5(_7,[_188,_o7(_8,_599,_607,_613)]))
const _615=_o3(_3,"UsersBannedFromPostsModerationLog")
const _616=_o2(_2,_615,_14,_o5(_7,[_154,_17,_16,_10,_100]))
const _617=_o3(_3,"AutomatedContentEvaluationsFragment")
const _618=_o2(_2,_617,_o4(_5,_o3(_3,"AutomatedContentEvaluation")),_o5(_7,[_10,_43,_o6(_8,_o3(_3,"sentenceScores"),_o5(_7,[_o4(_8,_o3(_3,"sentence")),_43])),_o4(_8,_o3(_3,"aiChoice")),_o4(_8,_o3(_3,"aiReasoning")),_o4(_8,_o3(_3,"aiCoT"))]))
const _619=_o3(_3,"ModeratorActionDisplay")
const _620=_o2(_2,_619,_o4(_5,_o3(_3,"ModeratorAction")),_o5(_7,[_10,_154,_23,_244,_11,_81,_259]))
const _621=_o3(_3,"SunshinePostsList")
const _622=_o6(_8,_514,_378)
const _623=_o3(_3,"biography")
const _624=_o6(_8,_623,_212)
const _625=_o3(_3,"moderatorActions")
const _626=_o5(_7,[_o4(_28,_619)])
const _627=_o6(_8,_625,_626)
const _628=_o2(_2,_621,_14,_o5(_7,[_171,_117,_118,_174,_156,_505,_o6(_8,_146,_o5(_7,[_10,_147,_128,_149,_173])),_o6(_8,_o3(_3,"automatedContentEvaluations"),_o5(_7,[_o4(_28,_617)])),_622,_o6(_8,_98,_o5(_7,[_99,_624,_86,_71,_100,_101,_622,_113,_627])),_o6(_8,_o3(_3,"frontpageClassification"),_o5(_7,[_o4(_8,_o3(_3,"isFrontpage")),_o4(_8,_o3(_3,"probability"))]))]))
const _629=_o3(_3,"WithVotePost")
const _630=_o2(_2,_629,_14,_307)
const _631=_o3(_3,"HighlightWithHash")
const _632=_o3(_3,"hash")
const _633=_o4(_527,_632)
const _634=_o8(_526,_632,_633)
const _635=_o5(_7,[_10,_o10(_8,_o3(_3,"htmlHighlightStartingAtHash"),[_634])])
const _636=_o2(_2,_631,_14,_o5(_7,[_10,_o6(_8,_146,_635)]))
const _637=_o3(_3,"PostWithDialogueMessage")
const _638=_o3(_3,"dialogueMessageId")
const _639=_o4(_527,_638)
const _640=_o2(_2,_637,_14,_o5(_7,[_10,_o10(_8,_o3(_3,"dialogueMessageContents"),[_o8(_526,_638,_639)])]))
const _641=_o3(_3,"PostWithGeneratedSummary")
const _642=_o2(_2,_641,_14,_o5(_7,[_10,_o4(_8,_o3(_3,"languageModelSummary"))]))
const _643=_o3(_3,"PostsBestOfList")
const _644=_o2(_2,_643,_14,_o5(_7,[_188,_179,_499,_o4(_8,_o3(_3,"firstVideoAttribsForPreview"))]))
const _645=_o3(_3,"RevisionHTML")
const _646=_o2(_2,_645,_202,_378)
const _647=_o3(_3,"UsersProfile")
const _648=_o4(_8,_o3(_3,"fullName"))
const _649=_o4(_8,_o3(_3,"careerStage"))
const _650=_o3(_3,"howOthersCanHelpMe")
const _651=_o3(_3,"howICanHelpOthers")
const _652=_o4(_8,_o3(_3,"profileTagIds"))
const _653=_o4(_8,_o3(_3,"organizerOfGroupIds"))
const _654=_o4(_8,_o3(_3,"programParticipation"))
const _655=_o4(_8,_o3(_3,"linkedinProfileURL"))
const _656=_o4(_8,_o3(_3,"facebookProfileURL"))
const _657=_o4(_8,_o3(_3,"blueskyProfileURL"))
const _658=_o4(_8,_o3(_3,"twitterProfileURL"))
const _659=_o4(_8,_o3(_3,"githubProfileURL"))
const _660=_o6(_8,_514,_212)
const _661=_o4(_8,_o3(_3,"mapLocation"))
const _662=_o4(_8,_o3(_3,"mapLocationSet"))
const _663=_o4(_8,_o3(_3,"mapMarkerText"))
const _664=_o4(_8,_o3(_3,"htmlMapMarkerText"))
const _665=_o4(_8,_o3(_3,"shortformFeedId"))
const _666=_o4(_8,_o3(_3,"petrovPressedButtonDate"))
const _667=_o4(_8,_o3(_3,"petrovOptOut"))
const _668=_o4(_8,_o3(_3,"sortDraftsBy"))
const _669=_o4(_8,_o3(_3,"emails"))
const _670=_o4(_8,_o3(_3,"paymentEmail"))
const _671=_o4(_8,_o3(_3,"paymentInfo"))
const _672=_o4(_8,_o3(_3,"postingDisabled"))
const _673=_o4(_8,_o3(_3,"commentingOnOtherUsersDisabled"))
const _674=_o4(_8,_o3(_3,"conversationsDisabled"))
const _675=_o2(_2,_647,_80,_o5(_7,[_99,_648,_o4(_8,_o3(_3,"previousDisplayName")),_439,_102,_92,_93,_649,_624,_o6(_8,_650,_212),_o6(_8,_651,_212),_652,_653,_654,_54,_655,_656,_657,_658,_659,_o4(_8,_o3(_3,"afSequenceCount")),_o4(_8,_o3(_3,"afSequenceDraftCount")),_o4(_8,_o3(_3,"sequenceDraftCount")),_71,_660,_100,_50,_51,_661,_662,_663,_664,_412,_665,_666,_667,_668,_387,_669,_103,_115,_670,_671,_o4(_8,_o3(_3,"goodHeartTokens")),_672,_104,_673,_674]))
const _676=_o3(_3,"UsersSocialMediaInfo")
const _677=_o4(_28,_647)
const _678=_o4(_8,_o3(_3,"twitterProfileURLAdmin"))
const _679=_o2(_2,_676,_80,_o5(_7,[_677,_678]))
const _680=_o3(_3,"PostsTwitterAdmin")
const _681=_o5(_7,[_o4(_28,_676)])
const _682=_o2(_2,_680,_14,_o5(_7,[_188,_o6(_8,_98,_681),_o6(_8,_105,_681)]))
const _683=_o3(_3,"SuggestAlignmentPost")
const _684=_o2(_2,_683,_14,_o5(_7,[_182,_322]))
const _685=_o3(_3,"SunshineUsersList")
const _686=_o4(_8,_o3(_3,"nullifyVotes"))
const _687=_o4(_8,_o3(_3,"deleteContent"))
const _688=_o4(_8,_o3(_3,"userIds"))
const _689=_o4(_8,_o3(_3,"lastNotificationsCheck"))
const _690=_o2(_2,_685,_80,_o5(_7,[_99,_87,_91,_54,_81,_387,_669,_38,_o4(_8,_o3(_3,"maxCommentCount")),_94,_o4(_8,_o3(_3,"maxPostCount")),_39,_o4(_8,_o3(_3,"smallUpvoteCount")),_o4(_8,_o3(_3,"bigUpvoteCount")),_o4(_8,_o3(_3,"smallDownvoteCount")),_o4(_8,_o3(_3,"bigDownvoteCount")),_103,_62,_o4(_8,_o3(_3,"reviewedAt")),_o4(_8,_o3(_3,"signUpReCaptchaRating")),_661,_113,_o4(_8,_o3(_3,"sunshineNotes")),_o4(_8,_o3(_3,"sunshineFlagged")),_672,_104,_673,_674,_o4(_8,_o3(_3,"snoozedUntilContentCount")),_686,_687,_627,_o4(_8,_o3(_3,"usersContactedBeforeReview")),_o6(_8,_o3(_3,"associatedClientIds"),_o5(_7,[_261,_262,_263,_688])),_o4(_8,_o3(_3,"altAccountsDetected")),_o4(_8,_o3(_3,"voteReceivedCount")),_o4(_8,_o3(_3,"smallUpvoteReceivedCount")),_o4(_8,_o3(_3,"bigUpvoteReceivedCount")),_o4(_8,_o3(_3,"smallDownvoteReceivedCount")),_o4(_8,_o3(_3,"bigDownvoteReceivedCount")),_o4(_8,_o3(_3,"recentKarmaInfo")),_689]))
const _691=_o3(_3,"UnclaimedReportsList")
const _692=_o5(_7,[_182])
const _693=_o6(_8,_187,_692)
const _694=_o4(_28,_685)
const _695=_o5(_7,[_694])
const _696=_o2(_2,_691,_o4(_5,_o3(_3,"Report")),_o5(_7,[_10,_23,_154,_373,_o6(_8,_198,_o5(_7,[_164,_280,_299])),_134,_693,_o6(_8,_o3(_3,"reportedUser"),_695),_o4(_8,_o3(_3,"closedAt")),_81,_o4(_8,_o3(_3,"claimedUserId")),_o6(_8,_o3(_3,"claimedUser"),_o5(_7,[_10,_85,_83,_16])),_450,_355,_o4(_8,_o3(_3,"reportedAsSpam")),_o4(_8,_o3(_3,"markedAsSpam"))]))
const _697=_o3(_3,"reviewVoteFragment")
const _698=_o4(_5,_o3(_3,"ReviewVote"))
const _699=_o3(_3,"year")
const _700=_o3(_3,"dummy")
const _701=_o2(_2,_697,_698,_o5(_7,[_10,_81,_23,_134,_509,_510,_o4(_8,_198),_o4(_8,_699),_o4(_8,_700),_o4(_8,_o3(_3,"reactions"))]))
const _702=_o3(_3,"reviewAdminDashboard")
const _703=_o2(_2,_702,_698,_o5(_7,[_10,_81,_23,_o6(_8,_98,_o5(_7,[_10,_85,_87]))]))
const _704=_o3(_3,"ReviewWinnerAnnouncement")
const _705=_o2(_2,_704,_471,_o5(_7,[_10,_472,_216,_473,_474,_563,_134,_o6(_8,_187,_o5(_7,[_10,_17,_16]))]))
const _706=_o3(_3,"RevisionMetadataWithChangeMetrics")
const _707=_o4(_8,_o3(_3,"changeMetrics"))
const _708=_o2(_2,_706,_202,_o5(_7,[_546,_707,_154]))
const _709=_o3(_3,"RevisionHistoryEntry")
const _710=_o2(_2,_709,_202,_o5(_7,[_546,_258,_196,_707,_442,_o4(_8,_o3(_3,"skipAttributions")),_154]))
const _711=_o3(_3,"RevisionHistorySummaryEdit")
const _712=_o4(_28,_709)
const _713=_o2(_2,_711,_202,_o5(_7,[_712,_o6(_8,_o3(_3,"summary"),_o5(_7,[_445,_o6(_8,_122,_o5(_7,[_10,_74])),_o6(_8,_o3(_3,"parentLens"),_o5(_7,[_10,_17,_440,_441]))]))]))
const _714=_o3(_3,"TagDetailsFragment")
const _715=_o4(_8,_o3(_3,"subforumModeratorIds"))
const _716=_o4(_8,_o3(_3,"squareImageId"))
const _717=_o2(_2,_714,_110,_o5(_7,[_121,_222,_439,_46,_o4(_8,_o3(_3,"defaultOrder")),_62,_o4(_8,_o3(_3,"wikiGrade")),_715,_o6(_8,_o3(_3,"subforumModerators"),_106),_622,_215,_716,_o4(_8,_o3(_3,"lesswrongWikiImportSlug")),_o4(_8,_o3(_3,"lesswrongWikiImportRevision")),_o6(_8,_550,_486)]))
const _718=_o3(_3,"TagFragment")
const _719=_o4(_28,_714)
const _720=_o2(_2,_718,_110,_o5(_7,[_719,_124,_126,_o6(_8,_127,_o5(_7,[_10,_147,_128,_162,_173,_241])),_129]))
const _721=_o3(_3,"MultiDocumentContentDisplay")
const _722=_o4(_8,_o3(_3,"textLastUpdatedAt"))
const _723=_o2(_2,_721,_437,_o5(_7,[_445,_579,_722,_253]))
const _724=_o3(_3,"TagHistoryFragment")
const _725=_o4(_28,_718)
const _726=_o4(_28,_721)
const _727=_o5(_7,[_726])
const _728=_o2(_2,_724,_110,_o5(_7,[_725,_722,_579,_154,_o6(_8,_o3(_3,"lensesIncludingDeleted"),_727)]))
const _729=_o3(_3,"ArbitalLinkedPagesFragment")
const _730=_o5(_7,[_10,_74,_16])
const _731=_o2(_2,_729,_o4(_5,_o3(_3,"ArbitalLinkedPages")),_o5(_7,[_o6(_8,_o3(_3,"faster"),_730),_o6(_8,_o3(_3,"slower"),_730),_o6(_8,_o3(_3,"moreTechnical"),_730),_o6(_8,_o3(_3,"lessTechnical"),_730),_o6(_8,_o3(_3,"requirements"),_730),_o6(_8,_o3(_3,"teaches"),_730),_o6(_8,_o3(_3,"parents"),_730),_o6(_8,_o3(_3,"children"),_730)]))
const _732=_o3(_3,"MultiDocumentEdit")
const _733=_o6(_8,_o3(_3,"arbitalLinkedPages"),_o5(_7,[_o4(_28,_729)]))
const _734=_o6(_8,_o3(_3,"summaries"),_727)
const _735=_o2(_2,_732,_437,_o5(_7,[_726,_733,_734,_722]))
const _736=_o3(_3,"MultiDocumentParentDocument")
const _737=_o4(_28,_732)
const _738=_o5(_7,[_o4(_28,_724)])
const _739=_o2(_2,_736,_437,_o5(_7,[_737,_o6(_8,_122,_738)]))
const _740=_o3(_3,"RevisionTagFragment")
const _741=_o6(_8,_137,_738)
const _742=_o3(_3,"lens")
const _743=_o5(_7,[_o4(_28,_736)])
const _744=_o2(_2,_740,_202,_o5(_7,[_712,_741,_o6(_8,_742,_743)]))
const _745=_o3(_3,"TagRecentDiscussion")
const _746=_o3(_3,"tagCommentsLimit")
const _747=_o4(_527,_746)
const _748=_o2(_2,_745,_110,_o5(_7,[_725,_44,_o7(_8,_599,[_o8(_526,_746,_747),_604,_606],_165)]))
const _749=_o3(_3,"RecentDiscussionRevisionTagFragment")
const _750=_o5(_7,[_o4(_28,_745)])
const _751=_o2(_2,_749,_202,_o5(_7,[_712,_o6(_8,_137,_750)]))
const _752=_o3(_3,"WithVoteRevision")
const _753=_o2(_2,_752,_202,_o5(_7,[_306,_10,_117,_118,_40,_41,_43,_39]))
const _754=_o3(_3,"newRSSFeedFragment")
const _755=_o2(_2,_754,_489,_o5(_7,[_10,_23,_81,_490,_491,_492,_31,_33,_493]))
const _756=_o3(_3,"SequenceContinueReadingFragment")
const _757=_o2(_2,_756,_205,_o5(_7,[_10,_17,_214,_48]))
const _758=_o3(_3,"SequencesEdit")
const _759=_o2(_2,_758,_205,_o5(_7,[_231,_253]))
const _760=_o3(_3,"SpotlightMinimumInfo")
const _761=_o4(_5,_o3(_3,"Spotlight"))
const _762=_o2(_2,_760,_761,_o5(_7,[_10,_258,_449,_o4(_8,_o3(_3,"spotlightImageId")),_o4(_8,_o3(_3,"spotlightDarkImageId")),_o4(_8,_o3(_3,"spotlightSplashImageUrl")),_18,_35,_o4(_8,_o3(_3,"position")),_o4(_8,_o3(_3,"lastPromotedAt")),_o4(_8,_o3(_3,"customTitle")),_o4(_8,_o3(_3,"customSubtitle")),_o4(_8,_o3(_3,"subtitleUrl")),_o4(_8,_o3(_3,"headerTitle")),_o4(_8,_o3(_3,"headerTitleLeftColor")),_o4(_8,_o3(_3,"headerTitleRightColor")),_o4(_8,_o3(_3,"duration")),_o4(_8,_o3(_3,"showAuthor")),_o4(_8,_o3(_3,"imageFade")),_o4(_8,_o3(_3,"imageFadeColor"))]))
const _763=_o3(_3,"SpotlightHeaderEventSubtitle")
const _764=_o4(_28,_760)
const _765=_o2(_2,_763,_761,_o5(_7,[_764,_o6(_8,_187,_138),_o6(_8,_550,_556),_139]))
const _766=_o3(_3,"SpotlightEditQueryFragment")
const _767=_o6(_8,_127,_252)
const _768=_o2(_2,_766,_761,_o5(_7,[_764,_767]))
const _769=_o3(_3,"SubscriptionState")
const _770=_o4(_5,_o3(_3,"Subscription"))
const _771=_o2(_2,_769,_770,_o5(_7,[_10,_23,_81,_o4(_8,_o3(_3,"state")),_258,_196,_90,_244]))
const _772=_o3(_3,"MembersOfGroupFragment")
const _773=_o2(_2,_772,_770,_o5(_7,[_154]))
const _774=_o3(_3,"SurveyResponseMinimumInfo")
const _775=_o3(_3,"surveyId")
const _776=_o4(_8,_775)
const _777=_o3(_3,"response")
const _778=_o2(_2,_774,_o4(_5,_o3(_3,"SurveyResponse")),_o5(_7,[_10,_776,_o4(_8,_o3(_3,"surveyScheduleId")),_23,_261,_o4(_8,_777)]))
const _779=_o3(_3,"SurveyQuestionMinimumInfo")
const _780=_o2(_2,_779,_o4(_5,_o3(_3,"SurveyQuestion")),_o5(_7,[_10,_49,_o4(_8,_o3(_3,"format")),_434]))
const _781=_o3(_3,"SurveyMinimumInfo")
const _782=_o3(_3,"questions")
const _783=_o2(_2,_781,_o4(_5,_o3(_3,"Survey")),_o5(_7,[_10,_74,_o6(_8,_782,_o5(_7,[_o4(_28,_779)])),_81]))
const _784=_o3(_3,"SurveyScheduleMinimumInfo")
const _785=_o4(_5,_o3(_3,"SurveySchedule"))
const _786=_o3(_3,"survey")
const _787=_o5(_7,[_o4(_28,_781)])
const _788=_o2(_2,_784,_785,_o5(_7,[_10,_o6(_8,_786,_787)]))
const _789=_o3(_3,"SurveyScheduleEdit")
const _790=_o4(_28,_784)
const _791=_o2(_2,_789,_785,_o5(_7,[_790,_776,_74,_o4(_8,_o3(_3,"impressionsLimit")),_o4(_8,_o3(_3,"maxVisitorPercentage")),_o4(_8,_o3(_3,"minKarma")),_o4(_8,_o3(_3,"maxKarma")),_o4(_8,_o3(_3,"target")),_349,_351,_o4(_8,_o3(_3,"deactivated")),_81]))
const _792=_o3(_3,"TagFlagFragment")
const _793=_o4(_5,_o3(_3,"TagFlag"))
const _794=_o2(_2,_792,_793,_o5(_7,[_10,_81,_74,_16,_434,_90,_o6(_8,_146,_o5(_7,[_147,_128,_162]))]))
const _795=_o3(_3,"TagFlagEditFragment")
const _796=_o4(_28,_792)
const _797=_o2(_2,_795,_793,_o5(_7,[_796,_253]))
const _798=_o3(_3,"TagRelBasicInfo")
const _799=_o2(_2,_798,_523,_o5(_7,[_10,_43,_40,_41,_67,_39,_136,_134,_o4(_8,_o3(_3,"autoApplied"))]))
const _800=_o3(_3,"TagRelHistoryFragment")
const _801=_o4(_28,_798)
const _802=_o2(_2,_800,_523,_o5(_7,[_801,_81,_154,_693]))
const _803=_o3(_3,"TagRelCreationFragment")
const _804=_o6(_8,_137,_142)
const _805=_o2(_2,_803,_523,_o5(_7,[_801,_804,_o6(_8,_187,_o5(_7,[_182,_36,_531])),_117,_118]))
const _806=_o3(_3,"TagRelMinimumFragment")
const _807=_o4(_8,_o3(_3,"currentUserCanVote"))
const _808=_o2(_2,_806,_523,_o5(_7,[_801,_804,_117,_118,_807]))
const _809=_o3(_3,"TagCreationHistoryFragment")
const _810=_o5(_7,[_147])
const _811=_o6(_8,_127,_810)
const _812=_o2(_2,_809,_110,_o5(_7,[_725,_154,_811]))
const _813=_o3(_3,"TagSectionPreviewFragment")
const _814=_o2(_2,_813,_110,_o5(_7,[_121,_46,_124,_126,_o6(_8,_127,_635),_129]))
const _815=_o3(_3,"subforumWelcomeText")
const _816=_o6(_8,_815,_378)
const _817=_o3(_3,"TagSubtagFragment")
const _818=_o2(_2,_817,_110,_o5(_7,[_10,_715,_o6(_8,_125,_142)]))
const _819=_o3(_3,"TagSubforumSidebarFragment")
const _820=_o2(_2,_819,_110,_123)
const _821=_o3(_3,"TagWithFlagsFragment")
const _822=_o4(_8,_o3(_3,"tagFlagsIds"))
const _823=_o3(_3,"tagFlags")
const _824=_o5(_7,[_796])
const _825=_o6(_8,_823,_824)
const _826=_o2(_2,_821,_110,_o5(_7,[_725,_822,_825]))
const _827=_o3(_3,"TagPageFragment")
const _828=_o4(_28,_821)
const _829=_o4(_8,_o3(_3,"postsDefaultSortOrder"))
const _830=_o6(_8,_o3(_3,"subforumIntroPost"),_189)
const _831=_o3(_3,"contributors")
const _832=_o3(_3,"limit")
const _833=_o4(_527,_o3(_3,"contributorsLimit"))
const _834=_o8(_526,_832,_833)
const _835=_o4(_8,_o3(_3,"totalCount"))
const _836=_o4(_8,_o3(_3,"contributionScore"))
const _837=_o4(_8,_o3(_3,"currentAttributionCharCount"))
const _838=_o5(_7,[_835,_o6(_8,_831,_o5(_7,[_154,_836,_837,_o4(_8,_o3(_3,"numCommits")),_39]))])
const _839=_o7(_8,_831,[_834],_838)
const _840=_o2(_2,_827,_110,_o5(_7,[_828,_579,_829,_830,_816,_839,_129,_76,_722]))
const _841=_o3(_3,"MultiDocumentWithContributors")
const _842=_o2(_2,_841,_437,_o5(_7,[_737,_o6(_8,_831,_o5(_7,[_835,_o6(_8,_831,_o5(_7,[_154,_837]))]))]))
const _843=_o3(_3,"TagPageArbitalContentFragment")
const _844=_o3(_3,"lenses")
const _845=_o2(_2,_843,_110,_o5(_7,[_o6(_8,_844,_o5(_7,[_o4(_28,_841)])),_733]))
const _846=_o3(_3,"TagPageWithArbitalContentFragment")
const _847=_o4(_28,_827)
const _848=_o4(_28,_843)
const _849=_o2(_2,_846,_110,_o5(_7,[_847,_848]))
const _850=_o3(_3,"AllTagsPageFragment")
const _851=_o2(_2,_850,_110,_o5(_7,[_828,_579]))
const _852=_o3(_3,"TagRevisionFragment")
const _853=_o2(_2,_852,_110,_o5(_7,[_719,_124,_126,_46,_o7(_8,_127,_544,_o5(_7,[_10,_173,_147,_128,_162,_241,_154]))]))
const _854=_o3(_3,"TagWithFlagsAndRevisionFragment")
const _855=_o2(_2,_854,_110,_o5(_7,[_o4(_28,_852),_822,_825]))
const _856=_o3(_3,"TagPageWithRevisionFragment")
const _857=_o10(_8,_578,_544)
const _858=_o2(_2,_856,_110,_o5(_7,[_o4(_28,_854),_857,_722,_829,_830,_816,_o7(_8,_831,[_834,_543],_838),_129,_76]))
const _859=_o3(_3,"TagPageRevisionWithArbitalContentFragment")
const _860=_o4(_28,_856)
const _861=_o2(_2,_859,_110,_o5(_7,[_860,_848]))
const _862=_o3(_3,"TagFullContributorsList")
const _863=_o2(_2,_862,_110,_o5(_7,[_o6(_8,_831,_838)]))
const _864=_o3(_3,"TagEditFragment")
const _865=_o2(_2,_864,_110,_o5(_7,[_719,_o4(_8,_o3(_3,"isPostType")),_o4(_8,_o3(_3,"parentTagId")),_124,_o4(_8,_o3(_3,"subforumIntroPostId")),_822,_829,_o4(_8,_o3(_3,"introSequenceId")),_129,_o4(_8,_o3(_3,"autoTagModel")),_o4(_8,_o3(_3,"autoTagPrompt")),_767,_o6(_8,_815,_252),_587]))
const _866=_o3(_3,"SunshineTagFragment")
const _867=_o2(_2,_866,_110,_o5(_7,[_725,_154]))
const _868=_o3(_3,"UserOnboardingTag")
const _869=_o2(_2,_868,_110,_o5(_7,[_10,_74,_16,_215,_716]))
const _870=_o3(_3,"TagName")
const _871=_o2(_2,_870,_110,_730)
const _872=_o3(_3,"ExplorePageTagFragment")
const _873=_o2(_2,_872,_110,_o5(_7,[_725,_839,_442]))
const _874=_o3(_3,"ConceptItemFragment")
const _875=_o3(_3,"coreTagId")
const _876=_o2(_2,_874,_110,_o5(_7,[_10,_112,_74,_16,_439,_94,_40,_o6(_8,_127,_o5(_7,[_10,_149])),_114,_116,_o4(_8,_875),_o4(_8,_o3(_3,"maxScore")),_o6(_8,_o3(_3,"usersWhoLiked"),_o5(_7,[_23,_85]))]))
const _877=_o3(_3,"MultiDocumentRevision")
const _878=_o2(_2,_877,_437,_o5(_7,[_445,_592,_857]))
const _879=_o3(_3,"MultiDocumentWithContributorsRevision")
const _880=_o2(_2,_879,_437,_o5(_7,[_o4(_28,_877),_o7(_8,_831,_544,_o5(_7,[_835,_o6(_8,_831,_o5(_7,[_154,_837,_836]))])),_733,_722]))
const _881=_o3(_3,"TagPageWithArbitalContentAndLensRevisionFragment")
const _882=_o3(_3,"lensSlug")
const _883=_o4(_527,_882)
const _884=_o2(_2,_881,_110,_o5(_7,[_847,_733,_o7(_8,_844,[_o8(_526,_882,_883),_543],_o5(_7,[_o4(_28,_879)]))]))
const _885=_o3(_3,"WithVoteTag")
const _886=_o2(_2,_885,_110,_123)
const _887=_o3(_3,"UserEAGDetailsMinimumInfo")
const _888=_o2(_2,_887,_o4(_5,_o3(_3,"UserEAGDetail")),_o5(_7,[_10,_23,_81,_197,_649,_o4(_8,_o3(_3,"countryOrRegion")),_o4(_8,_o3(_3,"nearestCity")),_o4(_8,_o3(_3,"willingnessToRelocate")),_o4(_8,_o3(_3,"experiencedIn")),_o4(_8,_o3(_3,"interestedIn"))]))
const _889=_o3(_3,"UserJobAdsMinimumInfo")
const _890=_o2(_2,_889,_o4(_5,_o3(_3,"UserJobAd")),_o5(_7,[_10,_23,_81,_197,_o4(_8,_o3(_3,"jobName")),_o4(_8,_o3(_3,"adState")),_o4(_8,_o3(_3,"reminderSetAt"))]))
const _891=_o3(_3,"UserMostValuablePostInfo")
const _892=_o2(_2,_891,_o4(_5,_o3(_3,"UserMostValuablePost")),_o5(_7,[_10,_23,_134,_90]))
const _893=_o3(_3,"UserRateLimitMutationFragment")
const _894=_o4(_5,_o3(_3,"UserRateLimit"))
const _895=_o4(_8,_o3(_3,"intervalUnit"))
const _896=_o4(_8,_o3(_3,"intervalLength"))
const _897=_o4(_8,_o3(_3,"actionsPerInterval"))
const _898=_o2(_2,_893,_894,_o5(_7,[_10,_456,_81,_442,_23,_244,_895,_896,_897,_259]))
const _899=_o3(_3,"UserRateLimitDisplay")
const _900=_o2(_2,_899,_894,_o5(_7,[_10,_154,_23,_244,_897,_895,_896,_81,_259]))
const _901=_o3(_3,"UserTagRelDetails")
const _902=_o2(_2,_901,_o4(_5,_o3(_3,"UserTagRel")),_o5(_7,[_10,_23,_136,_o4(_8,_o3(_3,"subforumShowUnreadInSidebar")),_o4(_8,_o3(_3,"subforumEmailNotifications")),_o4(_8,_o3(_3,"subforumHideIntroPost"))]))
const _903=_o3(_3,"UsersCurrentCommentRateLimit")
const _904=_o4(_527,_133)
const _905=_o8(_526,_133,_904)
const _906=[_905]
const _907=_o2(_2,_903,_80,_o5(_7,[_10,_o10(_8,_o3(_3,"rateLimitNextAbleToComment"),_906)]))
const _908=_o3(_3,"UsersCurrentPostRateLimit")
const _909=_o3(_3,"eventForm")
const _910=_o4(_527,_909)
const _911=_o2(_2,_908,_80,_o5(_7,[_10,_o10(_8,_o3(_3,"rateLimitNextAbleToPost"),[_o8(_526,_909,_910)])]))
const _912=_o3(_3,"UserKarmaChanges")
const _913=_o4(_8,_o3(_3,"scoreChange"))
const _914=_o6(_8,_o3(_3,"addedReacts"),_o5(_7,[_o4(_8,_o3(_3,"reactionType")),_23]))
const _915=_o4(_8,_o3(_3,"eaAddedReacts"))
const _916=_o6(_8,_227,_o5(_7,[_10,_913,_134,_17,_16,_914,_915,_196]))
const _917=_o3(_3,"comments")
const _918=_o4(_8,_o3(_3,"postTitle"))
const _919=_o4(_8,_o3(_3,"postSlug"))
const _920=_o3(_3,"tagSlug")
const _921=_o4(_8,_920)
const _922=_o4(_8,_o3(_3,"tagName"))
const _923=_o6(_8,_917,_o5(_7,[_10,_913,_373,_355,_134,_918,_919,_921,_922,_144,_914,_915,_196]))
const _924=_o6(_8,_o3(_3,"tagRevisions"),_o5(_7,[_10,_913,_136,_921,_922,_914,_915,_196]))
const _925=_o5(_7,[_916,_923,_924])
const _926=_o2(_2,_912,_80,_o5(_7,[_10,_o6(_8,_o3(_3,"karmaChanges"),_o5(_7,[_o4(_8,_o3(_3,"totalChange")),_o4(_8,_o3(_3,"updateFrequency")),_349,_351,_o4(_8,_o3(_3,"nextBatchDate")),_916,_923,_924,_o6(_8,_o3(_3,"todaysKarmaChanges"),_925),_o6(_8,_o3(_3,"thisWeeksKarmaChanges"),_925)]))]))
const _927=_o3(_3,"UsersBannedFromUsersModerationLog")
const _928=_o4(_8,_o3(_3,"bannedPersonalUserIds"))
const _929=_o2(_2,_927,_80,_o5(_7,[_10,_16,_85,_100,_928]))
const _930=_o3(_3,"UserAltAccountsFragment")
const _931=_o2(_2,_930,_80,_o5(_7,[_694,_o4(_8,_o3(_3,"IPs"))]))
const _932=_o3(_3,"UsersMapEntry")
const _933=_o4(_8,_o3(_3,"lat"))
const _934=_o4(_8,_o3(_3,"lng"))
const _935=_o2(_2,_932,_80,_o5(_7,[_10,_85,_83,_648,_16,_o6(_8,_o3(_3,"mapLocationLatLng"),_o5(_7,[_933,_934])),_662,_664]))
const _936=_o3(_3,"UsersCurrent")
const _937=_o4(_8,_o3(_3,"beta"))
const _938=_o3(_3,"acceptedTos")
const _939=_o4(_8,_o3(_3,"hideIntercom"))
const _940=_o4(_8,_o3(_3,"hideCommunitySection"))
const _941=_o4(_8,_o3(_3,"hidePostsRecommendations"))
const _942=_o4(_8,_o3(_3,"currentFrontpageFilter"))
const _943=_o4(_8,_o3(_3,"noKibitz"))
const _944=_o4(_8,_o3(_3,"showHideKarmaOption"))
const _945=_o4(_8,_o3(_3,"markDownPostEditor"))
const _946=_o4(_8,_o3(_3,"hideElicitPredictions"))
const _947=_o4(_8,_o3(_3,"hideAFNonMemberInitialWarning"))
const _948=_o4(_8,_o3(_3,"commentSorting"))
const _949=_o4(_8,_o3(_3,"hideFrontpageMap"))
const _950=_o4(_8,_o3(_3,"emailSubscribedToCurated"))
const _951=_o4(_8,_o3(_3,"subscribedToDigest"))
const _952=_o4(_8,_o3(_3,"subscribedToNewsletter"))
const _953=_o4(_8,_o3(_3,"unsubscribeFromAll"))
const _954=_o4(_8,_o3(_3,"whenConfirmationEmailSent"))
const _955=_o4(_8,_o3(_3,"noCollapseCommentsFrontpage"))
const _956=_o4(_8,_o3(_3,"noCollapseCommentsPosts"))
const _957=_o4(_8,_o3(_3,"noSingleLineComments"))
const _958=_o4(_8,_o3(_3,"showCommunityInRecentDiscussion"))
const _959=_o4(_8,_o3(_3,"karmaChangeNotifierSettings"))
const _960=_o4(_8,_o3(_3,"karmaChangeLastOpened"))
const _961=_o4(_8,_o3(_3,"theme"))
const _962=_o4(_8,_o3(_3,"hideFrontpageBookAd"))
const _963=_o3(_3,"abTestKey")
const _964=_o4(_8,_o3(_3,"notificationSubforumUnread"))
const _965=_o4(_8,_o3(_3,"notificationRepliesToMyComments"))
const _966=_o4(_8,_o3(_3,"allowDatadogSessionReplay"))
const _967=_o4(_8,_o3(_3,"hideFrontpageBook2020Ad"))
const _968=_o2(_2,_936,_80,_o5(_7,[_99,_439,_102,_92,_93,_649,_652,_653,_71,_660,_100,_50,_51,_661,_662,_663,_412,_665,_668,_387,_669,_103,_670,_671,_672,_104,_673,_674,_o4(_8,_o3(_3,"usernameUnset")),_o4(_8,_o3(_3,"taggingDashboardCollapsed")),_937,_o4(_8,_938),_o4(_8,_o3(_3,"pageUrl")),_o4(_8,_o3(_3,"isReviewed")),_686,_939,_o4(_8,_o3(_3,"hideNavigationSidebar")),_940,_o4(_8,_o3(_3,"hasContinueReading")),_o6(_8,_o3(_3,"expandedFrontpageSections"),_o5(_7,[_o4(_8,_o3(_3,"community")),_o4(_8,_o3(_3,"recommendations")),_o4(_8,_o3(_3,"quickTakes")),_o4(_8,_o3(_3,"quickTakesCommunity")),_o4(_8,_o3(_3,"popularComments"))])),_941,_942,_o4(_8,_o3(_3,"frontpageSelectedTab")),_o4(_8,_o3(_3,"frontpageFilterSettings")),_o4(_8,_o3(_3,"hideFrontpageFilterSettingsDesktop")),_o4(_8,_o3(_3,"allPostsTimeframe")),_o4(_8,_o3(_3,"allPostsSorting")),_o4(_8,_o3(_3,"allPostsFilter")),_o4(_8,_o3(_3,"allPostsShowLowKarma")),_o4(_8,_o3(_3,"allPostsIncludeEvents")),_o4(_8,_o3(_3,"allPostsHideCommunity")),_o4(_8,_o3(_3,"allPostsOpenSettings")),_o4(_8,_o3(_3,"draftsListSorting")),_o4(_8,_o3(_3,"draftsListShowArchived")),_o4(_8,_o3(_3,"draftsListShowShared")),_689,_100,_928,_71,_943,_944,_945,_946,_947,_948,_50,_51,_412,_661,_662,_663,_664,_o4(_8,_o3(_3,"nearbyEventsNotifications")),_o4(_8,_o3(_3,"nearbyEventsNotificationsLocation")),_o4(_8,_o3(_3,"nearbyEventsNotificationsRadius")),_o4(_8,_o3(_3,"nearbyPeopleNotificationThreshold")),_949,_950,_951,_952,_953,_954,_o4(_8,_o3(_3,"hideSubscribePoke")),_o4(_8,_o3(_3,"hideMeetupsPoke")),_o4(_8,_o3(_3,"hideHomeRHS")),_955,_956,_957,_958,_959,_960,_665,_o4(_8,_o3(_3,"viewUnreviewedComments")),_o4(_8,_o3(_3,"recommendationSettings")),_961,_o4(_8,_o3(_3,"hasAnyBookmarks")),_o6(_8,_o3(_3,"hiddenPostsMetadata"),_o5(_7,[_134])),_o4(_8,_o3(_3,"auto_subscribe_to_my_posts")),_o4(_8,_o3(_3,"auto_subscribe_to_my_comments")),_o4(_8,_o3(_3,"autoSubscribeAsOrganizer")),_o4(_8,_o3(_3,"noExpandUnreadCommentsReview")),_962,_o4(_8,_963),_o4(_8,_o3(_3,"abTestOverrides")),_668,_o4(_8,_o3(_3,"reactPaletteStyle")),_666,_o4(_8,_o3(_3,"petrovLaunchCodeDate")),_667,_o4(_8,_o3(_3,"lastUsedTimezone")),_o4(_8,_o3(_3,"acknowledgedNewUserGuidelines")),_964,_965,_o4(_8,_o3(_3,"subforumPreferredLayout")),_o4(_8,_o3(_3,"hideJobAdUntil")),_o4(_8,_o3(_3,"criticismTipsDismissed")),_966,_967,_o4(_8,_o3(_3,"showDialoguesList")),_o4(_8,_o3(_3,"showMyDialogues")),_o4(_8,_o3(_3,"showMatches")),_o4(_8,_o3(_3,"showRecommendedPartners")),_o4(_8,_o3(_3,"hideActiveDialogueUsers")),_o4(_8,_o3(_3,"hideSunshineSidebar")),_o4(_8,_o3(_3,"optedOutOfSurveys")),_o4(_8,_o3(_3,"postGlossariesPinned")),_o4(_8,_o3(_3,"generateJargonForDrafts")),_o4(_8,_o3(_3,"generateJargonForPublishedPosts"))]))
const _969=_o3(_3,"UsersEdit")
const _970=_o4(_28,_936)
const _971=_o6(_8,_623,_252)
const _972=_o4(_8,_o3(_3,"reviewForAlignmentForumUserId"))
const _973=_o4(_8,_o3(_3,"afApplicationText"))
const _974=_o4(_8,_o3(_3,"afSubmittedApplication"))
const _975=_o2(_2,_969,_80,_o5(_7,[_677,_970,_971,_587,_945,_946,_947,_939,_948,_942,_956,_955,_957,_940,_958,_941,_937,_961,_387,_954,_950,_951,_952,_953,_o4(_8,_o3(_3,"hasAuth0Id")),_101,_o4(_8,_o3(_3,"collapseModerationGuidelines")),_100,_928,_943,_944,_686,_687,_103,_83,_85,_648,_412,_51,_50,_661,_o4(_8,_o3(_3,"hideFromPeopleDirectory")),_966,_62,_972,_102,_973,_974,_960,_959,_o4(_8,_o3(_3,"notificationShortformContent")),_o4(_8,_o3(_3,"notificationCommentsOnSubscribedPost")),_965,_o4(_8,_o3(_3,"notificationRepliesToSubscribedComments")),_o4(_8,_o3(_3,"notificationSubscribedUserPost")),_o4(_8,_o3(_3,"notificationSubscribedUserComment")),_o4(_8,_o3(_3,"notificationSubscribedTagPost")),_o4(_8,_o3(_3,"notificationSubscribedSequencePost")),_o4(_8,_o3(_3,"notificationPostsInGroups")),_o4(_8,_o3(_3,"notificationPrivateMessage")),_o4(_8,_o3(_3,"notificationSharedWithMe")),_o4(_8,_o3(_3,"notificationAlignmentSubmissionApproved")),_o4(_8,_o3(_3,"notificationEventInRadius")),_o4(_8,_o3(_3,"notificationRSVPs")),_o4(_8,_o3(_3,"notificationCommentsOnDraft")),_o4(_8,_o3(_3,"notificationPostsNominatedReview")),_o4(_8,_o3(_3,"notificationGroupAdministration")),_964,_o4(_8,_o3(_3,"notificationNewMention")),_o4(_8,_o3(_3,"notificationNewDialogueChecks")),_o4(_8,_o3(_3,"notificationYourTurnMatchForm")),_o4(_8,_o3(_3,"notificationDialogueMessages")),_o4(_8,_o3(_3,"notificationPublishedDialogueMessages")),_949,_o4(_8,_o3(_3,"hideTaggingProgressBar")),_962,_967,_90,_o4(_8,_o3(_3,"permanentDeletionRequestedAt")),_678]))
const _976=_o3(_3,"UsersProfileEdit")
const _977=_o5(_7,[_415])
const _978=_o6(_8,_o3(_3,"organizerOfGroups"),_977)
const _979=_o2(_2,_976,_80,_o5(_7,[_10,_16,_85,_92,_93,_649,_86,_971,_o6(_8,_650,_252),_o6(_8,_651,_252),_652,_653,_978,_654,_661,_54,_655,_656,_657,_658,_659]))
const _980=_o3(_3,"UsersCrosspostInfo")
const _981=_o2(_2,_980,_80,_o5(_7,[_10,_83,_16,_o4(_8,_o3(_3,"fmCrosspostUserId"))]))
const _982=_o3(_3,"UserOnboardingAuthor")
const _983=_o2(_2,_982,_80,_o5(_7,[_10,_85,_86,_87,_92,_93]))
const _984=_o3(_3,"SuggestAlignmentUser")
const _985=_o2(_2,_984,_80,_o5(_7,[_99,_88,_95,_69,_972,_102,_973,_974]))
const _986=_o3(_3,"TagRelVotes")
const _987=_o4(_5,_o3(_3,"Vote"))
const _988=_o3(_3,"voteType")
const _989=_o4(_8,_988)
const _990=_o4(_8,_o3(_3,"power"))
const _991=_o4(_8,_o3(_3,"votedAt"))
const _992=_o4(_8,_o3(_3,"isUnvote"))
const _993=_o2(_2,_986,_987,_o5(_7,[_10,_23,_989,_990,_258,_991,_992,_o6(_8,_525,_530)]))
const _994=_o3(_3,"TagRelFragment")
const _995=_o2(_2,_994,_523,_o5(_7,[_801,_804,_693,_117,_118,_807]))
const _996=_o3(_3,"TagVotingActivity")
const _997=_o5(_7,[_o4(_28,_994)])
const _998=_o2(_2,_996,_987,_o5(_7,[_o4(_28,_986),_o6(_8,_525,_997)]))
const _999=_o3(_3,"UserVotes")
const _1000=_o2(_2,_999,_987,_o5(_7,[_10,_23,_989,_990,_o4(_8,_o3(_3,"cancelled")),_258,_991,_992,_196]))
const _1001=_o3(_3,"CommentsListWithParentMetadata")
const _1002=_o2(_2,_1001,_132,_o5(_7,[_164,_o6(_8,_187,_o5(_7,[_29,_46])),_299]))
const _1003=_o3(_3,"UserVotesWithDocument")
const _1004=_o4(_28,_999)
const _1005=_o5(_7,[_o4(_28,_1001)])
const _1006=_o2(_2,_1003,_987,_o5(_7,[_1004,_o6(_8,_198,_1005),_190]))
const _1007=_o3(_3,"SubscribedPostAndCommentsFeed")
const _1008=_o2(_2,_1007,_o4(_5,_o3(_3,"SubscribedPostAndComments")),_o5(_7,[_10,_693,_o6(_8,_917,_165),_o4(_8,_o3(_3,"expandCommentIds")),_o4(_8,_o3(_3,"postIsFromSubscribedUser"))]))
const _1009=_o3(_3,"FeedPostFragment")
const _1010=_o2(_2,_1009,_o4(_5,_o3(_3,"FeedPost")),_o5(_7,[_10,_o4(_8,_o3(_3,"postMetaInfo")),_190]))
const _1011=_o3(_3,"FeedCommentThreadFragment")
const _1012=_o2(_2,_1011,_o4(_5,_o3(_3,"FeedCommentThread")),_o5(_7,[_10,_o4(_8,_o3(_3,"commentMetaInfos")),_o4(_8,_o3(_3,"isOnReadPost")),_o4(_8,_o3(_3,"postSources")),_190,_o6(_8,_917,_199)]))
const _1013=_o3(_3,"SpotlightDisplay")
const _1014=_o2(_2,_1013,_761,_o5(_7,[_764,_o6(_8,_187,_o5(_7,[_10,_16,_17,_154,_o6(_8,_o3(_3,"reviews"),_556)])),_o6(_8,_550,_o5(_7,[_10,_17,_154])),_o6(_8,_137,_o5(_7,[_10,_74,_16,_154])),_811]))
const _1015=_o3(_3,"FeedSpotlightFragment")
const _1016=_o3(_3,"spotlight")
const _1017=_o5(_7,[_o4(_28,_1013)])
const _1018=_o6(_8,_1016,_1017)
const _1019=_o2(_2,_1015,_o4(_5,_o3(_3,"FeedSpotlightItem")),_o5(_7,[_10,_1018,_190,_o6(_8,_o3(_3,"spotlightMetaInfo"),_o5(_7,[_o4(_8,_o3(_3,"sources")),_o4(_8,_o3(_3,"servedEventId"))]))]))
const _1020=_o3(_3,"FeedSubscriptionSuggestionsFragment")
const _1021=_o2(_2,_1020,_o4(_5,_o3(_3,"FeedSubscriptionSuggestions")),_o5(_7,[_10,_o6(_8,_o3(_3,"suggestedUsers"),_106)]))
const _1022="OperationDefinition"
const _1023="query"
const _1024="VariableDefinition"
const _1025=_o4(_527,_60)
const _1026=_o4(_5,_o3(_3,"String"))
const _1027=_o3(_3,"localgroup")
const _1028=_o3(_3,"selector")
const _1029="ObjectValue"
const _1030="ObjectField"
const _1031=_o3(_3,"result")
const _1032=_o5(_7,[_162])
const _1033=_o6(_8,_146,_1032)
const _1034=_o3(_3,"commentIds")
const _1035=_o4(_527,_1034)
const _1036="NonNullType"
const _1037="ListType"
const _1038=_o14(_1036,_1026)
const _1039=_o14(_1036,_o14(_1037,_1038))
const _1040=_o3(_3,"results")
const _1041=_o6(_8,_1040,_o5(_7,[_283]))
const _1042=_o12(_1024,_551,_1026)
const _1043="mutation"
const _1044=_o4(_527,_1028)
const _1045=_o12(_1024,_1044,_o14(_1036,_o4(_5,_o3(_3,"SelectorInput"))))
const _1046=_o4(_527,_245)
const _1047=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUserDataInput"))))]
const _1048=_o3(_3,"updateUser")
const _1049=_o8(_526,_1028,_1044)
const _1050=_o8(_526,_245,_1046)
const _1051=[_1049,_1050]
const _1052=_o5(_7,[_970])
const _1053=_o5(_7,[_o7(_8,_1048,_1051,_o5(_7,[_o6(_8,_245,_1052)]))])
const _1054=_o3(_3,"SearchSynonyms")
const _1055=_o3(_3,"UpdateSearchSynonyms")
const _1056=_o3(_3,"synonyms")
const _1057=_o4(_527,_1056)
const _1058=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateCurationNoticeDataInput"))))]
const _1059=_o5(_7,[_o6(_8,_245,_520)])
const _1060=_o5(_7,[_o7(_8,_o3(_3,"updateCurationNotice"),_1051,_1059)])
const _1061=[_1050]
const _1062=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdatePostDataInput"))))]
const _1063=_o3(_3,"updatePost")
const _1064=_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_692)]))])
const _1065=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateCommentDataInput"))))]
const _1066=_o3(_3,"createComment")
const _1067=_o5(_7,[_o6(_8,_245,_165)])
const _1068=_o5(_7,[_o7(_8,_1066,_1061,_1067)])
const _1069=_o4(_527,_832)
const _1070=_o4(_5,_o3(_3,"Int"))
const _1071=_o12(_1024,_1069,_1070)
const _1072=_o3(_3,"enableTotal")
const _1073=_o4(_527,_1072)
const _1074=_o4(_5,_o3(_3,"Boolean"))
const _1075=_o12(_1024,_1073,_1074)
const _1076=_o8(_526,_832,_1069)
const _1077=[_1049,_1076,_o8(_526,_1072,_1073)]
const _1078=_o3(_3,"userIsAuthor")
const _1079=_o4(_527,_1078)
const _1080=_o3(_3,"CrossedKarmaThreshold")
const _1081=_o14(_1036,_1070)
const _1082=_o12(_1024,_1069,_1081)
const _1083=[_1082]
const _1084=[_1076]
const _1085=_o12(_1024,_1044,_o4(_5,_o3(_3,"CommentSelector")))
const _1086=[_1085,_1071,_1075]
const _1087=_o5(_7,[_o4(_28,_321)])
const _1088=_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_1087),_835]))])
const _1089=_o3(_3,"alignmentPost")
const _1090=_o12(_1024,_904,_1026)
const _1091=_o12(_1024,_605,_1074)
const _1092=[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserSelector"))),_1071,_1075]
const _1093=_o6(_8,_1040,_106)
const _1094=_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_1093,_835]))])
const _1095=_o4(_527,_257)
const _1096=_o12(_1024,_1095,_1026)
const _1097=[_1096]
const _1098=_o3(_3,"input")
const _1099=_o13(_1029,[_o8(_1030,_257,_1095)])
const _1100=_o8(_1030,_1028,_1099)
const _1101=_o8(_526,_1098,_o13(_1029,[_1100]))
const _1102=[_1101]
const _1103=_o5(_7,[_577])
const _1104=_o5(_7,[_o6(_8,_1031,_1103)])
const _1105=_o5(_7,[_o7(_8,_187,_1102,_1104)])
const _1106=[_o12(_1024,_1044,_o4(_5,_o3(_3,"BookmarkSelector"))),_1071,_1075]
const _1107=_o3(_3,"bookmarks")
const _1108=_o3(_3,"filter")
const _1109=_o4(_527,_1108)
const _1110=_o3(_3,"sort")
const _1111=_o4(_527,_1110)
const _1112=[_1071,_o12(_1024,_1109,_o4(_5,_o3(_3,"PostReviewFilter"))),_o12(_1024,_1111,_o4(_5,_o3(_3,"PostReviewSort")))]
const _1113=[_1076,_o8(_526,_1108,_1109),_o8(_526,_1110,_1111)]
const _1114=[_o12(_1024,_1044,_o4(_5,_o3(_3,"VoteSelector"))),_1071,_1075]
const _1115=_o3(_3,"votes")
const _1116=_o3(_3,_1023)
const _1117=_o4(_527,_1116)
const _1118=_o3(_3,"scoreBias")
const _1119=_o4(_527,_1118)
const _1120=_o4(_5,_o3(_3,"Float"))
const _1121=_o12(_1024,_1119,_1120)
const _1122=_o8(_526,_1118,_1119)
const _1123=_o4(_527,_372)
const _1124=_o12(_1024,_1123,_1038)
const _1125=_o8(_526,_372,_1123)
const _1126=_o5(_7,[_o6(_8,_1031,_165)])
const _1127=_o5(_7,[_o7(_8,_198,_1102,_1126)])
const _1128=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateCommentDataInput"))))]
const _1129=_o3(_3,"updateComment")
const _1130=_o5(_7,[_o7(_8,_1129,_1051,_1067)])
const _1131=_o5(_7,[_303])
const _1132=_o5(_7,[_o6(_8,_1031,_1131)])
const _1133=_o5(_7,[_o7(_8,_198,_1102,_1132)])
const _1134=_o12(_1024,_1095,_1038)
const _1135=[_1134]
const _1136=_o13(_1029,[_o8(_1030,_9,_1095)])
const _1137=[_o8(_526,_1028,_1136)]
const _1138=_o5(_7,[_o4(_28,_288)])
const _1139=_o5(_7,[_o4(_28,_291)])
const _1140=_o3(_3,"forumEvent")
const _1141=_o5(_7,[_o4(_28,_375)])
const _1142=_o5(_7,[_o7(_8,_1140,_1102,_o5(_7,[_o6(_8,_1031,_1141)]))])
const _1143=[_o12(_1024,_1044,_o4(_5,_o3(_3,"LWEventSelector"))),_1071,_1075]
const _1144=_o3(_3,"lWEvents")
const _1145=[_o8(_526,_1028,_1099)]
const _1146=_o3(_3,"TagModerationGuidelines")
const _1147=_o5(_7,[_725])
const _1148=_o6(_8,_1031,_1147)
const _1149=_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_1103)]))])
const _1150=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateTagDataInput"))))]
const _1151=_o3(_3,"updateTag")
const _1152=_o5(_7,[_828])
const _1153=_o5(_7,[_o6(_8,_245,_1152)])
const _1154=_o5(_7,[_o7(_8,_1151,_1051,_1153)])
const _1155=_o12(_1024,_542,_1026)
const _1156=_o5(_7,[_o4(_28,_590)])
const _1157=_o5(_7,[_o6(_8,_1031,_1156)])
const _1158=_o5(_7,[_o4(_28,_864)])
const _1159=_o5(_7,[_o6(_8,_1031,_1158)])
const _1160=_o6(_8,_1040,_1005)
const _1161=_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_1160,_835]))])
const _1162=_o5(_7,[_o6(_8,_1031,_1005)])
const _1163=_o5(_7,[_o7(_8,_198,_1102,_1162)])
const _1164=_o3(_3,"PopularComments")
const _1165=[_1071]
const _1166=_o5(_7,[_1160])
const _1167=[_1124]
const _1168=_o13(_1029,[_o8(_1030,_9,_1123)])
const _1169=_o5(_7,[_677])
const _1170=_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_1169),_835]))])
const _1171=_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_165),_835]))])
const _1172=_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_1041,_835]))])
const _1173=_o3(_3,"currentSpotlight")
const _1174=_o12(_1024,_1044,_o4(_5,_o3(_3,"TagSelector")))
const _1175=[_1174,_1071,_1075]
const _1176=_o6(_8,_1040,_1147)
const _1177=_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_1176,_835]))])
const _1178=_o12(_1024,_633,_1026)
const _1179=[_1096,_1178]
const _1180=_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_631)]))]))])
const _1181=_o3(_3,"AllTagsActivityFeed")
const _1182=_o3(_3,"cutoff")
const _1183=_o4(_527,_1182)
const _1184=_o4(_5,_o3(_3,"Date"))
const _1185=_o12(_1024,_1183,_1184)
const _1186=_o3(_3,"offset")
const _1187=_o4(_527,_1186)
const _1188=_o12(_1024,_1187,_1070)
const _1189=_o8(_526,_1182,_1183)
const _1190=_o8(_526,_1186,_1187)
const _1191=_o4(_8,_1182)
const _1192=_o4(_8,_o3(_3,"endOffset"))
const _1193=_o3(_3,"tagCreated")
const _1194=_o3(_3,"tagRevision")
const _1195=_o5(_7,[_o4(_28,_740)])
const _1196=_o3(_3,"tagDiscussionComment")
const _1197=_o3(_3,"TagHistoryFeed")
const _1198=_o12(_1024,_528,_1038)
const _1199=_o3(_3,"options")
const _1200=_o4(_527,_1199)
const _1201=_o4(_5,_o3(_3,"JSON"))
const _1202=_o5(_7,[_712])
const _1203=_o5(_7,[_o4(_28,_366)])
const _1204=_o3(_3,"RecentDiscussionFeed")
const _1205=_o12(_1024,_601,_1070)
const _1206=_o12(_1024,_603,_1070)
const _1207=[_1076,_1189,_1190,_606]
const _1208=_o3(_3,"postCommented")
const _1209=_o5(_7,[_o4(_28,_598)])
const _1210=_o3(_3,"SubscribedFeed")
const _1211=_o3(_3,"SubforumMagicFeed")
const _1212=[_529,_1076,_1189,_1190,_606]
const _1213=_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_o6(_8,_o3(_3,"tagSubforumPosts"),_1209),_o6(_8,_o3(_3,"tagSubforumComments"),_1131),_o6(_8,_o3(_3,"tagSubforumStickyComments"),_o5(_7,[_o4(_28,_302)]))]))])
const _1214=_o3(_3,"SubforumNewFeed")
const _1215=[_1198,_1071,_1185,_1188,_1091,_1205,_1206]
const _1216=_o3(_3,"SubforumOldFeed")
const _1217=_o3(_3,"SubforumRecentCommentsFeed")
const _1218=_o3(_3,"SubforumTopFeed")
const _1219=_o3(_3,"UltraFeed")
const _1220=_o3(_3,"sessionId")
const _1221=_o4(_527,_1220)
const _1222=_o3(_3,"settings")
const _1223=_o4(_527,_1222)
const _1224=_o12(_1024,_1223,_1201)
const _1225=_o8(_526,_1222,_1223)
const _1226=_o6(_8,_o3(_3,"feedCommentThread"),_o5(_7,[_o4(_28,_1011)]))
const _1227=_o6(_8,_o3(_3,"feedPost"),_o5(_7,[_o4(_28,_1009)]))
const _1228=_o6(_8,_o3(_3,"feedSubscriptionSuggestions"),_o5(_7,[_o4(_28,_1020)]))
const _1229=_o3(_3,"UltraFeedSubscriptions")
const _1230=_o5(_7,[_o7(_8,_1048,_1051,_o5(_7,[_o6(_8,_245,_1169)]))])
const _1231=[_o12(_1024,_1044,_o4(_5,_o3(_3,"LocalgroupSelector"))),_1071,_1075]
const _1232=_o3(_3,"localgroups")
const _1233=_o5(_7,[_o4(_28,_414)])
const _1234=_o5(_7,[_o7(_8,_1232,_1077,_o5(_7,[_o6(_8,_1040,_1233),_835]))])
const _1235=_o3(_3,"ElicitBlockData")
const _1236=_o3(_3,"questionId")
const _1237=_o4(_527,_1236)
const _1238=_o12(_1024,_1237,_1026)
const _1239=_o8(_526,_1236,_1237)
const _1240=_o3(_3,"prediction")
const _1241=_o5(_7,[_10,_17,_360,_362,_361,_o6(_8,_o3(_3,"predictions"),_o5(_7,[_10,_o4(_8,_o3(_3,"predictionId")),_o4(_8,_1240),_81,_360,_o4(_8,_o3(_3,"sourceUrl")),_o4(_8,_o3(_3,"sourceId")),_o4(_8,_o3(_3,"binaryQuestionId")),_o6(_8,_o3(_3,"creator"),_o5(_7,[_10,_85,_o4(_8,_o3(_3,"sourceUserId")),_o6(_8,_o3(_3,"lwUser"),_106)]))]))])
const _1242=_o4(_527,_1240)
const _1243=_o3(_3,"RecentlyActiveDialogues")
const _1244=_o6(_8,_1040,_189)
const _1245=_o5(_7,[_1244])
const _1246=_o3(_3,"MyDialogues")
const _1247=_o5(_7,[_o6(_8,_1031,_189)])
const _1248=_o5(_7,[_o7(_8,_187,_1102,_1247)])
const _1249=_o5(_7,[_504])
const _1250=_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_1249)]))])
const _1251=_o3(_3,"lockThread")
const _1252=_o3(_3,"until")
const _1253=_o4(_527,_1252)
const _1254=_o3(_3,"unlockThread")
const _1255=_o5(_7,[_o7(_8,_1129,_1051,_o5(_7,[_o6(_8,_245,_1087)]))])
const _1256=_o3(_3,"moderateComment")
const _1257=_o12(_1024,_1123,_1026)
const _1258=_o4(_527,_89)
const _1259=_o4(_527,_152)
const _1260=_o4(_527,_150)
const _1261=_o3(_3,"markAsReadOrUnread")
const _1262=_o4(_527,_45)
const _1263=_o5(_7,[_591])
const _1264=_o5(_7,[_o6(_8,_245,_1263)])
const _1265=_o5(_7,[_o7(_8,_1063,_1051,_1264)])
const _1266=_o12(_1024,_904,_1038)
const _1267=[_1266]
const _1268=_o3(_3,"setIsHidden")
const _1269=_o3(_3,"isHidden")
const _1270=_o4(_527,_1269)
const _1271=_o14(_1036,_1074)
const _1272=_o12(_1024,_1044,_o4(_5,_o3(_3,"PostSelector")))
const _1273=[_1272,_1071,_1075]
const _1274=_o5(_7,[_1244,_835])
const _1275=_o5(_7,[_o7(_8,_227,_1077,_1274)])
const _1276=[_o12(_1024,_1044,_o4(_5,_o3(_3,"SequenceSelector"))),_1071,_1075]
const _1277=_o5(_7,[_o7(_8,_238,_1077,_o5(_7,[_o6(_8,_1040,_486),_835]))])
const _1278=[_o12(_1024,_1044,_o4(_5,_o3(_3,"DigestSelector"))),_1071,_1075]
const _1279=_o5(_7,[_o4(_28,_346)])
const _1280=_o5(_7,[_o7(_8,_o3(_3,"digests"),_1077,_o5(_7,[_o6(_8,_1040,_1279),_835]))])
const _1281=_o4(_527,_347)
const _1282=_o5(_7,[_o6(_8,_1031,_486)])
const _1283=_o5(_7,[_o7(_8,_550,_1102,_1282)])
const _1284=_o6(_8,_1040,_692)
const _1285=_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_1284,_835]))])
const _1286=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ChapterSelector"))),_1071,_1075]
const _1287=_o5(_7,[_o7(_8,_232,_1077,_o5(_7,[_o6(_8,_1040,_234),_835]))])
const _1288=_o5(_7,[_o4(_28,_889)])
const _1289=_o5(_7,[_o6(_8,_245,_1288)])
const _1290=_o4(_527,_22)
const _1291=_o12(_1024,_1290,_1038)
const _1292=_o8(_526,_22,_1290)
const _1293=_o4(_8,_o3(_3,"userReadCount"))
const _1294=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateDigestDataInput"))))]
const _1295=_o5(_7,[_o7(_8,_o3(_3,"updateDigest"),_1051,_o5(_7,[_o6(_8,_245,_1279)]))])
const _1296=_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_341)]))])
const _1297=_o4(_527,_342)
const _1298=_o4(_527,_348)
const _1299=_o12(_1024,_1298,_1184)
const _1300=_o4(_527,_350)
const _1301=_o12(_1024,_1300,_1184)
const _1302=_o8(_526,_348,_1298)
const _1303=_o8(_526,_350,_1300)
const _1304=_o3(_3,"NewUserCompleteProfile")
const _1305=_o4(_527,_82)
const _1306=_o3(_3,"subscribeToDigest")
const _1307=_o4(_527,_1306)
const _1308=_o4(_527,_386)
const _1309=_o12(_1024,_1308,_1026)
const _1310=_o4(_527,_938)
const _1311=_o8(_526,_82,_1305)
const _1312=_o8(_526,_386,_1308)
const _1313=_o4(_527,_84)
const _1314=_o5(_7,[_o4(_28,_969)])
const _1315=_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_1314)]))])
const _1316=_o5(_7,[_o7(_8,_1115,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_1004])),_835]))])
const _1317=_o4(_527,_699)
const _1318=_o8(_526,_699,_1317)
const _1319=_o4(_8,_o3(_3,"engagementPercentile"))
const _1320=_o3(_3,"count")
const _1321=_o4(_8,_1320)
const _1322=_o6(_8,_146,_810)
const _1323=_o4(_8,_o3(_3,"date"))
const _1324=_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_279),_835]))])
const _1325=_o3(_3,"sendNewDialogueMessageNotification")
const _1326=_o3(_3,"dialogueHtml")
const _1327=_o4(_527,_1326)
const _1328=_o3(_3,"args")
const _1329=_o4(_527,_1328)
const _1330=_o12(_1024,_1329,_1201)
const _1331=_o8(_526,_1328,_1329)
const _1332=_o3(_3,"autosaveRevision")
const _1333=_o4(_527,_146)
const _1334=_o4(_527,_37)
const _1335=[_o12(_1024,_1044,_o4(_5,_o3(_3,"RevisionSelector"))),_1071,_1075]
const _1336=_o5(_7,[_o7(_8,_545,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_706)])),_835]))])
const _1337=_o3(_3,"revision")
const _1338=_o3(_3,"revertPostToRevision")
const _1339=_o3(_3,"revisionId")
const _1340=_o4(_527,_1339)
const _1341=_o5(_7,[_o6(_8,_1031,_106)])
const _1342=_o5(_7,[_o7(_8,_98,_1102,_1341)])
const _1343=_o3(_3,"revertToRevisionId")
const _1344=_o4(_527,_1343)
const _1345=_o12(_1024,_833,_1070)
const _1346=_o5(_7,[_847])
const _1347=_o3(_3,"document")
const _1348=_o4(_527,_1347)
const _1349=_o3(_3,"targetFormat")
const _1350=_o4(_527,_1349)
const _1351=_o3(_3,"unlinkCrossposter")
const _1352=_o5(_7,[_o7(_8,_137,_1102,_o5(_7,[_o6(_8,_1031,_123)]))])
const _1353=[_o12(_1024,_1044,_o4(_5,_o3(_3,"TagFlagSelector"))),_1071,_1075]
const _1354=_o5(_7,[_o7(_8,_823,_1077,_o5(_7,[_o6(_8,_1040,_824),_835]))])
const _1355=_o5(_7,[_o4(_28,_383)])
const _1356=_o5(_7,[_o6(_8,_245,_1355)])
const _1357=_o3(_3,"AddForumEventVote")
const _1358=_o4(_527,_157)
const _1359=_o12(_1024,_1358,_1038)
const _1360=_o3(_3,"x")
const _1361=_o4(_527,_1360)
const _1362=_o14(_1036,_1120)
const _1363=_o12(_1024,_1361,_1362)
const _1364=_o3(_3,"delta")
const _1365=_o4(_527,_1364)
const _1366=_o4(_527,_225)
const _1367=_o14(_1037,_1026)
const _1368=_o12(_1024,_1366,_1367)
const _1369=_o8(_526,_157,_1358)
const _1370=_o8(_526,_1360,_1361)
const _1371=_o8(_526,_225,_1366)
const _1372=_o3(_3,"RemoveForumEventVote")
const _1373=_o3(_3,"RemoveForumEventSticker")
const _1374=_o3(_3,"stickerId")
const _1375=_o4(_527,_1374)
const _1376=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ForumEventSelector"))),_1071,_1075]
const _1377=_o3(_3,"forumEvents")
const _1378=_o12(_1024,_1290,_1026)
const _1379=_o3(_3,"sortBy")
const _1380=_o4(_527,_1379)
const _1381=_o3(_3,"desc")
const _1382=_o4(_527,_1381)
const _1383=_o4(_8,_o3(_3,"views"))
const _1384=_o4(_8,_o3(_3,"reads"))
const _1385=_o4(_8,_917)
const _1386=_o5(_7,[_186])
const _1387=_o4(_527,_1098)
const _1388=[_o8(_526,_1098,_1387)]
const _1389=_o3(_3,"CurrentFrontpageSurvey")
const _1390=_o3(_3,"reviewVotesForPostAndUser")
const _1391=_o3(_3,"reviewVotes")
const _1392=_o8(_1030,_22,_1290)
const _1393="IntValue"
const _1394=_o3(_3,"UserExpandFrontpageSection")
const _1395=_o3(_3,"section")
const _1396=_o4(_527,_1395)
const _1397=_o3(_3,"expanded")
const _1398=_o4(_527,_1397)
const _1399=_o6(_8,_1040,_123)
const _1400=_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_1399,_835]))])
const _1401=_o3(_3,"initiateConversation")
const _1402=_o4(_527,_326)
const _1403=_o4(_527,_327)
const _1404=_o5(_7,[_335])
const _1405=_o3(_3,"markConversationRead")
const _1406=_o4(_527,_331)
const _1407=[_o12(_1024,_1044,_o4(_5,_o3(_3,"SubscriptionSelector"))),_1071,_1075]
const _1408=_o3(_3,"subscriptions")
const _1409=_o5(_7,[_o4(_28,_769)])
const _1410=_o5(_7,[_o7(_8,_1408,_1077,_o5(_7,[_o6(_8,_1040,_1409),_835]))])
const _1411=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSubscriptionDataInput"))))]
const _1412=_o5(_7,[_o7(_8,_o3(_3,"createSubscription"),_1061,_o5(_7,[_o6(_8,_245,_1409)]))])
const _1413=_o4(_8,_o3(_3,"uniqueClientViews"))
const _1414=_o5(_7,[_o4(_28,_621)])
const _1415=_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1414),_835]))])
const _1416=[_1272,_1071]
const _1417=[_1049,_1076]
const _1418=_o5(_7,[_o4(_28,_484)])
const _1419=[_1090]
const _1420=_o3(_3,"markPostCommentsRead")
const _1421=_o3(_3,"RefreshDbSettings")
const _1422=_o5(_7,[_o7(_8,_1129,_1051,_o5(_7,[_o6(_8,_245,_1005)]))])
const _1423=[_o12(_1024,_1044,_o4(_5,_o3(_3,"MultiDocumentSelector"))),_1071,_1075]
const _1424=_o3(_3,"multiDocuments")
const _1425=_o3(_3,"jargonTerms")
const _1426=_o5(_7,[_o4(_28,_390)])
const _1427=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateJargonTermDataInput"))))]
const _1428=_o5(_7,[_o6(_8,_245,_1426)])
const _1429=_o5(_7,[_o7(_8,_o3(_3,"updateJargonTerm"),_1051,_1428)])
const _1430=_o3(_3,"getNewJargonTerms")
const _1431=_o3(_3,"glossaryPrompt")
const _1432=_o4(_527,_1431)
const _1433=_o3(_3,"examplePost")
const _1434=_o4(_527,_1433)
const _1435=_o3(_3,"exampleTerm")
const _1436=_o4(_527,_1435)
const _1437=_o3(_3,"exampleAltTerm")
const _1438=_o4(_527,_1437)
const _1439=_o3(_3,"exampleDefinition")
const _1440=_o4(_527,_1439)
const _1441=[_1272,_1071,_1075,_1155]
const _1442=[_o12(_1024,_1044,_o4(_5,_o3(_3,"LlmConversationSelector"))),_1071,_1075]
const _1443=_o3(_3,"llmConversations")
const _1444=_o5(_7,[_401])
const _1445=_o5(_7,[_o7(_8,_o3(_3,"llmConversation"),_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_406)]))]))])
const _1446=_o3(_3,"allowNull")
const _1447=_o4(_527,_1446)
const _1448=[_1096,_o12(_1024,_1447,_1074)]
const _1449=[_o8(_526,_1098,_o13(_1029,[_1100,_o8(_1030,_1446,_1447)]))]
const _1450=_o5(_7,[_o6(_8,_1031,_692)])
const _1451=_o4(_527,_o3(_3,"arbitalSlug"))
const _1452=_o5(_7,[_o6(_8,_245,_1233)])
const _1453=_o3("BooleanValue",true)
const _1454=[_1101,_o8(_526,_1446,_1453)]
const _1455=_o5(_7,[_o6(_8,_1031,_1233)])
const _1456=[_o12(_1024,_1044,_o4(_5,_o3(_3,"MessageSelector"))),_1071,_1075]
const _1457=_o5(_7,[_o7(_8,_407,_1077,_o5(_7,[_o6(_8,_1040,_336),_835]))])
const _1458=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateConversationDataInput"))))]
const _1459=_o5(_7,[_339])
const _1460=_o5(_7,[_o7(_8,_o3(_3,"updateConversation"),_1051,_o5(_7,[_o6(_8,_245,_1459)]))])
const _1461=_o3(_3,"conversation")
const _1462=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ConversationSelector"))),_1071,_1075]
const _1463=_o3(_3,"conversations")
const _1464=_o5(_7,[_o4(_28,_338)])
const _1465=_o4(_527,_15)
const _1466=_o12(_1024,_1465,_1038)
const _1467=[_1466]
const _1468=_o3(_3,"GetUserBySlug")
const _1469=_o8(_526,_15,_1465)
const _1470=[_1469]
const _1471=_o5(_7,[_o4(_28,_433)])
const _1472=_o5(_7,[_o6(_8,_245,_1471)])
const _1473=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ModerationTemplateSelector"))),_1071,_1075]
const _1474=_o5(_7,[_o7(_8,_o3(_3,"moderationTemplates"),_1077,_o5(_7,[_o6(_8,_1040,_1471),_835]))])
const _1475=_o3(_3,"notificationIds")
const _1476=_o4(_527,_1475)
const _1477=_o5(_7,[_o4(_28,_448)])
const _1478=_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_912)]))]))])
const _1479=_o4(_527,_243)
const _1480=_o3(_3,"MarkAllNotificationsAsRead")
const _1481=_o5(_7,[_o7(_8,_525,_1102,_o5(_7,[_o6(_8,_1031,_997)]))])
const _1482=_o5(_7,[_o7(_8,_1048,_1051,_o5(_7,[_o6(_8,_245,_1314)]))])
const _1483=_o3(_3,"ActiveTagCount")
const _1484=_o3(_3,"importUrlAsDraftPost")
const _1485=_o4(_527,_30)
const _1486=_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_534)]))]))])
const _1487=_o3(_3,"latestGoogleDocMetadata")
const _1488=_o3(_3,"ImportGoogleDoc")
const _1489=_o3(_3,"fileUrl")
const _1490=_o4(_527,_1489)
const _1491=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreatePostDataInput"))))]
const _1492=_o3(_3,"createPost")
const _1493=_o5(_7,[_o7(_8,_1492,_1061,_1264)])
const _1494=_o5(_7,[_o4(_28,_594)])
const _1495=_o5(_7,[_o6(_8,_245,_1494)])
const _1496=_o5(_7,[_o4(_28,_891)])
const _1497=_o5(_7,[_o6(_8,_245,_1496)])
const _1498=_o5(_7,[_o7(_8,_545,_1077,_o5(_7,[_o6(_8,_1040,_1202),_835]))])
const _1499=[_1096,_1042]
const _1500=_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_576)]))])
const _1501=_o3(_3,"dialogueId")
const _1502=_o4(_527,_1501)
const _1503=_o4(_527,_o3(_3,"unreadCount"))
const _1504=_o5(_7,[_o7(_8,_187,_1102,_1450)])
const _1505=[_1096,_1155]
const _1506=_o5(_7,[_o7(_8,_187,_1102,_1157)])
const _1507=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSplashArtCoordinateDataInput"))))]
const _1508=_o3(_3,"createSplashArtCoordinate")
const _1509=_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_1131),_835]))])
const _1510=_o3(_3,"flipSplashArtImage")
const _1511=_o4(_527,_465)
const _1512=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ReviewWinnerArtSelector"))),_1071,_1075]
const _1513=_o5(_7,[_o7(_8,_o3(_3,"reviewWinnerArts"),_1077,_o5(_7,[_o6(_8,_1040,_562),_835]))])
const _1514=_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_567)]))])
const _1515=_o4(_527,_73)
const _1516=_o12(_1024,_1515,_1026)
const _1517=_o3(_3,"private")
const _1518=_o4(_527,_1517)
const _1519=_o4(_527,_777)
const _1520=_o8(_526,_73,_1515)
const _1521=_o3(_3,"CancelRSVPToEvent")
const _1522=[_1071,_1224]
const _1523=[_1076,_1225]
const _1524=_o5(_7,[_o6(_8,_1040,_o5(_7,[_190,_o4(_8,_o3(_3,"scenario")),_o4(_8,_o3(_3,"recommId")),_o4(_8,_o3(_3,"generatedAt")),_o4(_8,_o3(_3,"curated")),_o4(_8,_o3(_3,"stickied"))]))])
const _1525=_o6(_8,_1040,_1103)
const _1526=_o12(_1024,_528,_1026)
const _1527=_o6(_8,_1040,_142)
const _1528=_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_1527,_835]))])
const _1529=_o3(_3,"CuratedAndPopularThisWeek")
const _1530=_o3(_3,"observeRecommendation")
const _1531=_o3(_3,"clickRecommendation")
const _1532=_o3(_3,"collection")
const _1533=_o3(_3,"dismissRecommendation")
const _1534=_o4(_527,_1320)
const _1535=_o3(_3,"algorithm")
const _1536=_o4(_527,_1535)
const _1537=[_o12(_1024,_1534,_1070),_o12(_1024,_1536,_1201)]
const _1538=_o5(_7,[_o7(_8,_o3(_3,"Recommendations"),[_o8(_526,_1320,_1534),_o8(_526,_1535,_1536)],_1418)])
const _1539=_o3(_3,"GetAllReviewWinners")
const _1540=_o5(_7,[_o6(_8,_1539,_o5(_7,[_o4(_28,_480)]))])
const _1541=_o3(_3,"prompt")
const _1542=_o4(_527,_1541)
const _1543=_o5(_7,[_o4(_28,_507)])
const _1544=_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1543),_835]))])
const _1545=[_o12(_1024,_1044,_o4(_5,_o3(_3,"ReviewVoteSelector"))),_1071,_1075]
const _1546=_o5(_7,[_o7(_8,_1391,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_697)])),_835]))])
const _1547=_o4(_527,_354)
const _1548=_o12(_1024,_1547,_1038)
const _1549=[_1548]
const _1550=_o8(_526,_354,_1547)
const _1551=[_1550]
const _1552=_o3(_3,"y")
const _1553=_o3(_3,"theta")
const _1554=_o5(_7,[_23,_85,_o4(_8,_1360),_o4(_8,_1552),_o4(_8,_1553)])
const _1555=_o3(_3,"AddGivingSeasonHeart")
const _1556=_o4(_527,_1552)
const _1557=_o4(_527,_1553)
const _1558=_o3(_3,"RemoveGivingSeasonHeart")
const _1559=_o3(_3,"submitReviewVote")
const _1560=_o4(_527,_508)
const _1561=_o3(_3,"quadraticChange")
const _1562=_o4(_527,_1561)
const _1563=_o3(_3,"newQuadraticScore")
const _1564=_o4(_527,_1563)
const _1565=_o4(_527,_198)
const _1566=_o4(_527,_700)
const _1567=_o3(_3,"RevisionsDiff")
const _1568=_o4(_527,_195)
const _1569=_o4(_527,_367)
const _1570=_o3(_3,"id")
const _1571=_o4(_527,_1570)
const _1572=_o3(_3,"beforeRev")
const _1573=_o4(_527,_1572)
const _1574=_o3(_3,"afterRev")
const _1575=_o4(_527,_1574)
const _1576=_o3(_3,"trim")
const _1577=_o4(_527,_1576)
const _1578=_o3(_3,"launchCode")
const _1579=_o4(_527,_1578)
const _1580=[_o12(_1024,_1044,_o4(_5,_o3(_3,"PetrovDayActionSelector"))),_1071,_1075]
const _1581=_o5(_7,[_o4(_28,_452)])
const _1582=_o5(_7,[_o7(_8,_o3(_3,"petrovDayActions"),_1077,_o5(_7,[_o6(_8,_1040,_1581),_835]))])
const _1583=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreatePetrovDayActionDataInput"))))]
const _1584=_o5(_7,[_o7(_8,_o3(_3,"createPetrovDayAction"),_1061,_o5(_7,[_o6(_8,_245,_1581)]))])
const _1585=_o3(_3,"petrov2024checkIfNuked")
const _1586=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateChapterDataInput"))))]
const _1587=_o3(_3,"updateChapter")
const _1588=_o5(_7,[_o6(_8,_245,_271)])
const _1589=_o5(_7,[_o4(_28,_255)])
const _1590=_o5(_7,[_o6(_8,_245,_1589)])
const _1591=_o5(_7,[_274])
const _1592=_o5(_7,[_o4(_28,_758)])
const _1593=_o5(_7,[_o6(_8,_245,_1592)])
const _1594=_o3(_3,"updateContinueReading")
const _1595=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateSpotlightDataInput"))))]
const _1596=_o3(_3,"updateSpotlight")
const _1597=_o5(_7,[_o4(_28,_766)])
const _1598=_o5(_7,[_o6(_8,_245,_1597)])
const _1599=[_o12(_1024,_1044,_o4(_5,_o3(_3,"SpotlightSelector"))),_1071,_1075]
const _1600=_o5(_7,[_o7(_8,_o3(_3,"spotlights"),_1077,_o5(_7,[_o6(_8,_1040,_1017),_835]))])
const _1601=_o3(_3,"spotlightId")
const _1602=_o4(_527,_1601)
const _1603=[_o12(_1024,_1602,_1026)]
const _1604=_o3(_3,"publishAndDeDuplicateSpotlight")
const _1605=_o3(_3,"SuggestedFeedSubscriptionUsers")
const _1606=_o5(_7,[_o4(_28,_683)])
const _1607=_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_1606)]))])
const _1608=_o5(_7,[_o7(_8,_1048,_1051,_o5(_7,[_o6(_8,_245,_695)]))])
const _1609=[_1085,_1071]
const _1610=_o5(_7,[_o4(_28,_930)])
const _1611=_o3(_3,"ipAddress")
const _1612=_o4(_527,_1611)
const _1613=_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_695),_835]))])
const _1614=_o3(_3,"createModeratorAction")
const _1615=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateModeratorActionDataInput"))))]
const _1616=_o5(_7,[_o6(_8,_245,_626)])
const _1617=_o5(_7,[_o7(_8,_1614,_1061,_1616)])
const _1618=_o5(_7,[_o4(_28,_691)])
const _1619=_o5(_7,[_o6(_8,_245,_1618)])
const _1620=_o5(_7,[_o4(_28,_518)])
const _1621=_o5(_7,[_o6(_8,_245,_556)])
const _1622=[_o12(_1024,_1044,_o4(_5,_o3(_3,"TagRelSelector"))),_1071,_1075]
const _1623=_o3(_3,"tagRels")
const _1624=_o5(_7,[_o7(_8,_1623,_1077,_o5(_7,[_o6(_8,_1040,_997),_835]))])
const _1625=_o5(_7,[_o4(_28,_866)])
const _1626=_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_1625),_835]))])
const _1627=[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserRateLimitSelector"))),_1071,_1075]
const _1628=_o5(_7,[_o4(_28,_899)])
const _1629=_o5(_7,[_o7(_8,_o3(_3,"userRateLimits"),_1077,_o5(_7,[_o6(_8,_1040,_1628),_835]))])
const _1630=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUserRateLimitDataInput"))))]
const _1631=_o3(_3,"updateUserRateLimit")
const _1632=_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_893)]))])
const _1633=_o5(_7,[_o6(_8,_245,_1628)])
const _1634=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateUserRateLimitDataInput"))))]
const _1635=_o3(_3,"createUserRateLimit")
const _1636=_o5(_7,[_o4(_28,_789)])
const _1637=_o3(_3,"editSurvey")
const _1638=_o4(_527,_775)
const _1639=_o4(_527,_782)
const _1640=_o5(_7,[_o6(_8,_245,_1636)])
const _1641=[_1526,_1090]
const _1642=_o3(_3,"addOrUpvoteTag")
const _1643=[_529,_905]
const _1644=_o3(_3,"slugs")
const _1645=_o4(_527,_1644)
const _1646=_o5(_7,[_o4(_28,_874)])
const _1647=_o5(_7,[_o7(_8,_137,_1102,_1159)])
const _1648=_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_1152),_835]))])
const _1649=_o5(_7,[_o6(_8,_1031,_142)])
const _1650=_o5(_7,[_o7(_8,_137,_1102,_1649)])
const _1651=_o5(_7,[_o4(_28,_806)])
const _1652=_o3(_3,"reorderSummaries")
const _1653=_o4(_527,_438)
const _1654=_o3(_3,"parentDocumentCollectionName")
const _1655=_o4(_527,_1654)
const _1656=_o3(_3,"summaryIds")
const _1657=_o4(_527,_1656)
const _1658=[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateMultiDocumentDataInput"))))]
const _1659=_o3(_3,"updateMultiDocument")
const _1660=_o5(_7,[_o6(_8,_245,_727)])
const _1661=[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateMultiDocumentDataInput"))))]
const _1662=_o3(_3,"createMultiDocument")
const _1663=_o3(_3,"before")
const _1664=_o4(_527,_1663)
const _1665=_o14(_1036,_1184)
const _1666=_o3(_3,"after")
const _1667=_o4(_527,_1666)
const _1668=_o5(_7,[_o6(_8,_245,_824)])
const _1669=_o3(_3,"tagFlag")
const _1670=_o3(_3,"mergeTags")
const _1671=_o3(_3,"sourceTagId")
const _1672=_o4(_527,_1671)
const _1673=_o3(_3,"targetTagId")
const _1674=_o4(_527,_1673)
const _1675=_o3(_3,"transferSubtags")
const _1676=_o4(_527,_1675)
const _1677=_o3(_3,"redirectSource")
const _1678=_o4(_527,_1677)
const _1679=_o3(_3,"promoteLensToMain")
const _1680=_o3(_3,"lensId")
const _1681=_o4(_527,_1680)
const _1682=_o4(_527,_875)
const _1683=_o3(_3,"searchTagIds")
const _1684=_o4(_527,_1683)
const _1685=_o5(_7,[_o6(_8,_245,_o5(_7,[_737]))])
const _1686=_o5(_7,[_o4(_28,_901)])
const _1687=_o5(_7,[_o6(_8,_245,_1686)])
const _1688=_o3(_3,"UserUpdateSubforumMembership")
const _1689=_o3(_3,"member")
const _1690=_o4(_527,_1689)
const _1691=[_1174,_1071]
const _1692=[_1174,_1071,_1345]
const _1693=[_1174,_1071,_1155,_1345]
const _1694=[_1466,_1178]
const _1695=_o3(_3,"TagPreview")
const _1696=[_1469,_634]
const _1697=_o6(_8,_742,_727)
const _1698=_o5(_7,[_o4(_28,_813)])
const _1699=_o5(_7,[_o6(_8,_1031,_977)])
const _1700=_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_300)]))])
const _1701=_o5(_7,[_o6(_8,_1031,_o5(_7,[_210]))])
const _1702=[_o8(_526,_1098,_o13(_1029,[_o8(_1030,_1028,_1136)]))]
const _1703=_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_503)]))])
const _1704=_o3(_3,"createUltraFeedEvent")
const _1705=_o3(_3,"updateUltraFeedEvent")
const _1706=_o3(_3,"connectCrossposter")
const _1707=_o3(_3,"token")
const _1708=_o4(_527,_1707)
const _1709=_o12(_1024,_1708,_1026)
const _1710=[_1709]
const _1711=_o8(_526,_1707,_1708)
const _1712=[_1711]
const _1713=_o5(_7,[_o4(_28,_976)])
const _1714=_o3(_3,"useEmailToken")
const _1715=_o3(_3,"sendEventTriggeredDM")
const _1716=_o4(_527,_58)
const _1717=_o3(_3,"AirtableLeaderboards")
const _1718=_o3(_3,"days")
const _1719=_o4(_527,_1718)
const _1720=_o3(_3,"login")
const _1721=_o12(_1024,_1305,_1026)
const _1722=_o3(_3,"password")
const _1723=_o4(_527,_1722)
const _1724=_o12(_1024,_1723,_1026)
const _1725=_o8(_526,_1722,_1723)
const _1726=_o5(_7,[_o4(_8,_1707)])
const _1727=_o3(_3,"signup")
const _1728=_o3(_3,"subscribeToCurated")
const _1729=_o4(_527,_1728)
const _1730=_o3(_3,"reCaptchaToken")
const _1731=_o4(_527,_1730)
const _1732=_o4(_527,_963)
const _1733=_o3(_3,"resetPassword")
const _1734=_o3(_3,"sortedBy")
const _1735=_o4(_527,_1734)
const _1736=_o8(_526,_1072,_1453)
const _1737=_o4(_527,_145)
const _1738=_o5(_7,[_o7(_8,_1468,_1470,_1314)])
const _1739=_o3(_3,"performVoteComment")
const _1740=_o4(_527,_988)
const _1741=_o3(_3,"extendedVote")
const _1742=_o4(_527,_1741)
const _1743=[_1096,_o12(_1024,_1740,_1026),_o12(_1024,_1742,_1201)]
const _1744=[_o8(_526,_257,_1095),_o8(_526,_988,_1740),_o8(_526,_1741,_1742)]
const _1745=_o4(_8,_o3(_3,"showVotingPatternWarning"))
const _1746=_o3(_3,"performVotePost")
const _1747=_o3(_3,"performVoteTagRel")
const _1748=_o3(_3,"performVoteRevision")
const _1749=_o3(_3,"performVoteElectionCandidate")
const _1750=_o3(_3,"performVoteTag")
const _1751=_o3(_3,"performVoteMultiDocument")
const _1752=_o3(_3,"performVoteMessage")
const _1753=_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_568]))]))])
const _1754=_o3(_3,"Lightcone2024FundraiserStripeAmounts")
const _1755=[_o12(_1024,_1387,_o4(_5,_o3(_3,"MultiPostInput")))]
const _1756=[_o12(_1024,_1387,_o4(_5,_o3(_3,"MultiCommentInput")))]
const _1757=_o12(_1024,_1387,_o4(_5,_o3(_3,"SinglePostInput")))
const _1758=[_1757]
const _1759=_o5(_7,[_o7(_8,_187,_1388,_1104)])
const _1760=_o4(_527,_920)/* eslint-disable */
// @ts-nocheck
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = T | null | undefined;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  ContentTypeData: { input: any; output: any; }
  Date: { input: Date; output: string; }
  JSON: { input: any; output: any; }
};

export type AdvisorRequest = {
  __typename?: 'AdvisorRequest';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  interestedInMetaculus: Maybe<Scalars['Boolean']['output']>;
  jobAds: Maybe<Scalars['JSON']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type AdvisorRequestOutput = {
  __typename?: 'AdvisorRequestOutput';
  data: Maybe<AdvisorRequest>;
};

export type AdvisorRequestSelector = {
  default?: InputMaybe<EmptyViewInput>;
  requestsByUser?: InputMaybe<AdvisorRequestsRequestsByUserInput>;
};

export type AdvisorRequestsRequestsByUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type AirtableLeaderboardResult = {
  __typename?: 'AirtableLeaderboardResult';
  leaderboardAmount: Maybe<Scalars['Int']['output']>;
  name: Scalars['String']['output'];
};

export type AllTagsActivityFeedEntry = {
  __typename?: 'AllTagsActivityFeedEntry';
  tagCreated: Maybe<Tag>;
  tagDiscussionComment: Maybe<Comment>;
  tagRevision: Maybe<Revision>;
  type: AllTagsActivityFeedEntryType;
};

export type AllTagsActivityFeedEntryType =
  | 'tagCreated'
  | 'tagDiscussionComment'
  | 'tagRevision';

export type AllTagsActivityFeedQueryResults = {
  __typename?: 'AllTagsActivityFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<AllTagsActivityFeedEntry>>;
};

export type AnalyticsSeriesValue = {
  __typename?: 'AnalyticsSeriesValue';
  comments: Maybe<Scalars['Int']['output']>;
  date: Maybe<Scalars['Date']['output']>;
  karma: Maybe<Scalars['Int']['output']>;
  reads: Maybe<Scalars['Int']['output']>;
  views: Maybe<Scalars['Int']['output']>;
};

export type ArbitalCaches = {
  __typename?: 'ArbitalCaches';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type ArbitalLinkedPage = {
  __typename?: 'ArbitalLinkedPage';
  _id: Scalars['String']['output'];
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
};

export type ArbitalLinkedPages = {
  __typename?: 'ArbitalLinkedPages';
  children: Array<ArbitalLinkedPage>;
  faster: Array<ArbitalLinkedPage>;
  lessTechnical: Array<ArbitalLinkedPage>;
  moreTechnical: Array<ArbitalLinkedPage>;
  parents: Array<ArbitalLinkedPage>;
  requirements: Array<ArbitalLinkedPage>;
  slower: Array<ArbitalLinkedPage>;
  teaches: Array<ArbitalLinkedPage>;
};

export type ArbitalPageData = {
  __typename?: 'ArbitalPageData';
  html: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
};

export type ArbitalTagContentRel = {
  __typename?: 'ArbitalTagContentRel';
  _id: Scalars['String']['output'];
  childCollectionName: Scalars['String']['output'];
  childDocumentId: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  isStrong: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  level: Scalars['Float']['output'];
  parentCollectionName: Scalars['String']['output'];
  parentDocumentId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  type: Scalars['String']['output'];
};

export type ArbitalTagContentRelSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type AutomatedContentEvaluation = {
  __typename?: 'AutomatedContentEvaluation';
  _id: Scalars['String']['output'];
  aiChoice: Maybe<Scalars['String']['output']>;
  aiCoT: Maybe<Scalars['String']['output']>;
  aiReasoning: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  revisionId: Scalars['String']['output'];
  score: Maybe<Scalars['Float']['output']>;
  sentenceScores: Maybe<Array<SentenceScore>>;
};

export type AutosaveContentType = {
  type?: InputMaybe<Scalars['String']['input']>;
  value?: InputMaybe<Scalars['ContentTypeData']['input']>;
};

export type Ban = {
  __typename?: 'Ban';
  _id: Scalars['String']['output'];
  comment: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  expirationDate: Maybe<Scalars['Date']['output']>;
  ip: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  properties: Maybe<Scalars['JSON']['output']>;
  reason: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type BanSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type Book = {
  __typename?: 'Book';
  _id: Scalars['String']['output'];
  collectionId: Scalars['String']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  displaySequencesAsGrid: Maybe<Scalars['Boolean']['output']>;
  hideProgressBar: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  number: Maybe<Scalars['Float']['output']>;
  postIds: Array<Scalars['String']['output']>;
  postedAt: Maybe<Scalars['Date']['output']>;
  posts: Array<Post>;
  schemaVersion: Scalars['Float']['output'];
  sequenceIds: Array<Scalars['String']['output']>;
  sequences: Array<Sequence>;
  showChapters: Maybe<Scalars['Boolean']['output']>;
  subtitle: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  tocTitle: Maybe<Scalars['String']['output']>;
};


export type BookcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type BookOutput = {
  __typename?: 'BookOutput';
  data: Maybe<Book>;
};

export type BookSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type Bookmark = {
  __typename?: 'Bookmark';
  _id: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  collectionName: Scalars['String']['output'];
  comment: Maybe<Comment>;
  createdAt: Scalars['Date']['output'];
  documentId: Scalars['String']['output'];
  lastUpdated: Scalars['Date']['output'];
  post: Maybe<Post>;
  userId: Scalars['String']['output'];
};

export type BookmarkSelector = {
  myBookmarkedPosts?: InputMaybe<EmptyViewInput>;
  myBookmarks?: InputMaybe<EmptyViewInput>;
  userDocumentBookmark?: InputMaybe<BookmarksUserDocumentBookmarkInput>;
};

export type BookmarksUserDocumentBookmarkInput = {
  collectionName?: InputMaybe<Scalars['String']['input']>;
  documentId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type Chapter = {
  __typename?: 'Chapter';
  _id: Scalars['String']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  number: Maybe<Scalars['Float']['output']>;
  postIds: Array<Scalars['String']['output']>;
  posts: Array<Post>;
  schemaVersion: Scalars['Float']['output'];
  sequence: Maybe<Sequence>;
  sequenceId: Maybe<Scalars['String']['output']>;
  subtitle: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
};


export type ChaptercontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ChapterOutput = {
  __typename?: 'ChapterOutput';
  data: Maybe<Chapter>;
};

export type ChapterSelector = {
  SequenceChapters?: InputMaybe<ChaptersSequenceChaptersInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type ChaptersSequenceChaptersInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
};

export type CkEditorUserSession = {
  __typename?: 'CkEditorUserSession';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  documentId: Maybe<Scalars['String']['output']>;
  endedAt: Maybe<Scalars['Date']['output']>;
  endedBy: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type CkEditorUserSessionSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type ClientId = {
  __typename?: 'ClientId';
  _id: Scalars['String']['output'];
  clientId: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  firstSeenLandingPage: Maybe<Scalars['String']['output']>;
  firstSeenReferrer: Maybe<Scalars['String']['output']>;
  invalidated: Maybe<Scalars['Boolean']['output']>;
  lastSeenAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  timesSeen: Maybe<Scalars['Float']['output']>;
  userIds: Maybe<Array<Scalars['String']['output']>>;
  users: Maybe<Array<User>>;
};

export type ClientIdSelector = {
  default?: InputMaybe<EmptyViewInput>;
  getClientId?: InputMaybe<ClientIdsGetClientIdInput>;
};

export type ClientIdsGetClientIdInput = {
  clientId?: InputMaybe<Scalars['String']['input']>;
};

export type CoauthorStatusInput = {
  confirmed: Scalars['Boolean']['input'];
  requested: Scalars['Boolean']['input'];
  userId: Scalars['String']['input'];
};

export type CoauthorStatusOutput = {
  __typename?: 'CoauthorStatusOutput';
  confirmed: Scalars['Boolean']['output'];
  requested: Scalars['Boolean']['output'];
  userId: Scalars['String']['output'];
};

export type Collection = {
  __typename?: 'Collection';
  _id: Scalars['String']['output'];
  books: Array<Book>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  firstPageLink: Scalars['String']['output'];
  gridImageId: Maybe<Scalars['String']['output']>;
  hideStartReadingButton: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  noindex: Scalars['Boolean']['output'];
  postsCount: Scalars['Int']['output'];
  readPostsCount: Scalars['Int']['output'];
  schemaVersion: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
  title: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};


export type CollectioncontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type CollectionDefaultViewInput = {
  collectionIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type CollectionOutput = {
  __typename?: 'CollectionOutput';
  data: Maybe<Collection>;
};

export type CollectionSelector = {
  default?: InputMaybe<CollectionDefaultViewInput>;
};

export type CombinedKarmaVals = {
  __typename?: 'CombinedKarmaVals';
  commentKarma: Scalars['Int']['output'];
  date: Scalars['Date']['output'];
  postKarma: Scalars['Int']['output'];
};

export type Comment = {
  __typename?: 'Comment';
  _id: Scalars['String']['output'];
  af: Scalars['Boolean']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afDate: Maybe<Scalars['Date']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  agentFoundationsId: Maybe<Scalars['String']['output']>;
  allVotes: Maybe<Array<Vote>>;
  answer: Scalars['Boolean']['output'];
  author: Maybe<Scalars['String']['output']>;
  authorIsUnreviewed: Scalars['Boolean']['output'];
  baseScore: Maybe<Scalars['Float']['output']>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  debateResponse: Maybe<Scalars['Boolean']['output']>;
  deleted: Scalars['Boolean']['output'];
  deletedByUser: Maybe<User>;
  deletedByUserId: Maybe<Scalars['String']['output']>;
  deletedDate: Maybe<Scalars['Date']['output']>;
  deletedPublic: Scalars['Boolean']['output'];
  deletedReason: Maybe<Scalars['String']['output']>;
  descendentCount: Scalars['Float']['output'];
  directChildrenCount: Scalars['Float']['output'];
  draft: Scalars['Boolean']['output'];
  emojiReactors: Maybe<Scalars['JSON']['output']>;
  extendedScore: Maybe<Scalars['JSON']['output']>;
  forumEvent: Maybe<ForumEvent>;
  forumEventId: Maybe<Scalars['String']['output']>;
  forumEventMetadata: Maybe<Scalars['JSON']['output']>;
  hideAuthor: Scalars['Boolean']['output'];
  hideKarma: Maybe<Scalars['Boolean']['output']>;
  hideModeratorHat: Maybe<Scalars['Boolean']['output']>;
  htmlBody: Maybe<Scalars['String']['output']>;
  isPinnedOnProfile: Scalars['Boolean']['output'];
  lastEditedAt: Maybe<Scalars['Date']['output']>;
  lastSubthreadActivity: Maybe<Scalars['Date']['output']>;
  latestChildren: Array<Comment>;
  legacy: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  legacyId: Maybe<Scalars['String']['output']>;
  legacyParentId: Maybe<Scalars['String']['output']>;
  legacyPoll: Scalars['Boolean']['output'];
  modGPTAnalysis: Maybe<Scalars['String']['output']>;
  modGPTRecommendation: Maybe<Scalars['String']['output']>;
  moderatorHat: Scalars['Boolean']['output'];
  moveToAlignmentUser: Maybe<User>;
  moveToAlignmentUserId: Maybe<Scalars['String']['output']>;
  needsReview: Maybe<Scalars['Boolean']['output']>;
  nominatedForReview: Maybe<Scalars['String']['output']>;
  originalDialogue: Maybe<Post>;
  originalDialogueId: Maybe<Scalars['String']['output']>;
  pageUrl: Maybe<Scalars['String']['output']>;
  pageUrlRelative: Maybe<Scalars['String']['output']>;
  parentAnswer: Maybe<Comment>;
  parentAnswerId: Maybe<Scalars['String']['output']>;
  parentComment: Maybe<Comment>;
  parentCommentId: Maybe<Scalars['String']['output']>;
  pingbacks: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Maybe<Scalars['String']['output']>;
  postVersion: Maybe<Scalars['String']['output']>;
  postedAt: Scalars['Date']['output'];
  promoted: Maybe<Scalars['Boolean']['output']>;
  promotedAt: Maybe<Scalars['Date']['output']>;
  promotedByUser: Maybe<User>;
  promotedByUserId: Maybe<Scalars['String']['output']>;
  referrer: Maybe<Scalars['String']['output']>;
  rejected: Scalars['Boolean']['output'];
  rejectedByUser: Maybe<User>;
  rejectedByUserId: Maybe<Scalars['String']['output']>;
  rejectedReason: Maybe<Scalars['String']['output']>;
  relevantTagIds: Array<Scalars['String']['output']>;
  relevantTags: Array<Tag>;
  repliesBlockedUntil: Maybe<Scalars['Date']['output']>;
  retracted: Scalars['Boolean']['output'];
  reviewForAlignmentUserId: Maybe<Scalars['String']['output']>;
  reviewedByUser: Maybe<User>;
  reviewedByUserId: Maybe<Scalars['String']['output']>;
  reviewingForReview: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  shortform: Maybe<Scalars['Boolean']['output']>;
  shortformFrontpage: Scalars['Boolean']['output'];
  spam: Scalars['Boolean']['output'];
  subforumStickyPriority: Maybe<Scalars['Float']['output']>;
  suggestForAlignmentUserIds: Array<Scalars['String']['output']>;
  suggestForAlignmentUsers: Array<User>;
  tag: Maybe<Tag>;
  tagCommentType: TagCommentType;
  tagId: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  topLevelComment: Maybe<Comment>;
  topLevelCommentId: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userAgent: Maybe<Scalars['String']['output']>;
  userIP: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
  voteCount: Scalars['Float']['output'];
  votingSystem: Scalars['String']['output'];
  wordCount: Maybe<Scalars['Int']['output']>;
};


export type CommentcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type CommentCountTag = {
  __typename?: 'CommentCountTag';
  comment_count: Scalars['Int']['output'];
  name: Scalars['String']['output'];
};

export type CommentDefaultViewInput = {
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentEmbedding = {
  __typename?: 'CommentEmbedding';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
};

export type CommentKarmaChange = {
  __typename?: 'CommentKarmaChange';
  _id: Scalars['String']['output'];
  addedReacts: Maybe<Array<ReactionChange>>;
  collectionName: Scalars['String']['output'];
  commentId: Maybe<Scalars['String']['output']>;
  description: Maybe<Scalars['String']['output']>;
  eaAddedReacts: Maybe<Scalars['JSON']['output']>;
  postId: Maybe<Scalars['String']['output']>;
  postSlug: Maybe<Scalars['String']['output']>;
  postTitle: Maybe<Scalars['String']['output']>;
  scoreChange: Scalars['Int']['output'];
  tagCommentType: Maybe<TagCommentType>;
  tagId: Maybe<Scalars['String']['output']>;
  tagName: Maybe<Scalars['String']['output']>;
  tagSlug: Maybe<Scalars['String']['output']>;
};

export type CommentModeratorAction = {
  __typename?: 'CommentModeratorAction';
  _id: Scalars['String']['output'];
  active: Maybe<Scalars['Boolean']['output']>;
  comment: Maybe<Comment>;
  commentId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  endedAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  type: Maybe<Scalars['String']['output']>;
};

export type CommentModeratorActionOutput = {
  __typename?: 'CommentModeratorActionOutput';
  data: Maybe<CommentModeratorAction>;
};

export type CommentModeratorActionSelector = {
  activeCommentModeratorActions?: InputMaybe<CommentModeratorActionsActiveCommentModeratorActionsInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type CommentModeratorActionsActiveCommentModeratorActionsInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
};

export type CommentOutput = {
  __typename?: 'CommentOutput';
  data: Maybe<Comment>;
};

export type CommentSelector = {
  afPostCommentsTop?: InputMaybe<CommentsAfPostCommentsTopInput>;
  afRecentDiscussionThread?: InputMaybe<CommentsAfRecentDiscussionThreadInput>;
  afSubmissions?: InputMaybe<CommentsAfSubmissionsInput>;
  alignmentSuggestedComments?: InputMaybe<CommentsAlignmentSuggestedCommentsInput>;
  allCommentsDeleted?: InputMaybe<CommentsAllCommentsDeletedInput>;
  allRecentComments?: InputMaybe<CommentsAllRecentCommentsInput>;
  answersAndReplies?: InputMaybe<CommentsAnswersAndRepliesInput>;
  checkedByModGPT?: InputMaybe<CommentsCheckedByModGPTInput>;
  commentReplies?: InputMaybe<CommentsCommentRepliesInput>;
  debateResponses?: InputMaybe<CommentsDebateResponsesInput>;
  default?: InputMaybe<CommentDefaultViewInput>;
  defaultModeratorResponses?: InputMaybe<CommentsDefaultModeratorResponsesInput>;
  draftComments?: InputMaybe<CommentsDraftCommentsInput>;
  forumEventComments?: InputMaybe<CommentsForumEventCommentsInput>;
  latestSubforumDiscussion?: InputMaybe<CommentsLatestSubforumDiscussionInput>;
  legacyIdComment?: InputMaybe<CommentsLegacyIdCommentInput>;
  moderatorComments?: InputMaybe<CommentsModeratorCommentsInput>;
  nominations2018?: InputMaybe<CommentsNominations2018Input>;
  nominations2019?: InputMaybe<CommentsNominations2019Input>;
  postCommentsBest?: InputMaybe<CommentsPostCommentsBestInput>;
  postCommentsDeleted?: InputMaybe<CommentsPostCommentsDeletedInput>;
  postCommentsMagic?: InputMaybe<CommentsPostCommentsMagicInput>;
  postCommentsNew?: InputMaybe<CommentsPostCommentsNewInput>;
  postCommentsOld?: InputMaybe<CommentsPostCommentsOldInput>;
  postCommentsRecentReplies?: InputMaybe<CommentsPostCommentsRecentRepliesInput>;
  postCommentsTop?: InputMaybe<CommentsPostCommentsTopInput>;
  postLWComments?: InputMaybe<CommentsPostLWCommentsInput>;
  postsItemComments?: InputMaybe<CommentsPostsItemCommentsInput>;
  profileComments?: InputMaybe<CommentsProfileCommentsInput>;
  profileRecentComments?: InputMaybe<CommentsProfileRecentCommentsInput>;
  questionAnswers?: InputMaybe<CommentsQuestionAnswersInput>;
  recentComments?: InputMaybe<CommentsRecentCommentsInput>;
  recentDebateResponses?: InputMaybe<CommentsRecentDebateResponsesInput>;
  recentDiscussionThread?: InputMaybe<CommentsRecentDiscussionThreadInput>;
  rejected?: InputMaybe<CommentsRejectedInput>;
  repliesToAnswer?: InputMaybe<CommentsRepliesToAnswerInput>;
  repliesToCommentThread?: InputMaybe<CommentsRepliesToCommentThreadInput>;
  repliesToCommentThreadIncludingRoot?: InputMaybe<CommentsRepliesToCommentThreadIncludingRootInput>;
  reviews?: InputMaybe<CommentsReviewsInput>;
  reviews2018?: InputMaybe<CommentsReviews2018Input>;
  reviews2019?: InputMaybe<CommentsReviews2019Input>;
  rss?: InputMaybe<CommentsRssInput>;
  shortform?: InputMaybe<CommentsShortformInput>;
  shortformFrontpage?: InputMaybe<CommentsShortformFrontpageInput>;
  shortformLatestChildren?: InputMaybe<CommentsShortformLatestChildrenInput>;
  sunshineNewCommentsList?: InputMaybe<CommentsSunshineNewCommentsListInput>;
  sunshineNewUsersComments?: InputMaybe<CommentsSunshineNewUsersCommentsInput>;
  tagDiscussionComments?: InputMaybe<CommentsTagDiscussionCommentsInput>;
  tagSubforumComments?: InputMaybe<CommentsTagSubforumCommentsInput>;
  topShortform?: InputMaybe<CommentsTopShortformInput>;
};

export type CommentSortingMode =
  | 'groupByPost'
  | 'magic'
  | 'new'
  | 'newest'
  | 'old'
  | 'oldest'
  | 'recentComments'
  | 'recentDiscussion'
  | 'top';

export type CommentsAfPostCommentsTopInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAfRecentDiscussionThreadInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAfSubmissionsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAlignmentSuggestedCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAllCommentsDeletedInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAllRecentCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsAnswersAndRepliesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsCheckedByModGPTInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsCommentRepliesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  parentCommentId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsDebateResponsesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsDefaultModeratorResponsesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsDraftCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  drafts?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsForumEventCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  forumEventId?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsLatestSubforumDiscussionInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  profileTagIds?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsLegacyIdCommentInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsModeratorCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsNominations2018Input = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<CommentSortingMode>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsNominations2019Input = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<CommentSortingMode>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsBestInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsDeletedInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsMagicInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsNewInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsOldInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsRecentRepliesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostCommentsTopInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostLWCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsPostsItemCommentsInput = {
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsProfileCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  drafts?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsProfileRecentCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsQuestionAnswersInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRecentCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRecentDebateResponsesInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRecentDiscussionThreadInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRejectedInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRepliesToAnswerInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  parentAnswerId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRepliesToCommentThreadIncludingRootInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  topLevelCommentId: Scalars['String']['input'];
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRepliesToCommentThreadInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  topLevelCommentId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsReviews2018Input = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<CommentSortingMode>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsReviews2019Input = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<CommentSortingMode>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsReviewsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  reviewYear?: InputMaybe<Scalars['Int']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsRssInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsShortformFrontpageInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  maxAgeDays?: InputMaybe<Scalars['Int']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  relevantTagId?: InputMaybe<Scalars['String']['input']>;
  showCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsShortformInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsShortformLatestChildrenInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  topLevelCommentId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsSunshineNewCommentsListInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  limit?: InputMaybe<Scalars['String']['input']>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsSunshineNewUsersCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsTagDiscussionCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsTagSubforumCommentsInput = {
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsTopShortformInput = {
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  commentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  minimumKarma?: InputMaybe<Scalars['Int']['input']>;
  shortformFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CommentsWithReactsResult = {
  __typename?: 'CommentsWithReactsResult';
  results: Array<Comment>;
};

export type ContentType = {
  __typename?: 'ContentType';
  data: Scalars['ContentTypeData']['output'];
  type: Scalars['String']['output'];
};

export type ContentTypeInput = {
  data: Scalars['ContentTypeData']['input'];
  type: Scalars['String']['input'];
};

export type Conversation = {
  __typename?: 'Conversation';
  _id: Scalars['String']['output'];
  af: Maybe<Scalars['Boolean']['output']>;
  archivedBy: Array<User>;
  archivedByIds: Array<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  hasUnreadMessages: Maybe<Scalars['Boolean']['output']>;
  latestActivity: Maybe<Scalars['Date']['output']>;
  latestMessage: Maybe<Message>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  messageCount: Scalars['Float']['output'];
  moderator: Maybe<Scalars['Boolean']['output']>;
  participantIds: Maybe<Array<Scalars['String']['output']>>;
  participants: Maybe<Array<User>>;
  schemaVersion: Scalars['Float']['output'];
  title: Maybe<Scalars['String']['output']>;
};

export type ConversationOutput = {
  __typename?: 'ConversationOutput';
  data: Maybe<Conversation>;
};

export type ConversationSelector = {
  default?: InputMaybe<EmptyViewInput>;
  moderatorConversations?: InputMaybe<ConversationsModeratorConversationsInput>;
  userConversations?: InputMaybe<ConversationsUserConversationsInput>;
  userConversationsAll?: InputMaybe<ConversationsUserConversationsAllInput>;
  userGroupUntitledConversations?: InputMaybe<ConversationsUserGroupUntitledConversationsInput>;
};

export type ConversationsModeratorConversationsInput = {
  showArchive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ConversationsUserConversationsAllInput = {
  showArchive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ConversationsUserConversationsInput = {
  showArchive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ConversationsUserGroupUntitledConversationsInput = {
  moderator?: InputMaybe<Scalars['String']['input']>;
  participantIds?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateAdvisorRequestDataInput = {
  interestedInMetaculus?: InputMaybe<Scalars['Boolean']['input']>;
  jobAds?: InputMaybe<Scalars['JSON']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  userId: Scalars['String']['input'];
};

export type CreateAdvisorRequestInput = {
  data: CreateAdvisorRequestDataInput;
};

export type CreateBookDataInput = {
  collectionId: Scalars['String']['input'];
  contents?: InputMaybe<CreateRevisionDataInput>;
  displaySequencesAsGrid?: InputMaybe<Scalars['Boolean']['input']>;
  hideProgressBar?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  number?: InputMaybe<Scalars['Float']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  showChapters?: InputMaybe<Scalars['Boolean']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  tocTitle?: InputMaybe<Scalars['String']['input']>;
};

export type CreateBookInput = {
  data: CreateBookDataInput;
};

export type CreateChapterDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  number?: InputMaybe<Scalars['Float']['input']>;
  postIds: Array<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type CreateChapterInput = {
  data: CreateChapterDataInput;
};

export type CreateCollectionDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  createdAt: Scalars['Date']['input'];
  firstPageLink?: InputMaybe<Scalars['String']['input']>;
  gridImageId?: InputMaybe<Scalars['String']['input']>;
  hideStartReadingButton?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  slug: Scalars['String']['input'];
  title: Scalars['String']['input'];
};

export type CreateCollectionInput = {
  data: CreateCollectionDataInput;
};

export type CreateCommentDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  afDate?: InputMaybe<Scalars['Date']['input']>;
  agentFoundationsId?: InputMaybe<Scalars['String']['input']>;
  answer?: InputMaybe<Scalars['Boolean']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  debateResponse?: InputMaybe<Scalars['Boolean']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByUserId?: InputMaybe<Scalars['String']['input']>;
  deletedDate?: InputMaybe<Scalars['Date']['input']>;
  deletedPublic?: InputMaybe<Scalars['Boolean']['input']>;
  deletedReason?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  forumEventId?: InputMaybe<Scalars['String']['input']>;
  forumEventMetadata?: InputMaybe<Scalars['JSON']['input']>;
  hideKarma?: InputMaybe<Scalars['Boolean']['input']>;
  hideModeratorHat?: InputMaybe<Scalars['Boolean']['input']>;
  isPinnedOnProfile?: InputMaybe<Scalars['Boolean']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  legacyParentId?: InputMaybe<Scalars['String']['input']>;
  legacyPoll?: InputMaybe<Scalars['Boolean']['input']>;
  modGPTAnalysis?: InputMaybe<Scalars['String']['input']>;
  modGPTRecommendation?: InputMaybe<Scalars['String']['input']>;
  moderatorHat?: InputMaybe<Scalars['Boolean']['input']>;
  needsReview?: InputMaybe<Scalars['Boolean']['input']>;
  nominatedForReview?: InputMaybe<Scalars['String']['input']>;
  originalDialogueId?: InputMaybe<Scalars['String']['input']>;
  parentAnswerId?: InputMaybe<Scalars['String']['input']>;
  parentCommentId?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  promotedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejected?: InputMaybe<Scalars['Boolean']['input']>;
  rejectedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejectedReason?: InputMaybe<Scalars['String']['input']>;
  relevantTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  retracted?: InputMaybe<Scalars['Boolean']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  reviewingForReview?: InputMaybe<Scalars['String']['input']>;
  shortform?: InputMaybe<Scalars['Boolean']['input']>;
  shortformFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  spam?: InputMaybe<Scalars['Boolean']['input']>;
  subforumStickyPriority?: InputMaybe<Scalars['Float']['input']>;
  tagCommentType?: InputMaybe<TagCommentType>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  topLevelCommentId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateCommentInput = {
  data: CreateCommentDataInput;
};

export type CreateCommentModeratorActionDataInput = {
  commentId?: InputMaybe<Scalars['String']['input']>;
  endedAt?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type: Scalars['String']['input'];
};

export type CreateCommentModeratorActionInput = {
  data: CreateCommentModeratorActionDataInput;
};

export type CreateConversationDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  archivedByIds?: InputMaybe<Array<Scalars['String']['input']>>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  moderator?: InputMaybe<Scalars['Boolean']['input']>;
  participantIds?: InputMaybe<Array<Scalars['String']['input']>>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type CreateConversationInput = {
  data: CreateConversationDataInput;
};

export type CreateCurationNoticeDataInput = {
  commentId?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  postId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type CreateCurationNoticeInput = {
  data: CreateCurationNoticeDataInput;
};

export type CreateDigestDataInput = {
  endDate?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  num: Scalars['Float']['input'];
  onsiteImageId?: InputMaybe<Scalars['String']['input']>;
  onsitePrimaryColor?: InputMaybe<Scalars['String']['input']>;
  publishedDate?: InputMaybe<Scalars['Date']['input']>;
  startDate: Scalars['Date']['input'];
};

export type CreateDigestInput = {
  data: CreateDigestDataInput;
};

export type CreateDigestPostDataInput = {
  digestId: Scalars['String']['input'];
  emailDigestStatus?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  onsiteDigestStatus?: InputMaybe<Scalars['String']['input']>;
  postId: Scalars['String']['input'];
};

export type CreateDigestPostInput = {
  data: CreateDigestPostDataInput;
};

export type CreateElectionCandidateDataInput = {
  amountRaised?: InputMaybe<Scalars['Float']['input']>;
  description: Scalars['String']['input'];
  electionName: Scalars['String']['input'];
  fundraiserLink?: InputMaybe<Scalars['String']['input']>;
  gwwcId?: InputMaybe<Scalars['String']['input']>;
  gwwcLink?: InputMaybe<Scalars['String']['input']>;
  href: Scalars['String']['input'];
  isElectionFundraiser?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  logoSrc: Scalars['String']['input'];
  name: Scalars['String']['input'];
  tagId: Scalars['String']['input'];
  targetAmount?: InputMaybe<Scalars['Float']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateElectionCandidateInput = {
  data: CreateElectionCandidateDataInput;
};

export type CreateElectionVoteDataInput = {
  compareState?: InputMaybe<Scalars['JSON']['input']>;
  electionName: Scalars['String']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  submissionComments?: InputMaybe<Scalars['JSON']['input']>;
  submittedAt?: InputMaybe<Scalars['Date']['input']>;
  userExplanation?: InputMaybe<Scalars['String']['input']>;
  userId: Scalars['String']['input'];
  userOtherComments?: InputMaybe<Scalars['String']['input']>;
  vote?: InputMaybe<Scalars['JSON']['input']>;
};

export type CreateElectionVoteInput = {
  data: CreateElectionVoteDataInput;
};

export type CreateElicitQuestionDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  resolution?: InputMaybe<Scalars['String']['input']>;
  resolvesBy?: InputMaybe<Scalars['Date']['input']>;
  title: Scalars['String']['input'];
};

export type CreateElicitQuestionInput = {
  data: CreateElicitQuestionDataInput;
};

export type CreateForumEventDataInput = {
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  bannerTextColor?: InputMaybe<Scalars['String']['input']>;
  commentId?: InputMaybe<Scalars['String']['input']>;
  commentPrompt?: InputMaybe<Scalars['String']['input']>;
  contrastColor?: InputMaybe<Scalars['String']['input']>;
  customComponent?: InputMaybe<ForumEventCustomComponent>;
  darkColor?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
  eventFormat?: InputMaybe<ForumEventFormat>;
  frontpageDescription?: InputMaybe<CreateRevisionDataInput>;
  frontpageDescriptionMobile?: InputMaybe<CreateRevisionDataInput>;
  includesPoll?: InputMaybe<Scalars['Boolean']['input']>;
  isGlobal?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  lightColor?: InputMaybe<Scalars['String']['input']>;
  maxStickersPerUser?: InputMaybe<Scalars['Float']['input']>;
  pollAgreeWording?: InputMaybe<Scalars['String']['input']>;
  pollDisagreeWording?: InputMaybe<Scalars['String']['input']>;
  pollQuestion?: InputMaybe<CreateRevisionDataInput>;
  postId?: InputMaybe<Scalars['String']['input']>;
  postPageDescription?: InputMaybe<CreateRevisionDataInput>;
  publicData?: InputMaybe<Scalars['JSON']['input']>;
  startDate: Scalars['Date']['input'];
  tagId?: InputMaybe<Scalars['String']['input']>;
  title: Scalars['String']['input'];
};

export type CreateForumEventInput = {
  data: CreateForumEventDataInput;
};

export type CreateJargonTermDataInput = {
  altTerms: Array<Scalars['String']['input']>;
  approved?: InputMaybe<Scalars['Boolean']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  postId: Scalars['String']['input'];
  term: Scalars['String']['input'];
};

export type CreateJargonTermInput = {
  data: CreateJargonTermDataInput;
};

export type CreateLWEventDataInput = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  important?: InputMaybe<Scalars['Boolean']['input']>;
  intercom?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name: Scalars['String']['input'];
  properties?: InputMaybe<Scalars['JSON']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateLWEventInput = {
  data: CreateLWEventDataInput;
};

export type CreateLocalgroupDataInput = {
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  categories?: InputMaybe<Array<Scalars['String']['input']>>;
  contactInfo?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  facebookLink?: InputMaybe<Scalars['String']['input']>;
  facebookPageLink?: InputMaybe<Scalars['String']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  inactive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  lastActivity?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  meetupLink?: InputMaybe<Scalars['String']['input']>;
  name: Scalars['String']['input'];
  nameInAnotherLanguage?: InputMaybe<Scalars['String']['input']>;
  organizerIds: Array<Scalars['String']['input']>;
  slackLink?: InputMaybe<Scalars['String']['input']>;
  types: Array<Scalars['String']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type CreateLocalgroupInput = {
  data: CreateLocalgroupDataInput;
};

export type CreateMessageDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  conversationId: Scalars['String']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  noEmail?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateMessageInput = {
  data: CreateMessageDataInput;
};

export type CreateModerationTemplateDataInput = {
  collectionName: ModerationTemplateType;
  contents?: InputMaybe<CreateRevisionDataInput>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Float']['input']>;
};

export type CreateModerationTemplateInput = {
  data: CreateModerationTemplateDataInput;
};

export type CreateModeratorActionDataInput = {
  endedAt?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type: ModeratorActionType;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateModeratorActionInput = {
  data: CreateModeratorActionDataInput;
};

export type CreateMultiDocumentDataInput = {
  collectionName: MultiDocumentCollectionName;
  contents?: InputMaybe<CreateRevisionDataInput>;
  fieldName: MultiDocumentFieldName;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  parentDocumentId: Scalars['String']['input'];
  slug?: InputMaybe<Scalars['String']['input']>;
  tabSubtitle?: InputMaybe<Scalars['String']['input']>;
  tabTitle: Scalars['String']['input'];
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateMultiDocumentInput = {
  data: CreateMultiDocumentDataInput;
};

export type CreatePetrovDayActionDataInput = {
  actionType: Scalars['String']['input'];
  data?: InputMaybe<Scalars['JSON']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  userId: Scalars['String']['input'];
};

export type CreatePetrovDayActionInput = {
  data: CreatePetrovDayActionDataInput;
};

export type CreatePodcastEpisodeDataInput = {
  episodeLink: Scalars['String']['input'];
  externalEpisodeId: Scalars['String']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  podcastId?: InputMaybe<Scalars['String']['input']>;
  title: Scalars['String']['input'];
};

export type CreatePodcastEpisodeInput = {
  data: CreatePodcastEpisodeDataInput;
};

export type CreatePostDataInput = {
  activateRSVPs?: InputMaybe<Scalars['Boolean']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  afDate?: InputMaybe<Scalars['Date']['input']>;
  afSticky?: InputMaybe<Scalars['Boolean']['input']>;
  agentFoundationsId?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  autoFrontpage?: InputMaybe<Scalars['String']['input']>;
  bannedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  canonicalBookId?: InputMaybe<Scalars['String']['input']>;
  canonicalCollectionSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalNextPostSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalPrevPostSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalSequenceId?: InputMaybe<Scalars['String']['input']>;
  canonicalSource?: InputMaybe<Scalars['String']['input']>;
  coauthorStatuses?: InputMaybe<Array<CoauthorStatusInput>>;
  coauthorUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  collabEditorDialogue?: InputMaybe<Scalars['Boolean']['input']>;
  collectionTitle?: InputMaybe<Scalars['String']['input']>;
  commentSortOrder?: InputMaybe<Scalars['String']['input']>;
  commentsLocked?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLockedToAccountsCreatedAfter?: InputMaybe<Scalars['Date']['input']>;
  contactInfo?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  curatedDate?: InputMaybe<Scalars['Date']['input']>;
  customHighlight?: InputMaybe<CreateRevisionDataInput>;
  defaultRecommendation?: InputMaybe<Scalars['Boolean']['input']>;
  disableRecommendation?: InputMaybe<Scalars['Boolean']['input']>;
  disableSidenotes?: InputMaybe<Scalars['Boolean']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  endTime?: InputMaybe<Scalars['Date']['input']>;
  eventImageId?: InputMaybe<Scalars['String']['input']>;
  eventRegistrationLink?: InputMaybe<Scalars['String']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  facebookLink?: InputMaybe<Scalars['String']['input']>;
  feedId?: InputMaybe<Scalars['String']['input']>;
  feedLink?: InputMaybe<Scalars['String']['input']>;
  fmCrosspost?: InputMaybe<CrosspostInput>;
  forceAllowType3Audio?: InputMaybe<Scalars['Boolean']['input']>;
  frontpageDate?: InputMaybe<Scalars['Date']['input']>;
  generateDraftJargon?: InputMaybe<Scalars['Boolean']['input']>;
  globalEvent?: InputMaybe<Scalars['Boolean']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hasCoauthorPermission?: InputMaybe<Scalars['Boolean']['input']>;
  hiddenRelatedQuestion?: InputMaybe<Scalars['Boolean']['input']>;
  hideAuthor?: InputMaybe<Scalars['Boolean']['input']>;
  hideCommentKarma?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromPopularComments?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromRecentDiscussions?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageComments?: InputMaybe<Scalars['Boolean']['input']>;
  ignoreRateLimits?: InputMaybe<Scalars['Boolean']['input']>;
  isEvent?: InputMaybe<Scalars['Boolean']['input']>;
  joinEventLink?: InputMaybe<Scalars['String']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  legacySpam?: InputMaybe<Scalars['Boolean']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  manifoldReviewMarketId?: InputMaybe<Scalars['String']['input']>;
  meetupLink?: InputMaybe<Scalars['String']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  metaDate?: InputMaybe<Scalars['Date']['input']>;
  metaSticky?: InputMaybe<Scalars['Boolean']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  moderationStyle?: InputMaybe<Scalars['String']['input']>;
  nextDayReminderSent?: InputMaybe<Scalars['Boolean']['input']>;
  noIndex?: InputMaybe<Scalars['Boolean']['input']>;
  onlineEvent?: InputMaybe<Scalars['Boolean']['input']>;
  onlyVisibleToEstablishedAccounts?: InputMaybe<Scalars['Boolean']['input']>;
  onlyVisibleToLoggedIn?: InputMaybe<Scalars['Boolean']['input']>;
  organizerIds?: InputMaybe<Array<Scalars['String']['input']>>;
  originalPostRelationSourceId?: InputMaybe<Scalars['String']['input']>;
  podcastEpisodeId?: InputMaybe<Scalars['String']['input']>;
  postCategory?: InputMaybe<PostCategory>;
  postedAt?: InputMaybe<Scalars['Date']['input']>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  readTimeMinutesOverride?: InputMaybe<Scalars['Float']['input']>;
  rejected?: InputMaybe<Scalars['Boolean']['input']>;
  rejectedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejectedReason?: InputMaybe<Scalars['String']['input']>;
  reviewForAlignmentUserId?: InputMaybe<Scalars['String']['input']>;
  reviewForCuratedUserId?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shareWithUsers?: InputMaybe<Array<Scalars['String']['input']>>;
  sharingSettings?: InputMaybe<Scalars['JSON']['input']>;
  shortform?: InputMaybe<Scalars['Boolean']['input']>;
  sideCommentVisibility?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  socialPreview?: InputMaybe<SocialPreviewInput>;
  socialPreviewImageAutoUrl?: InputMaybe<Scalars['String']['input']>;
  socialPreviewImageId?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['Date']['input']>;
  status?: InputMaybe<Scalars['Float']['input']>;
  sticky?: InputMaybe<Scalars['Boolean']['input']>;
  stickyPriority?: InputMaybe<Scalars['Int']['input']>;
  subforumTagId?: InputMaybe<Scalars['String']['input']>;
  submitToFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  suggestForAlignmentUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  suggestForCuratedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  swrCachingEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  tagRelevance?: InputMaybe<Scalars['JSON']['input']>;
  title: Scalars['String']['input'];
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  unlisted?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  wasEverUndrafted?: InputMaybe<Scalars['Boolean']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type CreatePostInput = {
  data: CreatePostDataInput;
};

export type CreateRSSFeedDataInput = {
  displayFullContent?: InputMaybe<Scalars['Boolean']['input']>;
  importAsDraft?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  nickname: Scalars['String']['input'];
  ownedByUser?: InputMaybe<Scalars['Boolean']['input']>;
  rawFeed?: InputMaybe<Scalars['JSON']['input']>;
  setCanonicalUrl?: InputMaybe<Scalars['Boolean']['input']>;
  url: Scalars['String']['input'];
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateRSSFeedInput = {
  data: CreateRSSFeedDataInput;
};

export type CreateReportDataInput = {
  claimedUserId?: InputMaybe<Scalars['String']['input']>;
  commentId?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  link: Scalars['String']['input'];
  postId?: InputMaybe<Scalars['String']['input']>;
  reportedAsSpam?: InputMaybe<Scalars['Boolean']['input']>;
  reportedUserId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateReportInput = {
  data: CreateReportDataInput;
};

export type CreateRevisionDataInput = {
  commitMessage?: InputMaybe<Scalars['String']['input']>;
  dataWithDiscardedSuggestions?: InputMaybe<Scalars['JSON']['input']>;
  googleDocMetadata?: InputMaybe<Scalars['JSON']['input']>;
  originalContents: ContentTypeInput;
  updateType?: InputMaybe<Scalars['String']['input']>;
};

export type CreateSequenceDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  canonicalCollectionSlug?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  curatedOrder?: InputMaybe<Scalars['Float']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  gridImageId?: InputMaybe<Scalars['String']['input']>;
  hidden?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromAuthorPage?: InputMaybe<Scalars['Boolean']['input']>;
  isDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  title: Scalars['String']['input'];
  userId?: InputMaybe<Scalars['String']['input']>;
  userProfileOrder?: InputMaybe<Scalars['Float']['input']>;
};

export type CreateSequenceInput = {
  data: CreateSequenceDataInput;
};

export type CreateSplashArtCoordinateDataInput = {
  leftFlipped?: InputMaybe<Scalars['Boolean']['input']>;
  leftHeightPct: Scalars['Float']['input'];
  leftWidthPct: Scalars['Float']['input'];
  leftXPct: Scalars['Float']['input'];
  leftYPct: Scalars['Float']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  middleFlipped?: InputMaybe<Scalars['Boolean']['input']>;
  middleHeightPct: Scalars['Float']['input'];
  middleWidthPct: Scalars['Float']['input'];
  middleXPct: Scalars['Float']['input'];
  middleYPct: Scalars['Float']['input'];
  reviewWinnerArtId: Scalars['String']['input'];
  rightFlipped: Scalars['Boolean']['input'];
  rightHeightPct: Scalars['Float']['input'];
  rightWidthPct: Scalars['Float']['input'];
  rightXPct: Scalars['Float']['input'];
  rightYPct: Scalars['Float']['input'];
};

export type CreateSplashArtCoordinateInput = {
  data: CreateSplashArtCoordinateDataInput;
};

export type CreateSpotlightDataInput = {
  customSubtitle?: InputMaybe<Scalars['String']['input']>;
  customTitle?: InputMaybe<Scalars['String']['input']>;
  description?: InputMaybe<CreateRevisionDataInput>;
  documentId: Scalars['String']['input'];
  documentType: SpotlightDocumentType;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  duration: Scalars['Float']['input'];
  headerTitle?: InputMaybe<Scalars['String']['input']>;
  headerTitleLeftColor?: InputMaybe<Scalars['String']['input']>;
  headerTitleRightColor?: InputMaybe<Scalars['String']['input']>;
  imageFade?: InputMaybe<Scalars['Boolean']['input']>;
  imageFadeColor?: InputMaybe<Scalars['String']['input']>;
  lastPromotedAt: Scalars['Date']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  position?: InputMaybe<Scalars['Float']['input']>;
  showAuthor?: InputMaybe<Scalars['Boolean']['input']>;
  spotlightDarkImageId?: InputMaybe<Scalars['String']['input']>;
  spotlightImageId?: InputMaybe<Scalars['String']['input']>;
  spotlightSplashImageUrl?: InputMaybe<Scalars['String']['input']>;
  subtitleUrl?: InputMaybe<Scalars['String']['input']>;
};

export type CreateSpotlightInput = {
  data: CreateSpotlightDataInput;
};

export type CreateSubscriptionDataInput = {
  collectionName: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  state: Scalars['String']['input'];
  type: Scalars['String']['input'];
};

export type CreateSubscriptionInput = {
  data: CreateSubscriptionDataInput;
};

export type CreateSurveyDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name: Scalars['String']['input'];
};

export type CreateSurveyInput = {
  data: CreateSurveyDataInput;
};

export type CreateSurveyQuestionDataInput = {
  format: SurveyQuestionFormat;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  order: Scalars['Float']['input'];
  question: Scalars['String']['input'];
  surveyId: Scalars['String']['input'];
};

export type CreateSurveyQuestionInput = {
  data: CreateSurveyQuestionDataInput;
};

export type CreateSurveyResponseDataInput = {
  clientId: Scalars['String']['input'];
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  response: Scalars['JSON']['input'];
  surveyId: Scalars['String']['input'];
  surveyScheduleId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type CreateSurveyResponseInput = {
  data: CreateSurveyResponseDataInput;
};

export type CreateSurveyScheduleDataInput = {
  clientIds?: InputMaybe<Array<Scalars['String']['input']>>;
  deactivated?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
  impressionsLimit?: InputMaybe<Scalars['Float']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  maxKarma?: InputMaybe<Scalars['Float']['input']>;
  maxVisitorPercentage?: InputMaybe<Scalars['Float']['input']>;
  minKarma?: InputMaybe<Scalars['Float']['input']>;
  name: Scalars['String']['input'];
  startDate?: InputMaybe<Scalars['Date']['input']>;
  surveyId: Scalars['String']['input'];
  target: SurveyScheduleTarget;
};

export type CreateSurveyScheduleInput = {
  data: CreateSurveyScheduleDataInput;
};

export type CreateTagDataInput = {
  adminOnly?: InputMaybe<Scalars['Boolean']['input']>;
  autoTagModel?: InputMaybe<Scalars['String']['input']>;
  autoTagPrompt?: InputMaybe<Scalars['String']['input']>;
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  canEditUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  canVoteOnRels?: InputMaybe<Array<TagRelVoteGroup>>;
  core?: InputMaybe<Scalars['Boolean']['input']>;
  coreTagId?: InputMaybe<Scalars['String']['input']>;
  defaultOrder?: InputMaybe<Scalars['Float']['input']>;
  description?: InputMaybe<CreateRevisionDataInput>;
  descriptionTruncationCount?: InputMaybe<Scalars['Float']['input']>;
  forceAllowType3Audio?: InputMaybe<Scalars['Boolean']['input']>;
  introSequenceId?: InputMaybe<Scalars['String']['input']>;
  isPostType?: InputMaybe<Scalars['Boolean']['input']>;
  isSubforum?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  name: Scalars['String']['input'];
  parentTagId?: InputMaybe<Scalars['String']['input']>;
  postsDefaultSortOrder?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  squareImageId?: InputMaybe<Scalars['String']['input']>;
  subTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  subforumIntroPostId?: InputMaybe<Scalars['String']['input']>;
  subforumModeratorIds?: InputMaybe<Array<Scalars['String']['input']>>;
  subforumWelcomeText?: InputMaybe<CreateRevisionDataInput>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  suggestedAsFilter?: InputMaybe<Scalars['Boolean']['input']>;
  tagFlagsIds?: InputMaybe<Array<Scalars['String']['input']>>;
  wikiGrade?: InputMaybe<Scalars['Int']['input']>;
  wikiOnly?: InputMaybe<Scalars['Boolean']['input']>;
};

export type CreateTagFlagDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name: Scalars['String']['input'];
  order?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type CreateTagFlagInput = {
  data: CreateTagFlagDataInput;
};

export type CreateTagInput = {
  data: CreateTagDataInput;
};

export type CreateUltraFeedEventDataInput = {
  collectionName: UltraFeedEventCollectionName;
  documentId: Scalars['String']['input'];
  event: Scalars['JSON']['input'];
  eventType: UltraFeedEventEventType;
  feedItemId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type CreateUltraFeedEventInput = {
  data: CreateUltraFeedEventDataInput;
};

export type CreateUserDataInput = {
  acceptedTos?: InputMaybe<Scalars['Boolean']['input']>;
  acknowledgedNewUserGuidelines?: InputMaybe<Scalars['Boolean']['input']>;
  afSubmittedApplication?: InputMaybe<Scalars['Boolean']['input']>;
  allCommentingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsFilter?: InputMaybe<Scalars['String']['input']>;
  allPostsHideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsIncludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsOpenSettings?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsShowLowKarma?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsSorting?: InputMaybe<Scalars['String']['input']>;
  allPostsTimeframe?: InputMaybe<Scalars['String']['input']>;
  allowDatadogSessionReplay?: InputMaybe<Scalars['Boolean']['input']>;
  autoSubscribeAsOrganizer?: InputMaybe<Scalars['Boolean']['input']>;
  auto_subscribe_to_my_comments?: InputMaybe<Scalars['Boolean']['input']>;
  auto_subscribe_to_my_posts?: InputMaybe<Scalars['Boolean']['input']>;
  banned?: InputMaybe<Scalars['Date']['input']>;
  bannedPersonalUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  bannedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  biography?: InputMaybe<CreateRevisionDataInput>;
  blueskyProfileURL?: InputMaybe<Scalars['String']['input']>;
  careerStage?: InputMaybe<Array<Scalars['String']['input']>>;
  collapseModerationGuidelines?: InputMaybe<Scalars['Boolean']['input']>;
  commentSorting?: InputMaybe<Scalars['String']['input']>;
  commentingOnOtherUsersDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  conversationsDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  criticismTipsDismissed?: InputMaybe<Scalars['Boolean']['input']>;
  currentFrontpageFilter?: InputMaybe<Scalars['String']['input']>;
  deleteContent?: InputMaybe<Scalars['Boolean']['input']>;
  displayName: Scalars['String']['input'];
  draftsListShowArchived?: InputMaybe<Scalars['Boolean']['input']>;
  draftsListShowShared?: InputMaybe<Scalars['Boolean']['input']>;
  draftsListSorting?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  emailSubscribedToCurated?: InputMaybe<Scalars['Boolean']['input']>;
  expandedFrontpageSections?: InputMaybe<ExpandedFrontpageSectionsSettingsInput>;
  facebookProfileURL?: InputMaybe<Scalars['String']['input']>;
  fmCrosspostUserId?: InputMaybe<Scalars['String']['input']>;
  frontpageFilterSettings?: InputMaybe<Scalars['JSON']['input']>;
  frontpageSelectedTab?: InputMaybe<Scalars['String']['input']>;
  githubProfileURL?: InputMaybe<Scalars['String']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  groups?: InputMaybe<Array<Scalars['String']['input']>>;
  hideActiveDialogueUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hideCommunitySection?: InputMaybe<Scalars['Boolean']['input']>;
  hideDialogueFacilitation?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromPeopleDirectory?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBook2019Ad?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBook2020Ad?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBookAd?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageFilterSettingsDesktop?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageMap?: InputMaybe<Scalars['Boolean']['input']>;
  hideHomeRHS?: InputMaybe<Scalars['Boolean']['input']>;
  hideIntercom?: InputMaybe<Scalars['Boolean']['input']>;
  hideJobAdUntil?: InputMaybe<Scalars['Date']['input']>;
  hideMeetupsPoke?: InputMaybe<Scalars['Boolean']['input']>;
  hideNavigationSidebar?: InputMaybe<Scalars['Boolean']['input']>;
  hidePostsRecommendations?: InputMaybe<Scalars['Boolean']['input']>;
  hideSubscribePoke?: InputMaybe<Scalars['Boolean']['input']>;
  hideSunshineSidebar?: InputMaybe<Scalars['Boolean']['input']>;
  hideTaggingProgressBar?: InputMaybe<Scalars['Boolean']['input']>;
  howICanHelpOthers?: InputMaybe<CreateRevisionDataInput>;
  howOthersCanHelpMe?: InputMaybe<CreateRevisionDataInput>;
  inactiveSurveyEmailSentAt?: InputMaybe<Scalars['Date']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  karmaChangeBatchStart?: InputMaybe<Scalars['Date']['input']>;
  karmaChangeLastOpened?: InputMaybe<Scalars['Date']['input']>;
  karmaChangeNotifierSettings?: InputMaybe<Scalars['JSON']['input']>;
  lastNotificationsCheck?: InputMaybe<Scalars['Date']['input']>;
  lastUsedTimezone?: InputMaybe<Scalars['String']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  linkedinProfileURL?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  mapLocation?: InputMaybe<Scalars['JSON']['input']>;
  mapMarkerText?: InputMaybe<Scalars['String']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  moderationStyle?: InputMaybe<Scalars['String']['input']>;
  moderatorAssistance?: InputMaybe<Scalars['Boolean']['input']>;
  nearbyEventsNotifications?: InputMaybe<Scalars['Boolean']['input']>;
  nearbyEventsNotificationsLocation?: InputMaybe<Scalars['JSON']['input']>;
  nearbyEventsNotificationsRadius?: InputMaybe<Scalars['Float']['input']>;
  nearbyPeopleNotificationThreshold?: InputMaybe<Scalars['Float']['input']>;
  noCollapseCommentsFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  noCollapseCommentsPosts?: InputMaybe<Scalars['Boolean']['input']>;
  noExpandUnreadCommentsReview?: InputMaybe<Scalars['Boolean']['input']>;
  noKibitz?: InputMaybe<Scalars['Boolean']['input']>;
  noSingleLineComments?: InputMaybe<Scalars['Boolean']['input']>;
  notificationAddedAsCoauthor?: InputMaybe<Scalars['JSON']['input']>;
  notificationAlignmentSubmissionApproved?: InputMaybe<Scalars['JSON']['input']>;
  notificationCommentsOnDraft?: InputMaybe<Scalars['JSON']['input']>;
  notificationCommentsOnSubscribedPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationDebateCommentsOnSubscribedPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationDebateReplies?: InputMaybe<Scalars['JSON']['input']>;
  notificationDialogueMatch?: InputMaybe<Scalars['JSON']['input']>;
  notificationDialogueMessages?: InputMaybe<Scalars['JSON']['input']>;
  notificationEventInRadius?: InputMaybe<Scalars['JSON']['input']>;
  notificationGroupAdministration?: InputMaybe<Scalars['JSON']['input']>;
  notificationKarmaPowersGained?: InputMaybe<Scalars['JSON']['input']>;
  notificationNewDialogueChecks?: InputMaybe<Scalars['JSON']['input']>;
  notificationNewMention?: InputMaybe<Scalars['JSON']['input']>;
  notificationPostsInGroups?: InputMaybe<Scalars['JSON']['input']>;
  notificationPostsNominatedReview?: InputMaybe<Scalars['JSON']['input']>;
  notificationPrivateMessage?: InputMaybe<Scalars['JSON']['input']>;
  notificationPublishedDialogueMessages?: InputMaybe<Scalars['JSON']['input']>;
  notificationRSVPs?: InputMaybe<Scalars['JSON']['input']>;
  notificationRepliesToMyComments?: InputMaybe<Scalars['JSON']['input']>;
  notificationRepliesToSubscribedComments?: InputMaybe<Scalars['JSON']['input']>;
  notificationSharedWithMe?: InputMaybe<Scalars['JSON']['input']>;
  notificationShortformContent?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubforumUnread?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedSequencePost?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedTagPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedUserComment?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedUserPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationYourTurnMatchForm?: InputMaybe<Scalars['JSON']['input']>;
  nullifyVotes?: InputMaybe<Scalars['Boolean']['input']>;
  optedInToDialogueFacilitation?: InputMaybe<Scalars['Boolean']['input']>;
  optedOutOfSurveys?: InputMaybe<Scalars['Boolean']['input']>;
  organization?: InputMaybe<Scalars['String']['input']>;
  organizerOfGroupIds?: InputMaybe<Array<Scalars['String']['input']>>;
  petrovOptOut?: InputMaybe<Scalars['Boolean']['input']>;
  postGlossariesPinned?: InputMaybe<Scalars['Boolean']['input']>;
  postingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  previousDisplayName?: InputMaybe<Scalars['String']['input']>;
  profileTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  profileUpdatedAt?: InputMaybe<Scalars['Date']['input']>;
  programParticipation?: InputMaybe<Array<Scalars['String']['input']>>;
  revealChecksToAdmins?: InputMaybe<Scalars['Boolean']['input']>;
  reviewForAlignmentForumUserId?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shortformFeedId?: InputMaybe<Scalars['String']['input']>;
  showCommunityInRecentDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  showDialoguesList?: InputMaybe<Scalars['Boolean']['input']>;
  showHideKarmaOption?: InputMaybe<Scalars['Boolean']['input']>;
  showMatches?: InputMaybe<Scalars['Boolean']['input']>;
  showMyDialogues?: InputMaybe<Scalars['Boolean']['input']>;
  showPostAuthorCard?: InputMaybe<Scalars['Boolean']['input']>;
  showRecommendedPartners?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  subforumPreferredLayout?: InputMaybe<SubforumPreferredLayout>;
  subscribedToDigest?: InputMaybe<Scalars['Boolean']['input']>;
  subscribedToNewsletter?: InputMaybe<Scalars['Boolean']['input']>;
  theme?: InputMaybe<Scalars['JSON']['input']>;
  twitterProfileURL?: InputMaybe<Scalars['String']['input']>;
  twitterProfileURLAdmin?: InputMaybe<Scalars['String']['input']>;
  unsubscribeFromAll?: InputMaybe<Scalars['Boolean']['input']>;
  userSurveyEmailSentAt?: InputMaybe<Scalars['Date']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  viewUnreviewedComments?: InputMaybe<Scalars['Boolean']['input']>;
  voteBanned?: InputMaybe<Scalars['Boolean']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
  whenConfirmationEmailSent?: InputMaybe<Scalars['Date']['input']>;
};

export type CreateUserEAGDetailDataInput = {
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
};

export type CreateUserEAGDetailInput = {
  data: CreateUserEAGDetailDataInput;
};

export type CreateUserInput = {
  data: CreateUserDataInput;
};

export type CreateUserJobAdDataInput = {
  adState: Scalars['String']['input'];
  jobName: Scalars['String']['input'];
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  reminderSetAt?: InputMaybe<Scalars['Date']['input']>;
  userId: Scalars['String']['input'];
};

export type CreateUserJobAdInput = {
  data: CreateUserJobAdDataInput;
};

export type CreateUserMostValuablePostDataInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  postId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type CreateUserMostValuablePostInput = {
  data: CreateUserMostValuablePostDataInput;
};

export type CreateUserRateLimitDataInput = {
  actionsPerInterval: Scalars['Float']['input'];
  endedAt: Scalars['Date']['input'];
  intervalLength: Scalars['Float']['input'];
  intervalUnit: UserRateLimitIntervalUnit;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type: UserRateLimitType;
  userId: Scalars['String']['input'];
};

export type CreateUserRateLimitInput = {
  data: CreateUserRateLimitDataInput;
};

export type CreateUserTagRelDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  subforumEmailNotifications?: InputMaybe<Scalars['Boolean']['input']>;
  subforumHideIntroPost?: InputMaybe<Scalars['Boolean']['input']>;
  subforumShowUnreadInSidebar?: InputMaybe<Scalars['Boolean']['input']>;
  tagId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};

export type CreateUserTagRelInput = {
  data: CreateUserTagRelDataInput;
};

export type CronHistory = {
  __typename?: 'CronHistory';
  _id: Maybe<Scalars['String']['output']>;
  finishedAt: Maybe<Scalars['Date']['output']>;
  intendedAt: Maybe<Scalars['Date']['output']>;
  name: Maybe<Scalars['String']['output']>;
  result: Maybe<Scalars['JSON']['output']>;
  startedAt: Maybe<Scalars['Date']['output']>;
};

export type CrossedKarmaThresholdResult = {
  __typename?: 'CrossedKarmaThresholdResult';
  results: Array<Post>;
};

export type CrosspostInput = {
  foreignPostId?: InputMaybe<Scalars['String']['input']>;
  hostedHere?: InputMaybe<Scalars['Boolean']['input']>;
  isCrosspost: Scalars['Boolean']['input'];
};

export type CrosspostOutput = {
  __typename?: 'CrosspostOutput';
  foreignPostId: Maybe<Scalars['String']['output']>;
  hostedHere: Maybe<Scalars['Boolean']['output']>;
  isCrosspost: Scalars['Boolean']['output'];
};

export type CuratedAndPopularThisWeekResult = {
  __typename?: 'CuratedAndPopularThisWeekResult';
  results: Array<Post>;
};

export type CurationEmail = {
  __typename?: 'CurationEmail';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  postId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type CurationNotice = {
  __typename?: 'CurationNotice';
  _id: Scalars['String']['output'];
  comment: Maybe<Comment>;
  commentId: Maybe<Scalars['String']['output']>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};


export type CurationNoticecontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type CurationNoticeOutput = {
  __typename?: 'CurationNoticeOutput';
  data: Maybe<CurationNotice>;
};

export type CurationNoticeSelector = {
  curationNoticesPage?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type DatabaseMetadata = {
  __typename?: 'DatabaseMetadata';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type DebouncerEvents = {
  __typename?: 'DebouncerEvents';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type DialogueCheck = {
  __typename?: 'DialogueCheck';
  _id: Scalars['String']['output'];
  checked: Maybe<Scalars['Boolean']['output']>;
  checkedAt: Maybe<Scalars['Date']['output']>;
  createdAt: Scalars['Date']['output'];
  hideInRecommendations: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  matchPreference: Maybe<DialogueMatchPreference>;
  reciprocalMatchPreference: Maybe<DialogueMatchPreference>;
  schemaVersion: Scalars['Float']['output'];
  targetUserId: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
};

export type DialogueCheckSelector = {
  default?: InputMaybe<EmptyViewInput>;
  userDialogueChecks?: InputMaybe<DialogueChecksUserDialogueChecksInput>;
  userTargetDialogueChecks?: InputMaybe<DialogueChecksUserTargetDialogueChecksInput>;
};

export type DialogueChecksUserDialogueChecksInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type DialogueChecksUserTargetDialogueChecksInput = {
  targetUserIds?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type DialogueMatchPreference = {
  __typename?: 'DialogueMatchPreference';
  _id: Scalars['String']['output'];
  asyncPreference: Maybe<Scalars['String']['output']>;
  calendlyLink: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  dialogueCheck: Maybe<DialogueCheck>;
  dialogueCheckId: Maybe<Scalars['String']['output']>;
  formatNotes: Maybe<Scalars['String']['output']>;
  generatedDialogueId: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  syncPreference: Maybe<Scalars['String']['output']>;
  topicNotes: Maybe<Scalars['String']['output']>;
  topicPreferences: Maybe<Array<Scalars['JSON']['output']>>;
};

export type DialogueMatchPreferenceSelector = {
  default?: InputMaybe<EmptyViewInput>;
  dialogueMatchPreferences?: InputMaybe<DialogueMatchPreferencesDialogueMatchPreferencesInput>;
};

export type DialogueMatchPreferencesDialogueMatchPreferencesInput = {
  dialogueCheckId?: InputMaybe<Scalars['String']['input']>;
};

export type Digest = {
  __typename?: 'Digest';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  endDate: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  num: Scalars['Float']['output'];
  onsiteImageId: Maybe<Scalars['String']['output']>;
  onsitePrimaryColor: Maybe<Scalars['String']['output']>;
  publishedDate: Maybe<Scalars['Date']['output']>;
  schemaVersion: Scalars['Float']['output'];
  startDate: Scalars['Date']['output'];
};

export type DigestHighlightsResult = {
  __typename?: 'DigestHighlightsResult';
  results: Array<Post>;
};

export type DigestOutput = {
  __typename?: 'DigestOutput';
  data: Maybe<Digest>;
};

export type DigestPlannerPost = {
  __typename?: 'DigestPlannerPost';
  digestPost: Maybe<DigestPost>;
  post: Post;
  rating: Scalars['Int']['output'];
};

export type DigestPost = {
  __typename?: 'DigestPost';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  digest: Digest;
  digestId: Scalars['String']['output'];
  emailDigestStatus: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  onsiteDigestStatus: Maybe<Scalars['String']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
};

export type DigestPostOutput = {
  __typename?: 'DigestPostOutput';
  data: Maybe<DigestPost>;
};

export type DigestPostSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type DigestPostsThisWeekResult = {
  __typename?: 'DigestPostsThisWeekResult';
  results: Array<Post>;
};

export type DigestSelector = {
  all?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  findByNum?: InputMaybe<DigestsFindByNumInput>;
};

export type DigestsFindByNumInput = {
  num?: InputMaybe<Scalars['Int']['input']>;
};

export type DocumentDeletion = {
  __typename?: 'DocumentDeletion';
  createdAt: Scalars['Date']['output'];
  docFields: Maybe<MultiDocument>;
  documentId: Scalars['String']['output'];
  netChange: DocumentDeletionNetChange;
  type: Maybe<MultiDocumentType>;
  userId: Maybe<Scalars['String']['output']>;
};

export type DocumentDeletionNetChange =
  | 'deleted'
  | 'restored';

export type ElectionCandidate = {
  __typename?: 'ElectionCandidate';
  _id: Scalars['String']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  amountRaised: Maybe<Scalars['Float']['output']>;
  baseScore: Scalars['Float']['output'];
  createdAt: Scalars['Date']['output'];
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  description: Scalars['String']['output'];
  electionName: Scalars['String']['output'];
  extendedScore: Maybe<Scalars['JSON']['output']>;
  fundraiserLink: Maybe<Scalars['String']['output']>;
  gwwcId: Maybe<Scalars['String']['output']>;
  gwwcLink: Maybe<Scalars['String']['output']>;
  href: Scalars['String']['output'];
  isElectionFundraiser: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  logoSrc: Scalars['String']['output'];
  name: Scalars['String']['output'];
  postCount: Scalars['Float']['output'];
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  tag: Maybe<Tag>;
  tagId: Scalars['String']['output'];
  targetAmount: Maybe<Scalars['Float']['output']>;
  user: Maybe<User>;
  userId: Scalars['String']['output'];
  voteCount: Scalars['Float']['output'];
};

export type ElectionCandidateDefaultViewInput = {
  electionName?: InputMaybe<Scalars['String']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
};

export type ElectionCandidateOutput = {
  __typename?: 'ElectionCandidateOutput';
  data: Maybe<ElectionCandidate>;
};

export type ElectionCandidateSelector = {
  default?: InputMaybe<ElectionCandidateDefaultViewInput>;
};

export type ElectionVote = {
  __typename?: 'ElectionVote';
  _id: Scalars['String']['output'];
  compareState: Maybe<Scalars['JSON']['output']>;
  createdAt: Scalars['Date']['output'];
  electionName: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  submissionComments: Maybe<Scalars['JSON']['output']>;
  submittedAt: Maybe<Scalars['Date']['output']>;
  user: Maybe<User>;
  userExplanation: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
  userOtherComments: Maybe<Scalars['String']['output']>;
  vote: Maybe<Scalars['JSON']['output']>;
};

export type ElectionVoteDefaultViewInput = {
  electionName?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ElectionVoteOutput = {
  __typename?: 'ElectionVoteOutput';
  data: Maybe<ElectionVote>;
};

export type ElectionVoteSelector = {
  allSubmittedVotes?: InputMaybe<ElectionVotesAllSubmittedVotesInput>;
  default?: InputMaybe<ElectionVoteDefaultViewInput>;
};

export type ElectionVotesAllSubmittedVotesInput = {
  electionName?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ElicitBlockData = {
  __typename?: 'ElicitBlockData';
  _id: Maybe<Scalars['String']['output']>;
  notes: Maybe<Scalars['String']['output']>;
  predictions: Maybe<Array<ElicitPrediction>>;
  resolution: Maybe<Scalars['Boolean']['output']>;
  resolvesBy: Maybe<Scalars['Date']['output']>;
  title: Maybe<Scalars['String']['output']>;
};

export type ElicitPrediction = {
  __typename?: 'ElicitPrediction';
  _id: Maybe<Scalars['String']['output']>;
  binaryQuestionId: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  creator: Maybe<ElicitUser>;
  notes: Maybe<Scalars['String']['output']>;
  prediction: Maybe<Scalars['Float']['output']>;
  predictionId: Maybe<Scalars['String']['output']>;
  sourceId: Maybe<Scalars['String']['output']>;
  sourceUrl: Maybe<Scalars['String']['output']>;
};

export type ElicitQuestion = {
  __typename?: 'ElicitQuestion';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  notes: Maybe<Scalars['String']['output']>;
  resolution: Maybe<Scalars['String']['output']>;
  resolvesBy: Maybe<Scalars['Date']['output']>;
  schemaVersion: Scalars['Float']['output'];
  title: Scalars['String']['output'];
};

export type ElicitQuestionOutput = {
  __typename?: 'ElicitQuestionOutput';
  data: Maybe<ElicitQuestion>;
};

export type ElicitQuestionPrediction = {
  __typename?: 'ElicitQuestionPrediction';
  _id: Scalars['String']['output'];
  binaryQuestionId: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  creator: ElicitQuestionPredictionCreator;
  isDeleted: Scalars['Boolean']['output'];
  notes: Maybe<Scalars['String']['output']>;
  prediction: Maybe<Scalars['Float']['output']>;
  predictionId: Maybe<Scalars['String']['output']>;
  question: ElicitQuestion;
  sourceId: Maybe<Scalars['String']['output']>;
  sourceUrl: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type ElicitQuestionPredictionCreator = {
  __typename?: 'ElicitQuestionPredictionCreator';
  _id: Scalars['String']['output'];
  displayName: Scalars['String']['output'];
  isQuestionCreator: Scalars['Boolean']['output'];
  sourceUserId: Maybe<Scalars['String']['output']>;
};

export type ElicitQuestionPredictionSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type ElicitQuestionSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type ElicitUser = {
  __typename?: 'ElicitUser';
  _id: Maybe<Scalars['String']['output']>;
  displayName: Maybe<Scalars['String']['output']>;
  isQuestionCreator: Maybe<Scalars['Boolean']['output']>;
  lwUser: Maybe<User>;
  sourceUserId: Maybe<Scalars['String']['output']>;
};

export type EmailPreview = {
  __typename?: 'EmailPreview';
  html: Maybe<Scalars['String']['output']>;
  subject: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
  to: Maybe<Scalars['String']['output']>;
};

export type EmailTokens = {
  __typename?: 'EmailTokens';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type EmptyViewInput = {
  /** @deprecated GraphQL doesn't support empty input types, so we need to provide a field.  Don't pass anything in, it doesn't do anything. */
  _?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpandedFrontpageSectionsSettingsInput = {
  community?: InputMaybe<Scalars['Boolean']['input']>;
  popularComments?: InputMaybe<Scalars['Boolean']['input']>;
  quickTakes?: InputMaybe<Scalars['Boolean']['input']>;
  quickTakesCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  recommendations?: InputMaybe<Scalars['Boolean']['input']>;
};

export type ExpandedFrontpageSectionsSettingsOutput = {
  __typename?: 'ExpandedFrontpageSectionsSettingsOutput';
  community: Maybe<Scalars['Boolean']['output']>;
  popularComments: Maybe<Scalars['Boolean']['output']>;
  quickTakes: Maybe<Scalars['Boolean']['output']>;
  quickTakesCommunity: Maybe<Scalars['Boolean']['output']>;
  recommendations: Maybe<Scalars['Boolean']['output']>;
};

export type ExternalPost = {
  __typename?: 'ExternalPost';
  _id: Scalars['String']['output'];
  coauthorUserIds: Maybe<Array<Scalars['String']['output']>>;
  content: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  draft: Maybe<Scalars['Boolean']['output']>;
  modifiedAt: Maybe<Scalars['Date']['output']>;
  postedAt: Maybe<Scalars['Date']['output']>;
  slug: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  url: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
};

export type ExternalPostImportData = {
  __typename?: 'ExternalPostImportData';
  alreadyExists: Maybe<Scalars['Boolean']['output']>;
  post: Maybe<ExternalPost>;
};

export type FeaturedResource = {
  __typename?: 'FeaturedResource';
  _id: Scalars['String']['output'];
  body: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  ctaText: Scalars['String']['output'];
  ctaUrl: Scalars['String']['output'];
  expiresAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  title: Scalars['String']['output'];
};

export type FeaturedResourceSelector = {
  activeResources?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type FeedCommentThread = {
  __typename?: 'FeedCommentThread';
  _id: Scalars['String']['output'];
  commentMetaInfos: Maybe<Scalars['JSON']['output']>;
  comments: Array<Comment>;
  isOnReadPost: Maybe<Scalars['Boolean']['output']>;
  post: Maybe<Post>;
  postSources: Maybe<Array<Scalars['String']['output']>>;
};

export type FeedPost = {
  __typename?: 'FeedPost';
  _id: Scalars['String']['output'];
  post: Post;
  postMetaInfo: Maybe<Scalars['JSON']['output']>;
};

export type FeedSpotlightItem = {
  __typename?: 'FeedSpotlightItem';
  _id: Scalars['String']['output'];
  post: Maybe<Post>;
  spotlight: Maybe<Spotlight>;
  spotlightMetaInfo: Maybe<FeedSpotlightMetaInfo>;
};

export type FeedSpotlightMetaInfo = {
  __typename?: 'FeedSpotlightMetaInfo';
  servedEventId: Scalars['String']['output'];
  sources: Array<Scalars['String']['output']>;
};

export type FeedSubscriptionSuggestions = {
  __typename?: 'FeedSubscriptionSuggestions';
  _id: Scalars['String']['output'];
  suggestedUsers: Array<User>;
};

export type FieldChange = {
  __typename?: 'FieldChange';
  _id: Scalars['String']['output'];
  changeGroup: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  documentId: Maybe<Scalars['String']['output']>;
  fieldName: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  newValue: Maybe<Scalars['JSON']['output']>;
  oldValue: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type FieldChangeSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type ForumEvent = {
  __typename?: 'ForumEvent';
  _id: Scalars['String']['output'];
  bannerImageId: Maybe<Scalars['String']['output']>;
  bannerTextColor: Scalars['String']['output'];
  comment: Maybe<Comment>;
  commentId: Maybe<Scalars['String']['output']>;
  commentPrompt: Maybe<Scalars['String']['output']>;
  contrastColor: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  customComponent: Maybe<ForumEventCustomComponent>;
  darkColor: Scalars['String']['output'];
  endDate: Maybe<Scalars['Date']['output']>;
  eventFormat: ForumEventFormat;
  frontpageDescription: Maybe<Revision>;
  frontpageDescriptionMobile: Maybe<Revision>;
  frontpageDescriptionMobile_latest: Maybe<Scalars['String']['output']>;
  frontpageDescription_latest: Maybe<Scalars['String']['output']>;
  includesPoll: Scalars['Boolean']['output'];
  isGlobal: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  lightColor: Scalars['String']['output'];
  maxStickersPerUser: Scalars['Float']['output'];
  pollAgreeWording: Maybe<Scalars['String']['output']>;
  pollDisagreeWording: Maybe<Scalars['String']['output']>;
  pollQuestion: Maybe<Revision>;
  pollQuestion_latest: Maybe<Scalars['String']['output']>;
  post: Maybe<Post>;
  postId: Maybe<Scalars['String']['output']>;
  postPageDescription: Maybe<Revision>;
  postPageDescription_latest: Maybe<Scalars['String']['output']>;
  publicData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  startDate: Scalars['Date']['output'];
  tag: Maybe<Tag>;
  tagId: Maybe<Scalars['String']['output']>;
  title: Scalars['String']['output'];
  voteCount: Scalars['Int']['output'];
};


export type ForumEventfrontpageDescriptionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type ForumEventfrontpageDescriptionMobileArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type ForumEventpollQuestionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type ForumEventpostPageDescriptionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ForumEventCustomComponent =
  | 'GivingSeason2024Banner';

export type ForumEventFormat =
  | 'BASIC'
  | 'POLL'
  | 'STICKERS';

export type ForumEventOutput = {
  __typename?: 'ForumEventOutput';
  data: Maybe<ForumEvent>;
};

export type ForumEventSelector = {
  currentAndRecentForumEvents?: InputMaybe<ForumEventsCurrentAndRecentForumEventsInput>;
  currentForumEvent?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  pastForumEvents?: InputMaybe<ForumEventsPastForumEventsInput>;
  upcomingForumEvents?: InputMaybe<ForumEventsUpcomingForumEventsInput>;
};

export type ForumEventsCurrentAndRecentForumEventsInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
};

export type ForumEventsPastForumEventsInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
};

export type ForumEventsUpcomingForumEventsInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
};

export type FrontpageClassification = {
  __typename?: 'FrontpageClassification';
  isFrontpage: Scalars['Boolean']['output'];
  probability: Scalars['Float']['output'];
};

export type GardenCode = {
  __typename?: 'GardenCode';
  _id: Scalars['String']['output'];
  afOnly: Scalars['Boolean']['output'];
  code: Scalars['String']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  endTime: Scalars['Date']['output'];
  fbLink: Maybe<Scalars['String']['output']>;
  hidden: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  pingbacks: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
  startTime: Maybe<Scalars['Date']['output']>;
  title: Scalars['String']['output'];
  type: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};


export type GardenCodecontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type GardenCodeDefaultViewInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type GardenCodeSelector = {
  default?: InputMaybe<GardenCodeDefaultViewInput>;
  gardenCodeByCode?: InputMaybe<GardenCodesGardenCodeByCodeInput>;
  publicGardenCodes?: InputMaybe<GardenCodesPublicGardenCodesInput>;
  usersPrivateGardenCodes?: InputMaybe<GardenCodesUsersPrivateGardenCodesInput>;
};

export type GardenCodesGardenCodeByCodeInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type GardenCodesPublicGardenCodesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type GardenCodesUsersPrivateGardenCodesInput = {
  code?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type GivingSeasonHeart = {
  __typename?: 'GivingSeasonHeart';
  displayName: Scalars['String']['output'];
  theta: Scalars['Float']['output'];
  userId: Scalars['String']['output'];
  x: Scalars['Float']['output'];
  y: Scalars['Float']['output'];
};

export type GoogleServiceAccountSession = {
  __typename?: 'GoogleServiceAccountSession';
  _id: Scalars['String']['output'];
  active: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['Date']['output'];
  email: Maybe<Scalars['String']['output']>;
  estimatedExpiry: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  refreshToken: Maybe<Scalars['String']['output']>;
  revoked: Maybe<Scalars['Boolean']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type GoogleServiceAccountSessionSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type HomepageCommunityEventMarker = {
  __typename?: 'HomepageCommunityEventMarker';
  _id: Scalars['String']['output'];
  lat: Scalars['Float']['output'];
  lng: Scalars['Float']['output'];
  types: Maybe<Array<Scalars['String']['output']>>;
};

export type HomepageCommunityEventMarkersResult = {
  __typename?: 'HomepageCommunityEventMarkersResult';
  events: Array<HomepageCommunityEventMarker>;
};

export type Images = {
  __typename?: 'Images';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type JargonTerm = {
  __typename?: 'JargonTerm';
  _id: Scalars['String']['output'];
  altTerms: Array<Scalars['String']['output']>;
  approved: Scalars['Boolean']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  humansAndOrAIEdited: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  term: Scalars['String']['output'];
};


export type JargonTermcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type JargonTermOutput = {
  __typename?: 'JargonTermOutput';
  data: Maybe<JargonTerm>;
};

export type JargonTermSelector = {
  default?: InputMaybe<EmptyViewInput>;
  glossaryEditAll?: InputMaybe<EmptyViewInput>;
  postEditorJargonTerms?: InputMaybe<JargonTermsPostEditorJargonTermsInput>;
  postsApprovedJargon?: InputMaybe<JargonTermsPostsApprovedJargonInput>;
};

export type JargonTermsPostEditorJargonTermsInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type JargonTermsPostsApprovedJargonInput = {
  postIds?: InputMaybe<Scalars['String']['input']>;
};

export type KarmaChanges = {
  __typename?: 'KarmaChanges';
  comments: Array<CommentKarmaChange>;
  endDate: Maybe<Scalars['Date']['output']>;
  nextBatchDate: Maybe<Scalars['Date']['output']>;
  posts: Array<PostKarmaChange>;
  startDate: Maybe<Scalars['Date']['output']>;
  tagRevisions: Array<RevisionsKarmaChange>;
  thisWeeksKarmaChanges: Maybe<KarmaChangesSimple>;
  todaysKarmaChanges: Maybe<KarmaChangesSimple>;
  totalChange: Scalars['Int']['output'];
  updateFrequency: Scalars['String']['output'];
};

export type KarmaChangesSimple = {
  __typename?: 'KarmaChangesSimple';
  comments: Array<CommentKarmaChange>;
  posts: Array<PostKarmaChange>;
  tagRevisions: Array<RevisionsKarmaChange>;
};

export type LWEvent = {
  __typename?: 'LWEvent';
  _id: Scalars['String']['output'];
  createdAt: Maybe<Scalars['Date']['output']>;
  documentId: Maybe<Scalars['String']['output']>;
  important: Maybe<Scalars['Boolean']['output']>;
  intercom: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  name: Maybe<Scalars['String']['output']>;
  properties: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type LWEventOutput = {
  __typename?: 'LWEventOutput';
  data: Maybe<LWEvent>;
};

export type LWEventSelector = {
  adminView?: InputMaybe<LWEventsAdminViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  emailHistory?: InputMaybe<LWEventsEmailHistoryInput>;
  gatherTownUsers?: InputMaybe<EmptyViewInput>;
  postVisits?: InputMaybe<LWEventsPostVisitsInput>;
};

export type LWEventsAdminViewInput = {
  name?: InputMaybe<Scalars['String']['input']>;
};

export type LWEventsEmailHistoryInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LWEventsPostVisitsInput = {
  limit?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LatLng = {
  __typename?: 'LatLng';
  lat: Scalars['Float']['output'];
  lng: Scalars['Float']['output'];
};

export type LegacyData = {
  __typename?: 'LegacyData';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type LlmConversation = {
  __typename?: 'LlmConversation';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  deleted: Maybe<Scalars['Boolean']['output']>;
  lastUpdatedAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  messages: Maybe<Array<LlmMessage>>;
  model: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  systemPrompt: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  totalCharacterCount: Maybe<Scalars['Int']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type LlmConversationOutput = {
  __typename?: 'LlmConversationOutput';
  data: Maybe<LlmConversation>;
};

export type LlmConversationSelector = {
  default?: InputMaybe<EmptyViewInput>;
  llmConversationsAll?: InputMaybe<LlmConversationsLlmConversationsAllInput>;
  llmConversationsWithUser?: InputMaybe<LlmConversationsLlmConversationsWithUserInput>;
};

export type LlmConversationsLlmConversationsAllInput = {
  showDeleted?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LlmConversationsLlmConversationsWithUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LlmMessage = {
  __typename?: 'LlmMessage';
  _id: Scalars['String']['output'];
  content: Maybe<Scalars['String']['output']>;
  conversationId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  role: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type Localgroup = {
  __typename?: 'Localgroup';
  _id: Scalars['String']['output'];
  bannerImageId: Maybe<Scalars['String']['output']>;
  categories: Maybe<Array<Scalars['String']['output']>>;
  contactInfo: Maybe<Scalars['String']['output']>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  facebookLink: Maybe<Scalars['String']['output']>;
  facebookPageLink: Maybe<Scalars['String']['output']>;
  googleLocation: Maybe<Scalars['JSON']['output']>;
  inactive: Scalars['Boolean']['output'];
  isOnline: Scalars['Boolean']['output'];
  lastActivity: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  location: Maybe<Scalars['String']['output']>;
  meetupLink: Maybe<Scalars['String']['output']>;
  mongoLocation: Maybe<Scalars['JSON']['output']>;
  name: Scalars['String']['output'];
  nameInAnotherLanguage: Maybe<Scalars['String']['output']>;
  organizerIds: Array<Scalars['String']['output']>;
  organizers: Array<User>;
  schemaVersion: Scalars['Float']['output'];
  slackLink: Maybe<Scalars['String']['output']>;
  types: Array<Scalars['String']['output']>;
  website: Maybe<Scalars['String']['output']>;
};


export type LocalgroupcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type LocalgroupDefaultViewInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocalgroupOutput = {
  __typename?: 'LocalgroupOutput';
  data: Maybe<Localgroup>;
};

export type LocalgroupSelector = {
  all?: InputMaybe<LocalgroupsAllInput>;
  default?: InputMaybe<LocalgroupDefaultViewInput>;
  local?: InputMaybe<LocalgroupsLocalInput>;
  nearby?: InputMaybe<LocalgroupsNearbyInput>;
  online?: InputMaybe<LocalgroupsOnlineInput>;
  single?: InputMaybe<LocalgroupsSingleInput>;
  userActiveGroups?: InputMaybe<LocalgroupsUserActiveGroupsInput>;
  userInactiveGroups?: InputMaybe<LocalgroupsUserInactiveGroupsInput>;
  userOrganizesGroups?: InputMaybe<LocalgroupsUserOrganizesGroupsInput>;
};

export type LocalgroupsAllInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocalgroupsLocalInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocalgroupsNearbyInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
  lat?: InputMaybe<Scalars['Float']['input']>;
  lng?: InputMaybe<Scalars['Float']['input']>;
};

export type LocalgroupsOnlineInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocalgroupsSingleInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
};

export type LocalgroupsUserActiveGroupsInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LocalgroupsUserInactiveGroupsInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LocalgroupsUserOrganizesGroupsInput = {
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  includeInactive?: InputMaybe<Scalars['Boolean']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type LoginReturnData = {
  __typename?: 'LoginReturnData';
  token: Maybe<Scalars['String']['output']>;
};

export type ManifoldProbabilitiesCache = {
  __typename?: 'ManifoldProbabilitiesCache';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  isResolved: Scalars['Boolean']['output'];
  lastUpdated: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  marketId: Scalars['String']['output'];
  probability: Scalars['Float']['output'];
  schemaVersion: Scalars['Float']['output'];
  url: Maybe<Scalars['String']['output']>;
  year: Scalars['Float']['output'];
};

export type Message = {
  __typename?: 'Message';
  _id: Scalars['String']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  baseScore: Scalars['Float']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  conversation: Maybe<Conversation>;
  conversationId: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  extendedScore: Maybe<Scalars['JSON']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  noEmail: Maybe<Scalars['Boolean']['output']>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
  voteCount: Scalars['Float']['output'];
};


export type MessagecontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type MessageOutput = {
  __typename?: 'MessageOutput';
  data: Maybe<Message>;
};

export type MessageSelector = {
  conversationPreview?: InputMaybe<MessagesConversationPreviewInput>;
  default?: InputMaybe<EmptyViewInput>;
  messagesConversation?: InputMaybe<MessagesMessagesConversationInput>;
};

export type MessagesConversationPreviewInput = {
  conversationId?: InputMaybe<Scalars['String']['input']>;
};

export type MessagesMessagesConversationInput = {
  conversationId?: InputMaybe<Scalars['String']['input']>;
};

export type Migration = {
  __typename?: 'Migration';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type MigrationRun = {
  __typename?: 'MigrationRun';
  finished: Maybe<Scalars['Date']['output']>;
  name: Scalars['String']['output'];
  started: Scalars['Date']['output'];
  succeeded: Maybe<Scalars['Boolean']['output']>;
};

export type MigrationStatus = {
  __typename?: 'MigrationStatus';
  dateWritten: Maybe<Scalars['String']['output']>;
  lastRun: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  runs: Maybe<Array<MigrationRun>>;
};

export type MigrationsDashboardData = {
  __typename?: 'MigrationsDashboardData';
  migrations: Maybe<Array<MigrationStatus>>;
};

export type ModerationTemplate = {
  __typename?: 'ModerationTemplate';
  _id: Scalars['String']['output'];
  collectionName: ModerationTemplateType;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  name: Scalars['String']['output'];
  order: Scalars['Float']['output'];
  schemaVersion: Scalars['Float']['output'];
};


export type ModerationTemplatecontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type ModerationTemplateOutput = {
  __typename?: 'ModerationTemplateOutput';
  data: Maybe<ModerationTemplate>;
};

export type ModerationTemplateSelector = {
  default?: InputMaybe<EmptyViewInput>;
  moderationTemplatesList?: InputMaybe<ModerationTemplatesModerationTemplatesListInput>;
  moderationTemplatesPage?: InputMaybe<EmptyViewInput>;
};

export type ModerationTemplateType =
  | 'Comments'
  | 'Messages'
  | 'Rejections';

export type ModerationTemplatesModerationTemplatesListInput = {
  collectionName?: InputMaybe<Scalars['String']['input']>;
};

export type ModeratorAction = {
  __typename?: 'ModeratorAction';
  _id: Scalars['String']['output'];
  active: Scalars['Boolean']['output'];
  createdAt: Scalars['Date']['output'];
  endedAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  type: ModeratorActionType;
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type ModeratorActionOutput = {
  __typename?: 'ModeratorActionOutput';
  data: Maybe<ModeratorAction>;
};

export type ModeratorActionSelector = {
  default?: InputMaybe<EmptyViewInput>;
  restrictionModerationActions?: InputMaybe<EmptyViewInput>;
  userModeratorActions?: InputMaybe<ModeratorActionsUserModeratorActionsInput>;
};

export type ModeratorActionType =
  | 'autoBlockedFromSendingDMs'
  | 'exemptFromRateLimits'
  | 'flaggedForNDMs'
  | 'lowAverageKarmaCommentAlert'
  | 'lowAverageKarmaPostAlert'
  | 'manualFlag'
  | 'manualNeedsReview'
  | 'manualRateLimitExpired'
  | 'movedPostToDraft'
  | 'negativeUserKarmaAlert'
  | 'potentialTargetedDownvoting'
  | 'rateLimitOnePerDay'
  | 'rateLimitOnePerFortnight'
  | 'rateLimitOnePerMonth'
  | 'rateLimitOnePerThreeDays'
  | 'rateLimitOnePerWeek'
  | 'rateLimitThreeCommentsPerPost'
  | 'receivedSeniorDownvotesAlert'
  | 'recentlyDownvotedContentAlert'
  | 'rejectedComment'
  | 'rejectedPost'
  | 'sentModeratorMessage'
  | 'snoozeExpired'
  | 'stricterCommentAutomodRateLimit'
  | 'stricterPostAutomodRateLimit'
  | 'unreviewedBioUpdate'
  | 'unreviewedFirstComment'
  | 'unreviewedFirstPost'
  | 'unreviewedMapLocationUpdate'
  | 'unreviewedProfileImageUpdate'
  | 'votingPatternWarningDelivered';

export type ModeratorActionsUserModeratorActionsInput = {
  userIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type ModeratorIPAddressInfo = {
  __typename?: 'ModeratorIPAddressInfo';
  ip: Scalars['String']['output'];
  userIds: Array<Scalars['String']['output']>;
};

export type MostReadAuthor = {
  __typename?: 'MostReadAuthor';
  _id: Maybe<Scalars['String']['output']>;
  count: Maybe<Scalars['Int']['output']>;
  displayName: Maybe<Scalars['String']['output']>;
  engagementPercentile: Maybe<Scalars['Float']['output']>;
  profileImageId: Maybe<Scalars['String']['output']>;
  slug: Maybe<Scalars['String']['output']>;
};

export type MostReadTopic = {
  __typename?: 'MostReadTopic';
  count: Maybe<Scalars['Int']['output']>;
  name: Maybe<Scalars['String']['output']>;
  shortName: Maybe<Scalars['String']['output']>;
  slug: Maybe<Scalars['String']['output']>;
};

export type MostReceivedReact = {
  __typename?: 'MostReceivedReact';
  count: Maybe<Scalars['Int']['output']>;
  name: Maybe<Scalars['String']['output']>;
};

export type MultiAdvisorRequestInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiAdvisorRequestOutput = {
  __typename?: 'MultiAdvisorRequestOutput';
  results: Array<AdvisorRequest>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiArbitalTagContentRelInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiArbitalTagContentRelOutput = {
  __typename?: 'MultiArbitalTagContentRelOutput';
  results: Array<ArbitalTagContentRel>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiBanInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiBanOutput = {
  __typename?: 'MultiBanOutput';
  results: Array<Ban>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiBookInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiBookOutput = {
  __typename?: 'MultiBookOutput';
  results: Array<Book>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiBookmarkInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiBookmarkOutput = {
  __typename?: 'MultiBookmarkOutput';
  results: Array<Bookmark>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiChapterInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiChapterOutput = {
  __typename?: 'MultiChapterOutput';
  results: Array<Chapter>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiCkEditorUserSessionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiCkEditorUserSessionOutput = {
  __typename?: 'MultiCkEditorUserSessionOutput';
  results: Array<CkEditorUserSession>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiClientIdInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiClientIdOutput = {
  __typename?: 'MultiClientIdOutput';
  results: Array<ClientId>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiCollectionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiCollectionOutput = {
  __typename?: 'MultiCollectionOutput';
  results: Array<Collection>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiCommentInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiCommentModeratorActionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiCommentModeratorActionOutput = {
  __typename?: 'MultiCommentModeratorActionOutput';
  results: Array<CommentModeratorAction>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiCommentOutput = {
  __typename?: 'MultiCommentOutput';
  results: Array<Comment>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiConversationInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiConversationOutput = {
  __typename?: 'MultiConversationOutput';
  results: Array<Conversation>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiCurationNoticeInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiCurationNoticeOutput = {
  __typename?: 'MultiCurationNoticeOutput';
  results: Array<CurationNotice>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiDialogueCheckInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiDialogueCheckOutput = {
  __typename?: 'MultiDialogueCheckOutput';
  results: Array<DialogueCheck>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiDialogueMatchPreferenceInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiDialogueMatchPreferenceOutput = {
  __typename?: 'MultiDialogueMatchPreferenceOutput';
  results: Array<DialogueMatchPreference>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiDigestInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiDigestOutput = {
  __typename?: 'MultiDigestOutput';
  results: Array<Digest>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiDigestPostInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiDigestPostOutput = {
  __typename?: 'MultiDigestPostOutput';
  results: Array<DigestPost>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiDocument = {
  __typename?: 'MultiDocument';
  _id: Scalars['String']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  arbitalLinkedPages: Maybe<ArbitalLinkedPages>;
  baseScore: Scalars['Float']['output'];
  collectionName: MultiDocumentCollectionName;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  contributionStats: Maybe<Scalars['JSON']['output']>;
  contributors: Maybe<TagContributorsList>;
  createdAt: Scalars['Date']['output'];
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  deleted: Scalars['Boolean']['output'];
  extendedScore: Maybe<Scalars['JSON']['output']>;
  fieldName: MultiDocumentFieldName;
  htmlWithContributorAnnotations: Maybe<Scalars['String']['output']>;
  index: Scalars['Float']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  oldSlugs: Array<Scalars['String']['output']>;
  parentDocumentId: Scalars['String']['output'];
  parentLens: Maybe<MultiDocument>;
  parentTag: Maybe<Tag>;
  pingbacks: Maybe<Scalars['JSON']['output']>;
  preview: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
  summaries: Array<MultiDocument>;
  tabSubtitle: Maybe<Scalars['String']['output']>;
  tabTitle: Scalars['String']['output'];
  tableOfContents: Maybe<Scalars['JSON']['output']>;
  textLastUpdatedAt: Maybe<Scalars['Date']['output']>;
  title: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userId: Scalars['String']['output'];
  voteCount: Scalars['Float']['output'];
};


export type MultiDocumentcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type MultiDocumentcontributorsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};


export type MultiDocumenttableOfContentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type MultiDocumentCollectionName =
  | 'MultiDocuments'
  | 'Tags';

export type MultiDocumentDefaultViewInput = {
  excludedDocumentIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type MultiDocumentFieldName =
  | 'description'
  | 'summary';

export type MultiDocumentOutput = {
  __typename?: 'MultiDocumentOutput';
  data: Maybe<MultiDocument>;
};

export type MultiDocumentSelector = {
  default?: InputMaybe<MultiDocumentDefaultViewInput>;
  lensBySlug?: InputMaybe<MultiDocumentsLensBySlugInput>;
  pingbackLensPages?: InputMaybe<MultiDocumentsPingbackLensPagesInput>;
  summariesByParentId?: InputMaybe<MultiDocumentsSummariesByParentIdInput>;
};

export type MultiDocumentType =
  | 'lens'
  | 'summary';

export type MultiDocumentsLensBySlugInput = {
  excludedDocumentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type MultiDocumentsPingbackLensPagesInput = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  excludedDocumentIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type MultiDocumentsSummariesByParentIdInput = {
  excludedDocumentIds?: InputMaybe<Array<Scalars['String']['input']>>;
  parentDocumentId?: InputMaybe<Scalars['String']['input']>;
};

export type MultiElectionCandidateInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiElectionCandidateOutput = {
  __typename?: 'MultiElectionCandidateOutput';
  results: Array<ElectionCandidate>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiElectionVoteInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiElectionVoteOutput = {
  __typename?: 'MultiElectionVoteOutput';
  results: Array<ElectionVote>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiElicitQuestionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiElicitQuestionOutput = {
  __typename?: 'MultiElicitQuestionOutput';
  results: Array<ElicitQuestion>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiElicitQuestionPredictionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiElicitQuestionPredictionOutput = {
  __typename?: 'MultiElicitQuestionPredictionOutput';
  results: Array<ElicitQuestionPrediction>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiFeaturedResourceInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiFeaturedResourceOutput = {
  __typename?: 'MultiFeaturedResourceOutput';
  results: Array<FeaturedResource>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiFieldChangeInput = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiFieldChangeOutput = {
  __typename?: 'MultiFieldChangeOutput';
  results: Array<FieldChange>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiForumEventInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiForumEventOutput = {
  __typename?: 'MultiForumEventOutput';
  results: Array<ForumEvent>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiGardenCodeInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiGardenCodeOutput = {
  __typename?: 'MultiGardenCodeOutput';
  results: Array<GardenCode>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiGoogleServiceAccountSessionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiGoogleServiceAccountSessionOutput = {
  __typename?: 'MultiGoogleServiceAccountSessionOutput';
  results: Array<GoogleServiceAccountSession>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiJargonTermInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiJargonTermOutput = {
  __typename?: 'MultiJargonTermOutput';
  results: Array<JargonTerm>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiLWEventInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiLWEventOutput = {
  __typename?: 'MultiLWEventOutput';
  results: Array<LWEvent>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiLlmConversationInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiLlmConversationOutput = {
  __typename?: 'MultiLlmConversationOutput';
  results: Array<LlmConversation>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiLocalgroupInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiLocalgroupOutput = {
  __typename?: 'MultiLocalgroupOutput';
  results: Array<Localgroup>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiMessageInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiMessageOutput = {
  __typename?: 'MultiMessageOutput';
  results: Array<Message>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiModerationTemplateInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiModerationTemplateOutput = {
  __typename?: 'MultiModerationTemplateOutput';
  results: Array<ModerationTemplate>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiModeratorActionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiModeratorActionOutput = {
  __typename?: 'MultiModeratorActionOutput';
  results: Array<ModeratorAction>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiMultiDocumentInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiMultiDocumentOutput = {
  __typename?: 'MultiMultiDocumentOutput';
  results: Array<MultiDocument>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiNotificationInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiNotificationOutput = {
  __typename?: 'MultiNotificationOutput';
  results: Array<Notification>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiPetrovDayActionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiPetrovDayActionOutput = {
  __typename?: 'MultiPetrovDayActionOutput';
  results: Array<PetrovDayAction>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiPodcastEpisodeInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiPodcastEpisodeOutput = {
  __typename?: 'MultiPodcastEpisodeOutput';
  results: Array<PodcastEpisode>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiPodcastInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiPodcastOutput = {
  __typename?: 'MultiPodcastOutput';
  results: Array<Podcast>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiPostAnalyticsResult = {
  __typename?: 'MultiPostAnalyticsResult';
  posts: Maybe<Array<Maybe<PostAnalytics2Result>>>;
  totalCount: Scalars['Int']['output'];
};

export type MultiPostInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiPostOutput = {
  __typename?: 'MultiPostOutput';
  results: Array<Post>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiPostRelationInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiPostRelationOutput = {
  __typename?: 'MultiPostRelationOutput';
  results: Array<PostRelation>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiRSSFeedInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiRSSFeedOutput = {
  __typename?: 'MultiRSSFeedOutput';
  results: Array<RSSFeed>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiReportInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiReportOutput = {
  __typename?: 'MultiReportOutput';
  results: Array<Report>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiReviewVoteInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiReviewVoteOutput = {
  __typename?: 'MultiReviewVoteOutput';
  results: Array<ReviewVote>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiReviewWinnerArtInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiReviewWinnerArtOutput = {
  __typename?: 'MultiReviewWinnerArtOutput';
  results: Array<ReviewWinnerArt>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiReviewWinnerInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiReviewWinnerOutput = {
  __typename?: 'MultiReviewWinnerOutput';
  results: Array<ReviewWinner>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiRevisionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiRevisionOutput = {
  __typename?: 'MultiRevisionOutput';
  results: Array<Revision>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSequenceInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSequenceOutput = {
  __typename?: 'MultiSequenceOutput';
  results: Array<Sequence>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSplashArtCoordinateInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSplashArtCoordinateOutput = {
  __typename?: 'MultiSplashArtCoordinateOutput';
  results: Array<SplashArtCoordinate>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSpotlightInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSpotlightOutput = {
  __typename?: 'MultiSpotlightOutput';
  results: Array<Spotlight>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSubscriptionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSubscriptionOutput = {
  __typename?: 'MultiSubscriptionOutput';
  results: Array<Subscription>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSurveyInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSurveyOutput = {
  __typename?: 'MultiSurveyOutput';
  results: Array<Survey>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSurveyQuestionInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSurveyQuestionOutput = {
  __typename?: 'MultiSurveyQuestionOutput';
  results: Array<SurveyQuestion>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSurveyResponseInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSurveyResponseOutput = {
  __typename?: 'MultiSurveyResponseOutput';
  results: Array<SurveyResponse>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiSurveyScheduleInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiSurveyScheduleOutput = {
  __typename?: 'MultiSurveyScheduleOutput';
  results: Array<SurveySchedule>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiTagFlagInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiTagFlagOutput = {
  __typename?: 'MultiTagFlagOutput';
  results: Array<TagFlag>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiTagInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiTagOutput = {
  __typename?: 'MultiTagOutput';
  results: Array<Tag>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiTagRelInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiTagRelOutput = {
  __typename?: 'MultiTagRelOutput';
  results: Array<TagRel>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiTypingIndicatorInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiTypingIndicatorOutput = {
  __typename?: 'MultiTypingIndicatorOutput';
  results: Array<TypingIndicator>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUltraFeedEventInput = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUltraFeedEventOutput = {
  __typename?: 'MultiUltraFeedEventOutput';
  results: Array<UltraFeedEvent>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserEAGDetailInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserEAGDetailOutput = {
  __typename?: 'MultiUserEAGDetailOutput';
  results: Array<UserEAGDetail>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserJobAdInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserJobAdOutput = {
  __typename?: 'MultiUserJobAdOutput';
  results: Array<UserJobAd>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserMostValuablePostInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserMostValuablePostOutput = {
  __typename?: 'MultiUserMostValuablePostOutput';
  results: Array<UserMostValuablePost>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserOutput = {
  __typename?: 'MultiUserOutput';
  results: Array<User>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserRateLimitInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserRateLimitOutput = {
  __typename?: 'MultiUserRateLimitOutput';
  results: Array<UserRateLimit>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiUserTagRelInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiUserTagRelOutput = {
  __typename?: 'MultiUserTagRelOutput';
  results: Array<UserTagRel>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type MultiVoteInput = {
  enableCache?: InputMaybe<Scalars['Boolean']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  terms?: InputMaybe<Scalars['JSON']['input']>;
};

export type MultiVoteOutput = {
  __typename?: 'MultiVoteOutput';
  results: Array<Vote>;
  totalCount: Maybe<Scalars['Int']['output']>;
};

export type Mutation = {
  __typename?: 'Mutation';
  AddForumEventVote: Maybe<Scalars['Boolean']['output']>;
  AddGivingSeasonHeart: Array<GivingSeasonHeart>;
  CancelRSVPToEvent: Maybe<Post>;
  ImportGoogleDoc: Maybe<Post>;
  MakeElicitPrediction: Maybe<ElicitBlockData>;
  MarkAllNotificationsAsRead: Maybe<Scalars['Boolean']['output']>;
  NewUserCompleteProfile: Maybe<NewUserCompletedProfile>;
  PetrovDayLaunchMissile: Maybe<PetrovDayLaunchMissileData>;
  RSVPToEvent: Maybe<Post>;
  RefreshDbSettings: Maybe<Scalars['Boolean']['output']>;
  RemoveForumEventSticker: Maybe<Scalars['Boolean']['output']>;
  RemoveForumEventVote: Maybe<Scalars['Boolean']['output']>;
  RemoveGivingSeasonHeart: Array<GivingSeasonHeart>;
  UpdateSearchSynonyms: Array<Scalars['String']['output']>;
  UserExpandFrontpageSection: Maybe<Scalars['Boolean']['output']>;
  UserUpdateSubforumMembership: Maybe<User>;
  addOrUpvoteTag: Maybe<TagRel>;
  addTags: Maybe<Scalars['Boolean']['output']>;
  alignmentComment: Maybe<Comment>;
  alignmentPost: Maybe<Post>;
  analyticsEvent: Maybe<Scalars['Boolean']['output']>;
  autosaveRevision: Maybe<Revision>;
  clickRecommendation: Maybe<Scalars['Boolean']['output']>;
  connectCrossposter: Maybe<Scalars['String']['output']>;
  createAdvisorRequest: Maybe<AdvisorRequestOutput>;
  createBook: Maybe<BookOutput>;
  createChapter: Maybe<ChapterOutput>;
  createCollection: Maybe<CollectionOutput>;
  createComment: Maybe<CommentOutput>;
  createCommentModeratorAction: Maybe<CommentModeratorActionOutput>;
  createConversation: Maybe<ConversationOutput>;
  createCurationNotice: Maybe<CurationNoticeOutput>;
  createDigest: Maybe<DigestOutput>;
  createDigestPost: Maybe<DigestPostOutput>;
  createElectionCandidate: Maybe<ElectionCandidateOutput>;
  createElectionVote: Maybe<ElectionVoteOutput>;
  createElicitQuestion: Maybe<ElicitQuestionOutput>;
  createForumEvent: Maybe<ForumEventOutput>;
  createJargonTerm: Maybe<JargonTermOutput>;
  createLWEvent: Maybe<LWEventOutput>;
  createLocalgroup: Maybe<LocalgroupOutput>;
  createMessage: Maybe<MessageOutput>;
  createModerationTemplate: Maybe<ModerationTemplateOutput>;
  createModeratorAction: Maybe<ModeratorActionOutput>;
  createMultiDocument: Maybe<MultiDocumentOutput>;
  createPetrovDayAction: Maybe<PetrovDayActionOutput>;
  createPodcastEpisode: Maybe<PodcastEpisodeOutput>;
  createPost: Maybe<PostOutput>;
  createRSSFeed: Maybe<RSSFeedOutput>;
  createReport: Maybe<ReportOutput>;
  createSequence: Maybe<SequenceOutput>;
  createSplashArtCoordinate: Maybe<SplashArtCoordinateOutput>;
  createSpotlight: Maybe<SpotlightOutput>;
  createSubscription: Maybe<SubscriptionOutput>;
  createSurvey: Maybe<SurveyOutput>;
  createSurveyQuestion: Maybe<SurveyQuestionOutput>;
  createSurveyResponse: Maybe<SurveyResponseOutput>;
  createSurveySchedule: Maybe<SurveyScheduleOutput>;
  createTag: Maybe<TagOutput>;
  createTagFlag: Maybe<TagFlagOutput>;
  createUltraFeedEvent: Maybe<UltraFeedEventOutput>;
  createUser: Maybe<UserOutput>;
  createUserEAGDetail: Maybe<UserEAGDetailOutput>;
  createUserJobAd: Maybe<UserJobAdOutput>;
  createUserMostValuablePost: Maybe<UserMostValuablePostOutput>;
  createUserRateLimit: Maybe<UserRateLimitOutput>;
  createUserTagRel: Maybe<UserTagRelOutput>;
  dismissRecommendation: Maybe<Scalars['Boolean']['output']>;
  editSurvey: Maybe<Survey>;
  flipSplashArtImage: Maybe<Scalars['Boolean']['output']>;
  generateCoverImagesForPost: Maybe<Array<Maybe<ReviewWinnerArt>>>;
  getNewJargonTerms: Maybe<Array<Maybe<JargonTerm>>>;
  importUrlAsDraftPost: ExternalPostImportData;
  increasePostViewCount: Maybe<Scalars['Float']['output']>;
  initiateConversation: Maybe<Conversation>;
  lockThread: Scalars['Boolean']['output'];
  login: Maybe<LoginReturnData>;
  logout: Maybe<LoginReturnData>;
  markAsReadOrUnread: Maybe<Scalars['Boolean']['output']>;
  markConversationRead: Scalars['Boolean']['output'];
  markPostCommentsRead: Maybe<Scalars['Boolean']['output']>;
  mergeTags: Maybe<Scalars['Boolean']['output']>;
  moderateComment: Maybe<Comment>;
  observeRecommendation: Maybe<Scalars['Boolean']['output']>;
  performVoteComment: Maybe<VoteResultComment>;
  performVoteElectionCandidate: Maybe<VoteResultElectionCandidate>;
  performVoteMessage: Maybe<VoteResultMessage>;
  performVoteMultiDocument: Maybe<VoteResultMultiDocument>;
  performVotePost: Maybe<VoteResultPost>;
  performVoteRevision: Maybe<VoteResultRevision>;
  performVoteTag: Maybe<VoteResultTag>;
  performVoteTagRel: Maybe<VoteResultTagRel>;
  promoteLensToMain: Maybe<Scalars['Boolean']['output']>;
  publishAndDeDuplicateSpotlight: Maybe<Spotlight>;
  reorderSummaries: Maybe<Scalars['Boolean']['output']>;
  resetPassword: Maybe<Scalars['String']['output']>;
  resyncRssFeed: Scalars['Boolean']['output'];
  revertPostToRevision: Maybe<Post>;
  revertTagToRevision: Maybe<Tag>;
  sendEventTriggeredDM: Scalars['Boolean']['output'];
  sendNewDialogueMessageNotification: Scalars['Boolean']['output'];
  setIsHidden: User;
  setVoteComment: Maybe<Comment>;
  setVoteElectionCandidate: Maybe<ElectionCandidate>;
  setVoteMessage: Maybe<Message>;
  setVoteMultiDocument: Maybe<MultiDocument>;
  setVotePost: Maybe<Post>;
  setVoteRevision: Maybe<Revision>;
  setVoteTag: Maybe<Tag>;
  setVoteTagRel: Maybe<TagRel>;
  signup: Maybe<LoginReturnData>;
  submitReviewVote: Maybe<Post>;
  toggleBookmark: Maybe<ToggleBookmarkOutput>;
  unlinkCrossposter: Maybe<Scalars['String']['output']>;
  unlockPost: Maybe<Post>;
  unlockThread: Scalars['Boolean']['output'];
  updateAdvisorRequest: Maybe<AdvisorRequestOutput>;
  updateBook: Maybe<BookOutput>;
  updateChapter: Maybe<ChapterOutput>;
  updateCollection: Maybe<CollectionOutput>;
  updateComment: Maybe<CommentOutput>;
  updateCommentModeratorAction: Maybe<CommentModeratorActionOutput>;
  updateContinueReading: Maybe<Scalars['Boolean']['output']>;
  updateConversation: Maybe<ConversationOutput>;
  updateCurationNotice: Maybe<CurationNoticeOutput>;
  updateDigest: Maybe<DigestOutput>;
  updateDigestPost: Maybe<DigestPostOutput>;
  updateElectionCandidate: Maybe<ElectionCandidateOutput>;
  updateElectionVote: Maybe<ElectionVoteOutput>;
  updateElicitQuestion: Maybe<ElicitQuestionOutput>;
  updateForumEvent: Maybe<ForumEventOutput>;
  updateJargonTerm: Maybe<JargonTermOutput>;
  updateLlmConversation: Maybe<LlmConversationOutput>;
  updateLocalgroup: Maybe<LocalgroupOutput>;
  updateMessage: Maybe<MessageOutput>;
  updateModerationTemplate: Maybe<ModerationTemplateOutput>;
  updateModeratorAction: Maybe<ModeratorActionOutput>;
  updateMultiDocument: Maybe<MultiDocumentOutput>;
  updateNotification: Maybe<NotificationOutput>;
  updatePost: Maybe<PostOutput>;
  updateRSSFeed: Maybe<RSSFeedOutput>;
  updateReport: Maybe<ReportOutput>;
  updateRevision: Maybe<RevisionOutput>;
  updateSequence: Maybe<SequenceOutput>;
  updateSpotlight: Maybe<SpotlightOutput>;
  updateSurvey: Maybe<SurveyOutput>;
  updateSurveyQuestion: Maybe<SurveyQuestionOutput>;
  updateSurveyResponse: Maybe<SurveyResponseOutput>;
  updateSurveySchedule: Maybe<SurveyScheduleOutput>;
  updateTag: Maybe<TagOutput>;
  updateTagFlag: Maybe<TagFlagOutput>;
  updateUltraFeedEvent: Maybe<UltraFeedEventOutput>;
  updateUser: Maybe<UserOutput>;
  updateUserEAGDetail: Maybe<UserEAGDetailOutput>;
  updateUserJobAd: Maybe<UserJobAdOutput>;
  updateUserMostValuablePost: Maybe<UserMostValuablePostOutput>;
  updateUserRateLimit: Maybe<UserRateLimitOutput>;
  updateUserTagRel: Maybe<UserTagRelOutput>;
  useEmailToken: Maybe<Scalars['JSON']['output']>;
};


export type MutationAddForumEventVoteArgs = {
  delta?: InputMaybe<Scalars['Float']['input']>;
  forumEventId: Scalars['String']['input'];
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  x: Scalars['Float']['input'];
};


export type MutationAddGivingSeasonHeartArgs = {
  electionName: Scalars['String']['input'];
  theta: Scalars['Float']['input'];
  x: Scalars['Float']['input'];
  y: Scalars['Float']['input'];
};


export type MutationCancelRSVPToEventArgs = {
  name?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationImportGoogleDocArgs = {
  fileUrl: Scalars['String']['input'];
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationMakeElicitPredictionArgs = {
  prediction?: InputMaybe<Scalars['Int']['input']>;
  questionId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationNewUserCompleteProfileArgs = {
  acceptedTos?: InputMaybe<Scalars['Boolean']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  subscribeToDigest: Scalars['Boolean']['input'];
  username: Scalars['String']['input'];
};


export type MutationPetrovDayLaunchMissileArgs = {
  launchCode?: InputMaybe<Scalars['String']['input']>;
};


export type MutationRSVPToEventArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  private?: InputMaybe<Scalars['Boolean']['input']>;
  response?: InputMaybe<Scalars['String']['input']>;
};


export type MutationRemoveForumEventStickerArgs = {
  forumEventId: Scalars['String']['input'];
  stickerId: Scalars['String']['input'];
};


export type MutationRemoveForumEventVoteArgs = {
  forumEventId: Scalars['String']['input'];
};


export type MutationRemoveGivingSeasonHeartArgs = {
  electionName: Scalars['String']['input'];
};


export type MutationUpdateSearchSynonymsArgs = {
  synonyms: Array<Scalars['String']['input']>;
};


export type MutationUserExpandFrontpageSectionArgs = {
  expanded: Scalars['Boolean']['input'];
  section: Scalars['String']['input'];
};


export type MutationUserUpdateSubforumMembershipArgs = {
  member: Scalars['Boolean']['input'];
  tagId: Scalars['String']['input'];
};


export type MutationaddOrUpvoteTagArgs = {
  postId?: InputMaybe<Scalars['String']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationaddTagsArgs = {
  postId?: InputMaybe<Scalars['String']['input']>;
  tagIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type MutationalignmentCommentArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationalignmentPostArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationanalyticsEventArgs = {
  events?: InputMaybe<Array<Scalars['JSON']['input']>>;
  now?: InputMaybe<Scalars['Date']['input']>;
};


export type MutationautosaveRevisionArgs = {
  contents: AutosaveContentType;
  postId: Scalars['String']['input'];
};


export type MutationclickRecommendationArgs = {
  postId: Scalars['String']['input'];
};


export type MutationconnectCrossposterArgs = {
  token?: InputMaybe<Scalars['String']['input']>;
};


export type MutationcreateAdvisorRequestArgs = {
  data: CreateAdvisorRequestDataInput;
};


export type MutationcreateBookArgs = {
  data: CreateBookDataInput;
};


export type MutationcreateChapterArgs = {
  data: CreateChapterDataInput;
};


export type MutationcreateCollectionArgs = {
  data: CreateCollectionDataInput;
};


export type MutationcreateCommentArgs = {
  data: CreateCommentDataInput;
};


export type MutationcreateCommentModeratorActionArgs = {
  data: CreateCommentModeratorActionDataInput;
};


export type MutationcreateConversationArgs = {
  data: CreateConversationDataInput;
};


export type MutationcreateCurationNoticeArgs = {
  data: CreateCurationNoticeDataInput;
};


export type MutationcreateDigestArgs = {
  data: CreateDigestDataInput;
};


export type MutationcreateDigestPostArgs = {
  data: CreateDigestPostDataInput;
};


export type MutationcreateElectionCandidateArgs = {
  data: CreateElectionCandidateDataInput;
};


export type MutationcreateElectionVoteArgs = {
  data: CreateElectionVoteDataInput;
};


export type MutationcreateElicitQuestionArgs = {
  data: CreateElicitQuestionDataInput;
};


export type MutationcreateForumEventArgs = {
  data: CreateForumEventDataInput;
};


export type MutationcreateJargonTermArgs = {
  data: CreateJargonTermDataInput;
};


export type MutationcreateLWEventArgs = {
  data: CreateLWEventDataInput;
};


export type MutationcreateLocalgroupArgs = {
  data: CreateLocalgroupDataInput;
};


export type MutationcreateMessageArgs = {
  data: CreateMessageDataInput;
};


export type MutationcreateModerationTemplateArgs = {
  data: CreateModerationTemplateDataInput;
};


export type MutationcreateModeratorActionArgs = {
  data: CreateModeratorActionDataInput;
};


export type MutationcreateMultiDocumentArgs = {
  data: CreateMultiDocumentDataInput;
};


export type MutationcreatePetrovDayActionArgs = {
  data: CreatePetrovDayActionDataInput;
};


export type MutationcreatePodcastEpisodeArgs = {
  data: CreatePodcastEpisodeDataInput;
};


export type MutationcreatePostArgs = {
  data: CreatePostDataInput;
};


export type MutationcreateRSSFeedArgs = {
  data: CreateRSSFeedDataInput;
};


export type MutationcreateReportArgs = {
  data: CreateReportDataInput;
};


export type MutationcreateSequenceArgs = {
  data: CreateSequenceDataInput;
};


export type MutationcreateSplashArtCoordinateArgs = {
  data: CreateSplashArtCoordinateDataInput;
};


export type MutationcreateSpotlightArgs = {
  data: CreateSpotlightDataInput;
};


export type MutationcreateSubscriptionArgs = {
  data: CreateSubscriptionDataInput;
};


export type MutationcreateSurveyArgs = {
  data: CreateSurveyDataInput;
};


export type MutationcreateSurveyQuestionArgs = {
  data: CreateSurveyQuestionDataInput;
};


export type MutationcreateSurveyResponseArgs = {
  data: CreateSurveyResponseDataInput;
};


export type MutationcreateSurveyScheduleArgs = {
  data: CreateSurveyScheduleDataInput;
};


export type MutationcreateTagArgs = {
  data: CreateTagDataInput;
};


export type MutationcreateTagFlagArgs = {
  data: CreateTagFlagDataInput;
};


export type MutationcreateUltraFeedEventArgs = {
  data: CreateUltraFeedEventDataInput;
};


export type MutationcreateUserArgs = {
  data: CreateUserDataInput;
};


export type MutationcreateUserEAGDetailArgs = {
  data: CreateUserEAGDetailDataInput;
};


export type MutationcreateUserJobAdArgs = {
  data: CreateUserJobAdDataInput;
};


export type MutationcreateUserMostValuablePostArgs = {
  data: CreateUserMostValuablePostDataInput;
};


export type MutationcreateUserRateLimitArgs = {
  data: CreateUserRateLimitDataInput;
};


export type MutationcreateUserTagRelArgs = {
  data: CreateUserTagRelDataInput;
};


export type MutationdismissRecommendationArgs = {
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationeditSurveyArgs = {
  name: Scalars['String']['input'];
  questions: Array<SurveyQuestionInfo>;
  surveyId: Scalars['String']['input'];
};


export type MutationflipSplashArtImageArgs = {
  reviewWinnerArtId: Scalars['String']['input'];
};


export type MutationgenerateCoverImagesForPostArgs = {
  postId: Scalars['String']['input'];
  prompt?: InputMaybe<Scalars['String']['input']>;
};


export type MutationgetNewJargonTermsArgs = {
  exampleAltTerm?: InputMaybe<Scalars['String']['input']>;
  exampleDefinition?: InputMaybe<Scalars['String']['input']>;
  examplePost?: InputMaybe<Scalars['String']['input']>;
  exampleTerm?: InputMaybe<Scalars['String']['input']>;
  glossaryPrompt?: InputMaybe<Scalars['String']['input']>;
  postId: Scalars['String']['input'];
};


export type MutationimportUrlAsDraftPostArgs = {
  url: Scalars['String']['input'];
};


export type MutationincreasePostViewCountArgs = {
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationinitiateConversationArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  moderator?: InputMaybe<Scalars['Boolean']['input']>;
  participantIds: Array<Scalars['String']['input']>;
};


export type MutationlockThreadArgs = {
  commentId: Scalars['String']['input'];
  until?: InputMaybe<Scalars['String']['input']>;
};


export type MutationloginArgs = {
  password?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};


export type MutationmarkAsReadOrUnreadArgs = {
  isRead?: InputMaybe<Scalars['Boolean']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationmarkConversationReadArgs = {
  conversationId: Scalars['String']['input'];
};


export type MutationmarkPostCommentsReadArgs = {
  postId: Scalars['String']['input'];
};


export type MutationmergeTagsArgs = {
  redirectSource: Scalars['Boolean']['input'];
  sourceTagId: Scalars['String']['input'];
  targetTagId: Scalars['String']['input'];
  transferSubtags: Scalars['Boolean']['input'];
};


export type MutationmoderateCommentArgs = {
  commentId?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  deletedPublic?: InputMaybe<Scalars['Boolean']['input']>;
  deletedReason?: InputMaybe<Scalars['String']['input']>;
};


export type MutationobserveRecommendationArgs = {
  postId: Scalars['String']['input'];
};


export type MutationperformVoteCommentArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteElectionCandidateArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteMessageArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteMultiDocumentArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVotePostArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteRevisionArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteTagArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationperformVoteTagRelArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationpromoteLensToMainArgs = {
  lensId: Scalars['String']['input'];
};


export type MutationpublishAndDeDuplicateSpotlightArgs = {
  spotlightId?: InputMaybe<Scalars['String']['input']>;
};


export type MutationreorderSummariesArgs = {
  parentDocumentCollectionName: Scalars['String']['input'];
  parentDocumentId: Scalars['String']['input'];
  summaryIds: Array<Scalars['String']['input']>;
};


export type MutationresetPasswordArgs = {
  email?: InputMaybe<Scalars['String']['input']>;
};


export type MutationresyncRssFeedArgs = {
  feedId: Scalars['String']['input'];
};


export type MutationrevertPostToRevisionArgs = {
  postId: Scalars['String']['input'];
  revisionId: Scalars['String']['input'];
};


export type MutationrevertTagToRevisionArgs = {
  revertToRevisionId: Scalars['String']['input'];
  tagId: Scalars['String']['input'];
};


export type MutationsendEventTriggeredDMArgs = {
  eventType: Scalars['String']['input'];
};


export type MutationsendNewDialogueMessageNotificationArgs = {
  dialogueHtml: Scalars['String']['input'];
  postId: Scalars['String']['input'];
};


export type MutationsetIsHiddenArgs = {
  isHidden: Scalars['Boolean']['input'];
  postId: Scalars['String']['input'];
};


export type MutationsetVoteCommentArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteElectionCandidateArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteMessageArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteMultiDocumentArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVotePostArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteRevisionArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteTagArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsetVoteTagRelArgs = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsignupArgs = {
  abTestKey?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  reCaptchaToken?: InputMaybe<Scalars['String']['input']>;
  subscribeToCurated?: InputMaybe<Scalars['Boolean']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
};


export type MutationsubmitReviewVoteArgs = {
  comment?: InputMaybe<Scalars['String']['input']>;
  dummy?: InputMaybe<Scalars['Boolean']['input']>;
  newQuadraticScore?: InputMaybe<Scalars['Int']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  quadraticChange?: InputMaybe<Scalars['Int']['input']>;
  qualitativeScore?: InputMaybe<Scalars['Int']['input']>;
  reactions?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  year?: InputMaybe<Scalars['String']['input']>;
};


export type MutationtoggleBookmarkArgs = {
  input: ToggleBookmarkInput;
};


export type MutationunlockPostArgs = {
  linkSharingKey: Scalars['String']['input'];
  postId: Scalars['String']['input'];
};


export type MutationunlockThreadArgs = {
  commentId: Scalars['String']['input'];
};


export type MutationupdateAdvisorRequestArgs = {
  data: UpdateAdvisorRequestDataInput;
  selector: SelectorInput;
};


export type MutationupdateBookArgs = {
  data: UpdateBookDataInput;
  selector: SelectorInput;
};


export type MutationupdateChapterArgs = {
  data: UpdateChapterDataInput;
  selector: SelectorInput;
};


export type MutationupdateCollectionArgs = {
  data: UpdateCollectionDataInput;
  selector: SelectorInput;
};


export type MutationupdateCommentArgs = {
  data: UpdateCommentDataInput;
  selector: SelectorInput;
};


export type MutationupdateCommentModeratorActionArgs = {
  data: UpdateCommentModeratorActionDataInput;
  selector: SelectorInput;
};


export type MutationupdateContinueReadingArgs = {
  postId: Scalars['String']['input'];
  sequenceId: Scalars['String']['input'];
};


export type MutationupdateConversationArgs = {
  data: UpdateConversationDataInput;
  selector: SelectorInput;
};


export type MutationupdateCurationNoticeArgs = {
  data: UpdateCurationNoticeDataInput;
  selector: SelectorInput;
};


export type MutationupdateDigestArgs = {
  data: UpdateDigestDataInput;
  selector: SelectorInput;
};


export type MutationupdateDigestPostArgs = {
  data: UpdateDigestPostDataInput;
  selector: SelectorInput;
};


export type MutationupdateElectionCandidateArgs = {
  data: UpdateElectionCandidateDataInput;
  selector: SelectorInput;
};


export type MutationupdateElectionVoteArgs = {
  data: UpdateElectionVoteDataInput;
  selector: SelectorInput;
};


export type MutationupdateElicitQuestionArgs = {
  data: UpdateElicitQuestionDataInput;
  selector: SelectorInput;
};


export type MutationupdateForumEventArgs = {
  data: UpdateForumEventDataInput;
  selector: SelectorInput;
};


export type MutationupdateJargonTermArgs = {
  data: UpdateJargonTermDataInput;
  selector: SelectorInput;
};


export type MutationupdateLlmConversationArgs = {
  data: UpdateLlmConversationDataInput;
  selector: SelectorInput;
};


export type MutationupdateLocalgroupArgs = {
  data: UpdateLocalgroupDataInput;
  selector: SelectorInput;
};


export type MutationupdateMessageArgs = {
  data: UpdateMessageDataInput;
  selector: SelectorInput;
};


export type MutationupdateModerationTemplateArgs = {
  data: UpdateModerationTemplateDataInput;
  selector: SelectorInput;
};


export type MutationupdateModeratorActionArgs = {
  data: UpdateModeratorActionDataInput;
  selector: SelectorInput;
};


export type MutationupdateMultiDocumentArgs = {
  data: UpdateMultiDocumentDataInput;
  selector: SelectorInput;
};


export type MutationupdateNotificationArgs = {
  data: UpdateNotificationDataInput;
  selector: SelectorInput;
};


export type MutationupdatePostArgs = {
  data: UpdatePostDataInput;
  selector: SelectorInput;
};


export type MutationupdateRSSFeedArgs = {
  data: UpdateRSSFeedDataInput;
  selector: SelectorInput;
};


export type MutationupdateReportArgs = {
  data: UpdateReportDataInput;
  selector: SelectorInput;
};


export type MutationupdateRevisionArgs = {
  data: UpdateRevisionDataInput;
  selector: SelectorInput;
};


export type MutationupdateSequenceArgs = {
  data: UpdateSequenceDataInput;
  selector: SelectorInput;
};


export type MutationupdateSpotlightArgs = {
  data: UpdateSpotlightDataInput;
  selector: SelectorInput;
};


export type MutationupdateSurveyArgs = {
  data: UpdateSurveyDataInput;
  selector: SelectorInput;
};


export type MutationupdateSurveyQuestionArgs = {
  data: UpdateSurveyQuestionDataInput;
  selector: SelectorInput;
};


export type MutationupdateSurveyResponseArgs = {
  data: UpdateSurveyResponseDataInput;
  selector: SelectorInput;
};


export type MutationupdateSurveyScheduleArgs = {
  data: UpdateSurveyScheduleDataInput;
  selector: SelectorInput;
};


export type MutationupdateTagArgs = {
  data: UpdateTagDataInput;
  selector: SelectorInput;
};


export type MutationupdateTagFlagArgs = {
  data: UpdateTagFlagDataInput;
  selector: SelectorInput;
};


export type MutationupdateUltraFeedEventArgs = {
  data: UpdateUltraFeedEventDataInput;
  selector: Scalars['String']['input'];
};


export type MutationupdateUserArgs = {
  data: UpdateUserDataInput;
  selector: SelectorInput;
};


export type MutationupdateUserEAGDetailArgs = {
  data: UpdateUserEAGDetailDataInput;
  selector: SelectorInput;
};


export type MutationupdateUserJobAdArgs = {
  data: UpdateUserJobAdDataInput;
  selector: SelectorInput;
};


export type MutationupdateUserMostValuablePostArgs = {
  data: UpdateUserMostValuablePostDataInput;
  selector: SelectorInput;
};


export type MutationupdateUserRateLimitArgs = {
  data: UpdateUserRateLimitDataInput;
  selector: SelectorInput;
};


export type MutationupdateUserTagRelArgs = {
  data: UpdateUserTagRelDataInput;
  selector: SelectorInput;
};


export type MutationuseEmailTokenArgs = {
  args?: InputMaybe<Scalars['JSON']['input']>;
  token?: InputMaybe<Scalars['String']['input']>;
};

export type MyDialoguesResult = {
  __typename?: 'MyDialoguesResult';
  results: Array<Post>;
};

export type NetKarmaChangesForAuthorsOverPeriod = {
  __typename?: 'NetKarmaChangesForAuthorsOverPeriod';
  netKarma: Maybe<Scalars['Int']['output']>;
  userId: Maybe<Scalars['String']['output']>;
};

export type NewUserCompletedProfile = {
  __typename?: 'NewUserCompletedProfile';
  displayName: Maybe<Scalars['String']['output']>;
  slug: Maybe<Scalars['String']['output']>;
  subscribedToDigest: Maybe<Scalars['Boolean']['output']>;
  username: Maybe<Scalars['String']['output']>;
  usernameUnset: Maybe<Scalars['Boolean']['output']>;
};

export type Notification = {
  __typename?: 'Notification';
  _id: Scalars['String']['output'];
  createdAt: Maybe<Scalars['Date']['output']>;
  deleted: Maybe<Scalars['Boolean']['output']>;
  documentId: Maybe<Scalars['String']['output']>;
  documentType: Maybe<Scalars['String']['output']>;
  emailed: Maybe<Scalars['Boolean']['output']>;
  extraData: Maybe<Scalars['JSON']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  link: Maybe<Scalars['String']['output']>;
  message: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  title: Maybe<Scalars['String']['output']>;
  type: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
  viewed: Maybe<Scalars['Boolean']['output']>;
  waitingForBatch: Maybe<Scalars['Boolean']['output']>;
};

export type NotificationCounts = {
  __typename?: 'NotificationCounts';
  checkedAt: Scalars['Date']['output'];
  faviconBadgeNumber: Scalars['Int']['output'];
  unreadNotifications: Scalars['Int']['output'];
  unreadPrivateMessages: Scalars['Int']['output'];
};

export type NotificationDisplaysResult = {
  __typename?: 'NotificationDisplaysResult';
  results: Array<Scalars['JSON']['output']>;
};

export type NotificationOutput = {
  __typename?: 'NotificationOutput';
  data: Maybe<Notification>;
};

export type NotificationSelector = {
  adminAlertNotifications?: InputMaybe<NotificationsAdminAlertNotificationsInput>;
  default?: InputMaybe<EmptyViewInput>;
  unreadUserNotifications?: InputMaybe<NotificationsUnreadUserNotificationsInput>;
  userNotifications?: InputMaybe<NotificationsUserNotificationsInput>;
};

export type NotificationsAdminAlertNotificationsInput = {
  type?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationsUnreadUserNotificationsInput = {
  lastViewedDate?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type NotificationsUserNotificationsInput = {
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  viewed?: InputMaybe<Scalars['String']['input']>;
};

export type PageCacheEntry = {
  __typename?: 'PageCacheEntry';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type PartiallyReadSequenceItemInput = {
  collectionId?: InputMaybe<Scalars['String']['input']>;
  lastReadPostId: Scalars['String']['input'];
  lastReadTime?: InputMaybe<Scalars['Date']['input']>;
  nextPostId: Scalars['String']['input'];
  numRead: Scalars['Int']['input'];
  numTotal: Scalars['Int']['input'];
  sequenceId?: InputMaybe<Scalars['String']['input']>;
};

export type PartiallyReadSequenceItemOutput = {
  __typename?: 'PartiallyReadSequenceItemOutput';
  collectionId: Maybe<Scalars['String']['output']>;
  lastReadPostId: Maybe<Scalars['String']['output']>;
  lastReadTime: Maybe<Scalars['Date']['output']>;
  nextPostId: Maybe<Scalars['String']['output']>;
  numRead: Maybe<Scalars['Int']['output']>;
  numTotal: Maybe<Scalars['Int']['output']>;
  sequenceId: Maybe<Scalars['String']['output']>;
};

export type PetrovDay2024CheckNumberOfIncomingData = {
  __typename?: 'PetrovDay2024CheckNumberOfIncomingData';
  count: Maybe<Scalars['Int']['output']>;
};

export type PetrovDayAction = {
  __typename?: 'PetrovDayAction';
  _id: Scalars['String']['output'];
  actionType: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  data: Maybe<Scalars['JSON']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type PetrovDayActionOutput = {
  __typename?: 'PetrovDayActionOutput';
  data: Maybe<PetrovDayAction>;
};

export type PetrovDayActionSelector = {
  adminConsole?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  getAction?: InputMaybe<PetrovDayActionsGetActionInput>;
  launchDashboard?: InputMaybe<PetrovDayActionsLaunchDashboardInput>;
  warningConsole?: InputMaybe<PetrovDayActionsWarningConsoleInput>;
};

export type PetrovDayActionsGetActionInput = {
  actionType?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type PetrovDayActionsLaunchDashboardInput = {
  side?: InputMaybe<Scalars['String']['input']>;
};

export type PetrovDayActionsWarningConsoleInput = {
  side?: InputMaybe<Scalars['String']['input']>;
};

export type PetrovDayCheckIfIncomingData = {
  __typename?: 'PetrovDayCheckIfIncomingData';
  createdAt: Maybe<Scalars['Date']['output']>;
  launched: Maybe<Scalars['Boolean']['output']>;
};

export type PetrovDayLaunch = {
  __typename?: 'PetrovDayLaunch';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  hashedLaunchCode: Maybe<Scalars['String']['output']>;
  launchCode: Scalars['String']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type PetrovDayLaunchMissileData = {
  __typename?: 'PetrovDayLaunchMissileData';
  createdAt: Maybe<Scalars['Date']['output']>;
  launchCode: Maybe<Scalars['String']['output']>;
};

export type Podcast = {
  __typename?: 'Podcast';
  _id: Scalars['String']['output'];
  applePodcastLink: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  spotifyPodcastLink: Maybe<Scalars['String']['output']>;
  title: Scalars['String']['output'];
};

export type PodcastEpisode = {
  __typename?: 'PodcastEpisode';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  episodeLink: Scalars['String']['output'];
  externalEpisodeId: Scalars['String']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  podcast: Podcast;
  podcastId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  title: Scalars['String']['output'];
};

export type PodcastEpisodeByExternalIdInput = {
  _id?: InputMaybe<Scalars['String']['input']>;
  externalEpisodeId?: InputMaybe<Scalars['String']['input']>;
};

export type PodcastEpisodeOutput = {
  __typename?: 'PodcastEpisodeOutput';
  data: Maybe<PodcastEpisode>;
};

export type PodcastEpisodeSelector = {
  default?: InputMaybe<EmptyViewInput>;
  episodeByExternalId?: InputMaybe<PodcastEpisodeByExternalIdInput>;
};

export type PodcastSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type PopularCommentsResult = {
  __typename?: 'PopularCommentsResult';
  results: Array<Comment>;
};

export type Post = {
  __typename?: 'Post';
  _id: Scalars['String']['output'];
  activateRSVPs: Maybe<Scalars['Boolean']['output']>;
  af: Scalars['Boolean']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afCommentCount: Scalars['Float']['output'];
  afDate: Maybe<Scalars['Date']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afLastCommentedAt: Maybe<Scalars['Date']['output']>;
  afSticky: Scalars['Boolean']['output'];
  afVoteCount: Maybe<Scalars['Float']['output']>;
  agentFoundationsId: Maybe<Scalars['String']['output']>;
  annualReviewMarketIsResolved: Maybe<Scalars['Boolean']['output']>;
  annualReviewMarketProbability: Maybe<Scalars['Float']['output']>;
  annualReviewMarketUrl: Maybe<Scalars['String']['output']>;
  annualReviewMarketYear: Maybe<Scalars['Int']['output']>;
  author: Maybe<Scalars['String']['output']>;
  authorIsUnreviewed: Scalars['Boolean']['output'];
  autoFrontpage: Maybe<Scalars['String']['output']>;
  automatedContentEvaluations: Maybe<AutomatedContentEvaluation>;
  bannedUserIds: Maybe<Array<Scalars['String']['output']>>;
  baseScore: Scalars['Float']['output'];
  bestAnswer: Maybe<Comment>;
  canonicalBook: Maybe<Book>;
  canonicalBookId: Maybe<Scalars['String']['output']>;
  canonicalCollection: Maybe<Collection>;
  canonicalCollectionSlug: Maybe<Scalars['String']['output']>;
  canonicalNextPostSlug: Maybe<Scalars['String']['output']>;
  canonicalPrevPostSlug: Maybe<Scalars['String']['output']>;
  canonicalSequence: Maybe<Sequence>;
  canonicalSequenceId: Maybe<Scalars['String']['output']>;
  canonicalSource: Maybe<Scalars['String']['output']>;
  clickCount: Maybe<Scalars['Float']['output']>;
  coauthorStatuses: Maybe<Array<CoauthorStatusOutput>>;
  coauthorUserIds: Array<Scalars['String']['output']>;
  coauthors: Maybe<Array<User>>;
  collabEditorDialogue: Scalars['Boolean']['output'];
  collectionTitle: Maybe<Scalars['String']['output']>;
  commentCount: Scalars['Float']['output'];
  commentEmojiReactors: Maybe<Scalars['JSON']['output']>;
  commentSortOrder: Maybe<Scalars['String']['output']>;
  commentsLocked: Maybe<Scalars['Boolean']['output']>;
  commentsLockedToAccountsCreatedAfter: Maybe<Scalars['Date']['output']>;
  contactInfo: Maybe<Scalars['String']['output']>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Maybe<Scalars['Date']['output']>;
  curatedDate: Maybe<Scalars['Date']['output']>;
  curationNotices: Maybe<Array<CurationNotice>>;
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserReviewVote: Maybe<ReviewVote>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  customHighlight: Maybe<Revision>;
  customHighlight_latest: Maybe<Scalars['String']['output']>;
  debate: Scalars['Boolean']['output'];
  defaultRecommendation: Scalars['Boolean']['output'];
  deletedDraft: Scalars['Boolean']['output'];
  dialogTooltipPreview: Maybe<Scalars['String']['output']>;
  dialogueMessageContents: Maybe<Scalars['String']['output']>;
  disableRecommendation: Scalars['Boolean']['output'];
  disableSidenotes: Scalars['Boolean']['output'];
  domain: Maybe<Scalars['String']['output']>;
  draft: Maybe<Scalars['Boolean']['output']>;
  emailShareUrl: Maybe<Scalars['String']['output']>;
  emojiReactors: Maybe<Scalars['JSON']['output']>;
  endTime: Maybe<Scalars['Date']['output']>;
  eventImageId: Maybe<Scalars['String']['output']>;
  eventRegistrationLink: Maybe<Scalars['String']['output']>;
  eventType: Maybe<Scalars['String']['output']>;
  extendedScore: Maybe<Scalars['JSON']['output']>;
  facebookLink: Maybe<Scalars['String']['output']>;
  facebookShareUrl: Maybe<Scalars['String']['output']>;
  feed: Maybe<RSSFeed>;
  feedId: Maybe<Scalars['String']['output']>;
  feedLink: Maybe<Scalars['String']['output']>;
  finalReviewVoteScoreAF: Scalars['Float']['output'];
  finalReviewVoteScoreAllKarma: Scalars['Float']['output'];
  finalReviewVoteScoreHighKarma: Scalars['Float']['output'];
  finalReviewVotesAF: Array<Scalars['Float']['output']>;
  finalReviewVotesAllKarma: Array<Scalars['Float']['output']>;
  finalReviewVotesHighKarma: Array<Scalars['Float']['output']>;
  firstVideoAttribsForPreview: Maybe<Scalars['JSON']['output']>;
  fmCrosspost: Maybe<CrosspostOutput>;
  forceAllowType3Audio: Scalars['Boolean']['output'];
  frontpageClassification: Maybe<FrontpageClassification>;
  frontpageDate: Maybe<Scalars['Date']['output']>;
  generateDraftJargon: Maybe<Scalars['Boolean']['output']>;
  globalEvent: Scalars['Boolean']['output'];
  glossary: Array<JargonTerm>;
  googleLocation: Maybe<Scalars['JSON']['output']>;
  group: Maybe<Localgroup>;
  groupId: Maybe<Scalars['String']['output']>;
  hasCoauthorPermission: Scalars['Boolean']['output'];
  hiddenRelatedQuestion: Scalars['Boolean']['output'];
  hideAuthor: Scalars['Boolean']['output'];
  hideCommentKarma: Scalars['Boolean']['output'];
  hideFromPopularComments: Maybe<Scalars['Boolean']['output']>;
  hideFromRecentDiscussions: Scalars['Boolean']['output'];
  hideFrontpageComments: Scalars['Boolean']['output'];
  htmlBody: Maybe<Scalars['String']['output']>;
  ignoreRateLimits: Maybe<Scalars['Boolean']['output']>;
  isEvent: Scalars['Boolean']['output'];
  isFuture: Scalars['Boolean']['output'];
  isRead: Maybe<Scalars['Boolean']['output']>;
  joinEventLink: Maybe<Scalars['String']['output']>;
  languageModelSummary: Maybe<Scalars['String']['output']>;
  lastCommentPromotedAt: Maybe<Scalars['Date']['output']>;
  lastCommentedAt: Scalars['Date']['output'];
  lastPromotedComment: Maybe<Comment>;
  lastVisitedAt: Maybe<Scalars['Date']['output']>;
  legacy: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  legacyId: Maybe<Scalars['String']['output']>;
  legacySpam: Scalars['Boolean']['output'];
  linkSharingKey: Maybe<Scalars['String']['output']>;
  linkSharingKeyUsedBy: Maybe<Array<Scalars['String']['output']>>;
  linkUrl: Maybe<Scalars['String']['output']>;
  localEndTime: Maybe<Scalars['Date']['output']>;
  localStartTime: Maybe<Scalars['Date']['output']>;
  location: Maybe<Scalars['String']['output']>;
  manifoldReviewMarketId: Maybe<Scalars['String']['output']>;
  maxBaseScore: Scalars['Float']['output'];
  meetupLink: Maybe<Scalars['String']['output']>;
  meta: Scalars['Boolean']['output'];
  metaDate: Maybe<Scalars['Date']['output']>;
  metaSticky: Scalars['Boolean']['output'];
  moderationGuidelines: Maybe<Revision>;
  moderationGuidelines_latest: Maybe<Scalars['String']['output']>;
  moderationStyle: Maybe<Scalars['String']['output']>;
  modifiedAt: Maybe<Scalars['Date']['output']>;
  mongoLocation: Maybe<Scalars['JSON']['output']>;
  mostRecentPublishedDialogueResponseDate: Maybe<Scalars['Date']['output']>;
  myEditorAccess: Scalars['String']['output'];
  nextDayReminderSent: Scalars['Boolean']['output'];
  nextPost: Maybe<Post>;
  noIndex: Scalars['Boolean']['output'];
  nominationCount2018: Scalars['Float']['output'];
  nominationCount2019: Scalars['Float']['output'];
  onlineEvent: Scalars['Boolean']['output'];
  onlyVisibleToEstablishedAccounts: Scalars['Boolean']['output'];
  onlyVisibleToLoggedIn: Scalars['Boolean']['output'];
  organizerIds: Maybe<Array<Scalars['String']['output']>>;
  organizers: Maybe<Array<User>>;
  originalPostRelationSourceId: Maybe<Scalars['String']['output']>;
  pageUrl: Scalars['String']['output'];
  pageUrlRelative: Maybe<Scalars['String']['output']>;
  pingbacks: Maybe<Scalars['JSON']['output']>;
  podcastEpisode: Maybe<PodcastEpisode>;
  podcastEpisodeId: Maybe<Scalars['String']['output']>;
  positiveReviewVoteCount: Scalars['Float']['output'];
  postCategory: PostCategory;
  postedAt: Scalars['Date']['output'];
  postedAtFormatted: Maybe<Scalars['String']['output']>;
  prevPost: Maybe<Post>;
  question: Scalars['Boolean']['output'];
  readTimeMinutes: Scalars['Int']['output'];
  readTimeMinutesOverride: Maybe<Scalars['Float']['output']>;
  recentComments: Maybe<Array<Comment>>;
  referrer: Maybe<Scalars['String']['output']>;
  rejected: Scalars['Boolean']['output'];
  rejectedByUser: Maybe<User>;
  rejectedByUserId: Maybe<Scalars['String']['output']>;
  rejectedReason: Maybe<Scalars['String']['output']>;
  reviewCount: Scalars['Float']['output'];
  reviewCount2018: Scalars['Float']['output'];
  reviewCount2019: Scalars['Float']['output'];
  reviewForAlignmentUserId: Maybe<Scalars['String']['output']>;
  reviewForCuratedUserId: Maybe<Scalars['String']['output']>;
  reviewVoteCount: Scalars['Float']['output'];
  reviewVoteScoreAF: Scalars['Float']['output'];
  reviewVoteScoreAllKarma: Scalars['Float']['output'];
  reviewVoteScoreHighKarma: Scalars['Float']['output'];
  reviewVotesAF: Array<Scalars['Float']['output']>;
  reviewVotesAllKarma: Array<Scalars['Float']['output']>;
  reviewVotesHighKarma: Array<Scalars['Float']['output']>;
  reviewWinner: Maybe<ReviewWinner>;
  reviewedByUser: Maybe<User>;
  reviewedByUserId: Maybe<Scalars['String']['output']>;
  reviews: Maybe<Array<Comment>>;
  revisions: Maybe<Array<Revision>>;
  rsvpCounts: Scalars['JSON']['output'];
  rsvps: Maybe<Array<Scalars['JSON']['output']>>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  scoreExceeded2Date: Maybe<Scalars['Date']['output']>;
  scoreExceeded30Date: Maybe<Scalars['Date']['output']>;
  scoreExceeded45Date: Maybe<Scalars['Date']['output']>;
  scoreExceeded75Date: Maybe<Scalars['Date']['output']>;
  scoreExceeded125Date: Maybe<Scalars['Date']['output']>;
  scoreExceeded200Date: Maybe<Scalars['Date']['output']>;
  sequence: Maybe<Sequence>;
  shareWithUsers: Maybe<Array<Scalars['String']['output']>>;
  sharingSettings: Maybe<Scalars['JSON']['output']>;
  shortform: Scalars['Boolean']['output'];
  sideCommentVisibility: Maybe<Scalars['String']['output']>;
  sideComments: Maybe<Scalars['JSON']['output']>;
  sideCommentsCache: Maybe<SideCommentCache>;
  slug: Scalars['String']['output'];
  socialPreview: Maybe<SocialPreviewOutput>;
  socialPreviewData: SocialPreviewType;
  socialPreviewImageAutoUrl: Maybe<Scalars['String']['output']>;
  socialPreviewImageId: Maybe<Scalars['String']['output']>;
  socialPreviewImageUrl: Maybe<Scalars['String']['output']>;
  sourcePostRelations: Array<PostRelation>;
  spotlight: Maybe<Spotlight>;
  startTime: Maybe<Scalars['Date']['output']>;
  status: Scalars['Float']['output'];
  sticky: Scalars['Boolean']['output'];
  stickyPriority: Scalars['Int']['output'];
  subforumTag: Maybe<Tag>;
  subforumTagId: Maybe<Scalars['String']['output']>;
  submitToFrontpage: Scalars['Boolean']['output'];
  suggestForAlignmentUserIds: Array<Scalars['String']['output']>;
  suggestForAlignmentUsers: Array<User>;
  suggestForCuratedUserIds: Maybe<Array<Scalars['String']['output']>>;
  suggestForCuratedUsernames: Maybe<Scalars['String']['output']>;
  swrCachingEnabled: Maybe<Scalars['Boolean']['output']>;
  tableOfContents: Maybe<Scalars['JSON']['output']>;
  tableOfContentsRevision: Maybe<Scalars['JSON']['output']>;
  tagRel: Maybe<TagRel>;
  tagRelevance: Maybe<Scalars['JSON']['output']>;
  tags: Array<Tag>;
  targetPostRelations: Array<PostRelation>;
  title: Scalars['String']['output'];
  topLevelCommentCount: Scalars['Float']['output'];
  totalDialogueResponseCount: Scalars['Int']['output'];
  twitterShareUrl: Maybe<Scalars['String']['output']>;
  types: Maybe<Array<Scalars['String']['output']>>;
  unlisted: Scalars['Boolean']['output'];
  unreadDebateResponseCount: Scalars['Int']['output'];
  url: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userAgent: Maybe<Scalars['String']['output']>;
  userIP: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
  usersSharedWith: Maybe<Array<User>>;
  version: Maybe<Scalars['String']['output']>;
  viewCount: Maybe<Scalars['Float']['output']>;
  voteCount: Scalars['Float']['output'];
  votingSystem: Maybe<Scalars['String']['output']>;
  wasEverUndrafted: Maybe<Scalars['Boolean']['output']>;
  website: Maybe<Scalars['String']['output']>;
  wordCount: Maybe<Scalars['Int']['output']>;
};


export type PostcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type PostcustomHighlightArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type PostdialogueMessageContentsArgs = {
  dialogueMessageId?: InputMaybe<Scalars['String']['input']>;
};


export type PostmoderationGuidelinesArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type PostnextPostArgs = {
  sequenceId?: InputMaybe<Scalars['String']['input']>;
};


export type PostprevPostArgs = {
  sequenceId?: InputMaybe<Scalars['String']['input']>;
};


export type PostrecentCommentsArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
};


export type PostrevisionsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type PostsequenceArgs = {
  prevOrNext?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
};


export type PosttableOfContentsRevisionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type PosttagRelArgs = {
  tagId?: InputMaybe<Scalars['String']['input']>;
};

export type PostAnalytics2Result = {
  __typename?: 'PostAnalytics2Result';
  _id: Maybe<Scalars['String']['output']>;
  comments: Maybe<Scalars['Int']['output']>;
  karma: Maybe<Scalars['Int']['output']>;
  meanReadingTime: Maybe<Scalars['Float']['output']>;
  postedAt: Maybe<Scalars['Date']['output']>;
  reads: Maybe<Scalars['Int']['output']>;
  slug: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  uniqueViews: Maybe<Scalars['Int']['output']>;
  views: Maybe<Scalars['Int']['output']>;
};

export type PostAnalyticsResult = {
  __typename?: 'PostAnalyticsResult';
  allViews: Maybe<Scalars['Int']['output']>;
  medianReadingTime: Maybe<Scalars['Int']['output']>;
  uniqueClientViews: Maybe<Scalars['Int']['output']>;
  uniqueClientViews5Min: Maybe<Scalars['Int']['output']>;
  uniqueClientViews10Sec: Maybe<Scalars['Int']['output']>;
  uniqueClientViewsSeries: Maybe<Array<Maybe<UniqueClientViewsSeries>>>;
};

export type PostCategory =
  | 'linkpost'
  | 'post'
  | 'question';

export type PostDefaultViewInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostKarmaChange = {
  __typename?: 'PostKarmaChange';
  _id: Scalars['String']['output'];
  addedReacts: Maybe<Array<ReactionChange>>;
  collectionName: Scalars['String']['output'];
  eaAddedReacts: Maybe<Scalars['JSON']['output']>;
  postId: Scalars['String']['output'];
  scoreChange: Scalars['Int']['output'];
  slug: Scalars['String']['output'];
  title: Maybe<Scalars['String']['output']>;
};

export type PostMetadataInput = {
  postId: Scalars['String']['input'];
};

export type PostMetadataOutput = {
  __typename?: 'PostMetadataOutput';
  postId: Scalars['String']['output'];
};

export type PostOutput = {
  __typename?: 'PostOutput';
  data: Maybe<Post>;
};

export type PostRecommendation = {
  __typename?: 'PostRecommendation';
  _id: Scalars['String']['output'];
  clickedAt: Maybe<Scalars['Date']['output']>;
  clientId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  lastRecommendedAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Maybe<Scalars['String']['output']>;
  recommendationCount: Maybe<Scalars['Int']['output']>;
  schemaVersion: Scalars['Float']['output'];
  strategyName: Maybe<Scalars['String']['output']>;
  strategySettings: Maybe<Scalars['JSON']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type PostRelation = {
  __typename?: 'PostRelation';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  order: Maybe<Scalars['Float']['output']>;
  schemaVersion: Scalars['Float']['output'];
  sourcePost: Maybe<Post>;
  sourcePostId: Scalars['String']['output'];
  targetPost: Maybe<Post>;
  targetPostId: Scalars['String']['output'];
  type: Scalars['String']['output'];
};

export type PostRelationSelector = {
  allPostRelations?: InputMaybe<PostRelationsAllPostRelationsInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type PostRelationsAllPostRelationsInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type PostReviewFilter = {
  endDate?: InputMaybe<Scalars['Date']['input']>;
  minKarma?: InputMaybe<Scalars['Int']['input']>;
  showEvents?: InputMaybe<Scalars['Boolean']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
};

export type PostReviewSort = {
  karma?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PostSelector = {
  afRecentDiscussionThreadsList?: InputMaybe<PostsAfRecentDiscussionThreadsListInput>;
  alignmentSuggestedPosts?: InputMaybe<PostsAlignmentSuggestedPostsInput>;
  all_drafts?: InputMaybe<PostsAll_draftsInput>;
  community?: InputMaybe<PostsCommunityInput>;
  communityResourcePosts?: InputMaybe<PostsCommunityResourcePostsInput>;
  communityRss?: InputMaybe<PostsCommunityRssInput>;
  curated?: InputMaybe<PostsCuratedInput>;
  curatedRss?: InputMaybe<PostsCuratedRssInput>;
  currentOpenThread?: InputMaybe<PostsCurrentOpenThreadInput>;
  daily?: InputMaybe<PostsDailyInput>;
  default?: InputMaybe<PostDefaultViewInput>;
  drafts?: InputMaybe<PostsDraftsInput>;
  events?: InputMaybe<PostsEventsInput>;
  eventsInTimeRange?: InputMaybe<PostsEventsInTimeRangeInput>;
  frontpage?: InputMaybe<PostsFrontpageInput>;
  frontpageReviewWidget?: InputMaybe<PostsFrontpageReviewWidgetInput>;
  frontpageRss?: InputMaybe<PostsFrontpageRssInput>;
  globalEvents?: InputMaybe<PostsGlobalEventsInput>;
  hasEverDialogued?: InputMaybe<PostsHasEverDialoguedInput>;
  legacyIdPost?: InputMaybe<PostsLegacyIdPostInput>;
  magic?: InputMaybe<PostsMagicInput>;
  metaRss?: InputMaybe<PostsMetaRssInput>;
  myBookmarkedPosts?: InputMaybe<PostsMyBookmarkedPostsInput>;
  nearbyEvents?: InputMaybe<PostsNearbyEventsInput>;
  new?: InputMaybe<PostsNewInput>;
  nominatablePostsByVote?: InputMaybe<PostsNominatablePostsByVoteInput>;
  nominations2018?: InputMaybe<PostsNominations2018Input>;
  nominations2019?: InputMaybe<PostsNominations2019Input>;
  nonEventGroupPosts?: InputMaybe<PostsNonEventGroupPostsInput>;
  old?: InputMaybe<PostsOldInput>;
  pastEvents?: InputMaybe<PostsPastEventsInput>;
  pingbackPosts?: InputMaybe<PostsPingbackPostsInput>;
  postsWithBannedUsers?: InputMaybe<PostsPostsWithBannedUsersInput>;
  recentComments?: InputMaybe<PostsRecentCommentsInput>;
  recentDiscussionThreadsList?: InputMaybe<PostsRecentDiscussionThreadsListInput>;
  recentQuestionActivity?: InputMaybe<PostsRecentQuestionActivityInput>;
  rejected?: InputMaybe<PostsRejectedInput>;
  reviewFinalVoting?: InputMaybe<PostsReviewFinalVotingInput>;
  reviewQuickPage?: InputMaybe<PostsReviewQuickPageInput>;
  reviewRecentDiscussionThreadsList2018?: InputMaybe<PostsReviewRecentDiscussionThreadsList2018Input>;
  reviewRecentDiscussionThreadsList2019?: InputMaybe<PostsReviewRecentDiscussionThreadsList2019Input>;
  reviewVoting?: InputMaybe<PostsReviewVotingInput>;
  reviews2018?: InputMaybe<PostsReviews2018Input>;
  reviews2019?: InputMaybe<PostsReviews2019Input>;
  rss?: InputMaybe<PostsRssInput>;
  scheduled?: InputMaybe<PostsScheduledInput>;
  slugPost?: InputMaybe<PostsSlugPostInput>;
  stickied?: InputMaybe<PostsStickiedInput>;
  sunshineCuratedSuggestions?: InputMaybe<PostsSunshineCuratedSuggestionsInput>;
  sunshineNewPosts?: InputMaybe<PostsSunshineNewPostsInput>;
  sunshineNewUsersPosts?: InputMaybe<PostsSunshineNewUsersPostsInput>;
  tagRelevance?: InputMaybe<PostsTagRelevanceInput>;
  tbdEvents?: InputMaybe<PostsTbdEventsInput>;
  timeframe?: InputMaybe<PostsTimeframeInput>;
  top?: InputMaybe<PostsTopInput>;
  topQuestions?: InputMaybe<PostsTopQuestionsInput>;
  unlisted?: InputMaybe<PostsUnlistedInput>;
  upcomingEvents?: InputMaybe<PostsUpcomingEventsInput>;
  userAFSubmissions?: InputMaybe<PostsUserAFSubmissionsInput>;
  userPosts?: InputMaybe<PostsUserPostsInput>;
  voting2019?: InputMaybe<PostsVoting2019Input>;
};

export type PostWithApprovedJargon = {
  __typename?: 'PostWithApprovedJargon';
  jargonTerms: Array<JargonTerm>;
  post: Post;
};

export type PostsAfRecentDiscussionThreadsListInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsAlignmentSuggestedPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsAll_draftsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsBySubscribedAuthorsResult = {
  __typename?: 'PostsBySubscribedAuthorsResult';
  results: Array<Post>;
};

export type PostsCommunityInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsCommunityResourcePostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsCommunityRssInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsCuratedInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsCuratedRssInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsCurrentOpenThreadInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsDailyInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsDraftsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeArchived?: InputMaybe<Scalars['Boolean']['input']>;
  includeDraftEvents?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  includeShared?: InputMaybe<Scalars['Boolean']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortDraftsBy?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsEventsInTimeRangeInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  globalEvent?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  onlineEvent?: InputMaybe<Scalars['Boolean']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsFrontpageInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsFrontpageReviewWidgetInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  reviewPhase?: InputMaybe<Scalars['String']['input']>;
  reviewYear?: InputMaybe<Scalars['Int']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsFrontpageRssInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsGlobalEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  eventType?: InputMaybe<Array<Scalars['String']['input']>>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  onlineEvent?: InputMaybe<Scalars['Boolean']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsHasEverDialoguedInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsLegacyIdPostInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsMagicInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  forum?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsMetaRssInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsMyBookmarkedPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNearbyEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  distance?: InputMaybe<Scalars['Float']['input']>;
  eventType?: InputMaybe<Array<Scalars['String']['input']>>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  filters?: InputMaybe<Array<Scalars['String']['input']>>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  lat?: InputMaybe<Scalars['Float']['input']>;
  lng?: InputMaybe<Scalars['Float']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  onlineEvent?: InputMaybe<Scalars['Boolean']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNewInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  forum?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNominatablePostsByVoteInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  requiredFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  requiredUnnominated?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNominations2018Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortByMost?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNominations2019Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortByMost?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsNonEventGroupPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsOldInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsPastEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsPingbackPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postId?: InputMaybe<Scalars['String']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsPostsWithBannedUsersInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsRecentCommentsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsRecentDiscussionThreadsListInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsRecentQuestionActivityInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsRejectedInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviewFinalVotingInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviewQuickPageInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviewRecentDiscussionThreadsList2018Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviewRecentDiscussionThreadsList2019Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['String']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviewVotingInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  reviewPhase?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviews2018Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsReviews2019Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsRssInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  forum?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsScheduledInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsSlugPostInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsStickiedInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  forum?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsSunshineCuratedSuggestionsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  audioOnly?: InputMaybe<Scalars['Boolean']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsSunshineNewPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsSunshineNewUsersPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsTagRelevanceInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsTbdEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsTimeframeInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsTopInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  forum?: InputMaybe<Scalars['Boolean']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsTopQuestionsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsUnlistedInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsUpcomingEventsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsUserAFSubmissionsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsUserCommentedOnResult = {
  __typename?: 'PostsUserCommentedOnResult';
  posts: Maybe<Array<Post>>;
};

export type PostsUserPostsInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsVoting2019Input = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  curatedAfter?: InputMaybe<Scalars['String']['input']>;
  exactPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  excludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  filter?: InputMaybe<Scalars['String']['input']>;
  filterSettings?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  includeRelatedQuestions?: InputMaybe<Scalars['String']['input']>;
  karmaThreshold?: InputMaybe<Scalars['Int']['input']>;
  notPostIds?: InputMaybe<Array<Scalars['String']['input']>>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  sortedBy?: InputMaybe<Scalars['String']['input']>;
  timeField?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  view?: InputMaybe<Scalars['String']['input']>;
};

export type PostsWithActiveDiscussionResult = {
  __typename?: 'PostsWithActiveDiscussionResult';
  results: Array<Post>;
};

export type PostsWithApprovedJargonResult = {
  __typename?: 'PostsWithApprovedJargonResult';
  results: Array<PostWithApprovedJargon>;
};

export type Query = {
  __typename?: 'Query';
  ActiveTagCount: Scalars['Int']['output'];
  AdminMetadata: Maybe<Scalars['String']['output']>;
  AirtableLeaderboards: Array<AirtableLeaderboardResult>;
  AllTagsActivityFeed: AllTagsActivityFeedQueryResults;
  AnalyticsSeries: Maybe<Array<Maybe<AnalyticsSeriesValue>>>;
  ArbitalPageData: Maybe<ArbitalPageData>;
  CommentEmbeddingSearch: Array<Comment>;
  CommentEmbeddingSimilaritySearch: Array<Comment>;
  CommentsWithReacts: Maybe<CommentsWithReactsResult>;
  ContinueReading: Maybe<Array<RecommendResumeSequence>>;
  CrossedKarmaThreshold: Maybe<CrossedKarmaThresholdResult>;
  CuratedAndPopularThisWeek: Maybe<CuratedAndPopularThisWeekResult>;
  CurrentFrontpageSurvey: Maybe<SurveySchedule>;
  DigestHighlights: Maybe<DigestHighlightsResult>;
  DigestPlannerData: Array<DigestPlannerPost>;
  DigestPosts: Maybe<Array<Post>>;
  DigestPostsThisWeek: Maybe<DigestPostsThisWeekResult>;
  ElicitBlockData: Maybe<ElicitBlockData>;
  EmailPreview: Maybe<Array<Maybe<EmailPreview>>>;
  GetAllReviewWinners: Array<Post>;
  GetRandomUser: Maybe<User>;
  GetUserBySlug: Maybe<User>;
  GivingSeasonHearts: Array<GivingSeasonHeart>;
  HomepageCommunityEvents: HomepageCommunityEventMarkersResult;
  IsDisplayNameTaken: Scalars['Boolean']['output'];
  Lightcone2024FundraiserStripeAmounts: Maybe<Array<Scalars['Int']['output']>>;
  MigrationsDashboard: Maybe<MigrationsDashboardData>;
  MultiPostAnalytics: MultiPostAnalyticsResult;
  MyDialogues: Maybe<MyDialoguesResult>;
  NetKarmaChangesForAuthorsOverPeriod: Array<NetKarmaChangesForAuthorsOverPeriod>;
  NotificationDisplays: Maybe<NotificationDisplaysResult>;
  PetrovDay2024CheckNumberOfIncoming: Maybe<PetrovDay2024CheckNumberOfIncomingData>;
  PetrovDayCheckIfIncoming: Maybe<PetrovDayCheckIfIncomingData>;
  PopularComments: Maybe<PopularCommentsResult>;
  PostAnalytics: PostAnalyticsResult;
  PostIsCriticism: Maybe<Scalars['Boolean']['output']>;
  PostsBySubscribedAuthors: Maybe<PostsBySubscribedAuthorsResult>;
  PostsUserCommentedOn: Maybe<UserReadHistoryResult>;
  PostsWithActiveDiscussion: Maybe<PostsWithActiveDiscussionResult>;
  PostsWithApprovedJargon: Maybe<PostsWithApprovedJargonResult>;
  RandomTag: Tag;
  RecentDiscussionFeed: RecentDiscussionFeedQueryResults;
  RecentlyActiveDialogues: Maybe<RecentlyActiveDialoguesResult>;
  RecombeeHybridPosts: Maybe<RecombeeHybridPostsResult>;
  RecombeeLatestPosts: Maybe<RecombeeLatestPostsResult>;
  Recommendations: Maybe<Array<Post>>;
  RevisionsDiff: Maybe<Scalars['String']['output']>;
  RssPostChanges: RssPostChangeInfo;
  SearchSynonyms: Array<Scalars['String']['output']>;
  SiteData: Maybe<Site>;
  SubforumMagicFeed: SubforumMagicFeedQueryResults;
  SubforumNewFeed: SubforumNewFeedQueryResults;
  SubforumOldFeed: SubforumOldFeedQueryResults;
  SubforumRecentCommentsFeed: SubforumRecentCommentsFeedQueryResults;
  SubforumTopFeed: SubforumTopFeedQueryResults;
  SubscribedFeed: SubscribedFeedQueryResults;
  SuggestedFeedSubscriptionUsers: Maybe<SuggestedFeedSubscriptionUsersResult>;
  SuggestedTopActiveUsers: Maybe<SuggestedTopActiveUsersResult>;
  TagHistoryFeed: TagHistoryFeedQueryResults;
  TagPreview: Maybe<TagPreviewWithSummaries>;
  TagUpdatesByUser: Maybe<Array<TagUpdates>>;
  TagUpdatesInTimeBlock: Array<TagUpdates>;
  TagsByCoreTagId: TagWithTotalCount;
  UltraFeed: UltraFeedQueryResults;
  UltraFeedSubscriptions: UltraFeedQueryResults;
  UserReadHistory: Maybe<UserReadHistoryResult>;
  UserReadsPerCoreTag: Array<UserCoreTagReads>;
  UserWrappedDataByYear: Maybe<WrappedDataByYear>;
  UsersReadPostsOfTargetUser: Maybe<Array<Post>>;
  advisorRequest: Maybe<SingleAdvisorRequestOutput>;
  advisorRequests: Maybe<MultiAdvisorRequestOutput>;
  arbitalTagContentRel: Maybe<SingleArbitalTagContentRelOutput>;
  arbitalTagContentRels: Maybe<MultiArbitalTagContentRelOutput>;
  ban: Maybe<SingleBanOutput>;
  bans: Maybe<MultiBanOutput>;
  book: Maybe<SingleBookOutput>;
  bookmark: Maybe<SingleBookmarkOutput>;
  bookmarks: Maybe<MultiBookmarkOutput>;
  books: Maybe<MultiBookOutput>;
  chapter: Maybe<SingleChapterOutput>;
  chapters: Maybe<MultiChapterOutput>;
  ckEditorUserSession: Maybe<SingleCkEditorUserSessionOutput>;
  ckEditorUserSessions: Maybe<MultiCkEditorUserSessionOutput>;
  clientId: Maybe<SingleClientIdOutput>;
  clientIds: Maybe<MultiClientIdOutput>;
  collection: Maybe<SingleCollectionOutput>;
  collections: Maybe<MultiCollectionOutput>;
  comment: Maybe<SingleCommentOutput>;
  commentModeratorAction: Maybe<SingleCommentModeratorActionOutput>;
  commentModeratorActions: Maybe<MultiCommentModeratorActionOutput>;
  comments: Maybe<MultiCommentOutput>;
  conversation: Maybe<SingleConversationOutput>;
  conversations: Maybe<MultiConversationOutput>;
  convertDocument: Maybe<Scalars['JSON']['output']>;
  curationNotice: Maybe<SingleCurationNoticeOutput>;
  curationNotices: Maybe<MultiCurationNoticeOutput>;
  currentSpotlight: Maybe<Spotlight>;
  currentUser: Maybe<User>;
  dialogueCheck: Maybe<SingleDialogueCheckOutput>;
  dialogueChecks: Maybe<MultiDialogueCheckOutput>;
  dialogueMatchPreference: Maybe<SingleDialogueMatchPreferenceOutput>;
  dialogueMatchPreferences: Maybe<MultiDialogueMatchPreferenceOutput>;
  digest: Maybe<SingleDigestOutput>;
  digestPost: Maybe<SingleDigestPostOutput>;
  digestPosts: Maybe<MultiDigestPostOutput>;
  digests: Maybe<MultiDigestOutput>;
  electionCandidate: Maybe<SingleElectionCandidateOutput>;
  electionCandidates: Maybe<MultiElectionCandidateOutput>;
  electionVote: Maybe<SingleElectionVoteOutput>;
  electionVotes: Maybe<MultiElectionVoteOutput>;
  elicitQuestion: Maybe<SingleElicitQuestionOutput>;
  elicitQuestionPrediction: Maybe<SingleElicitQuestionPredictionOutput>;
  elicitQuestionPredictions: Maybe<MultiElicitQuestionPredictionOutput>;
  elicitQuestions: Maybe<MultiElicitQuestionOutput>;
  featuredResource: Maybe<SingleFeaturedResourceOutput>;
  featuredResources: Maybe<MultiFeaturedResourceOutput>;
  fieldChange: Maybe<SingleFieldChangeOutput>;
  fieldChanges: Maybe<MultiFieldChangeOutput>;
  forumEvent: Maybe<SingleForumEventOutput>;
  forumEvents: Maybe<MultiForumEventOutput>;
  gardenCode: Maybe<SingleGardenCodeOutput>;
  gardenCodes: Maybe<MultiGardenCodeOutput>;
  getCrosspost: Maybe<Scalars['JSON']['output']>;
  getLinkSharedPost: Maybe<Post>;
  googleServiceAccountSession: Maybe<SingleGoogleServiceAccountSessionOutput>;
  googleServiceAccountSessions: Maybe<MultiGoogleServiceAccountSessionOutput>;
  jargonTerm: Maybe<SingleJargonTermOutput>;
  jargonTerms: Maybe<MultiJargonTermOutput>;
  lWEvent: Maybe<SingleLWEventOutput>;
  lWEvents: Maybe<MultiLWEventOutput>;
  latestDialogueMessages: Maybe<Array<Scalars['String']['output']>>;
  latestGoogleDocMetadata: Maybe<Scalars['JSON']['output']>;
  llmConversation: Maybe<SingleLlmConversationOutput>;
  llmConversations: Maybe<MultiLlmConversationOutput>;
  localgroup: Maybe<SingleLocalgroupOutput>;
  localgroups: Maybe<MultiLocalgroupOutput>;
  message: Maybe<SingleMessageOutput>;
  messages: Maybe<MultiMessageOutput>;
  moderationTemplate: Maybe<SingleModerationTemplateOutput>;
  moderationTemplates: Maybe<MultiModerationTemplateOutput>;
  moderatorAction: Maybe<SingleModeratorActionOutput>;
  moderatorActions: Maybe<MultiModeratorActionOutput>;
  moderatorViewIPAddress: Maybe<ModeratorIPAddressInfo>;
  multiDocument: Maybe<SingleMultiDocumentOutput>;
  multiDocuments: Maybe<MultiMultiDocumentOutput>;
  notification: Maybe<SingleNotificationOutput>;
  notifications: Maybe<MultiNotificationOutput>;
  petrov2024checkIfNuked: Maybe<Scalars['Boolean']['output']>;
  petrovDayAction: Maybe<SinglePetrovDayActionOutput>;
  petrovDayActions: Maybe<MultiPetrovDayActionOutput>;
  podcast: Maybe<SinglePodcastOutput>;
  podcastEpisode: Maybe<SinglePodcastEpisodeOutput>;
  podcastEpisodes: Maybe<MultiPodcastEpisodeOutput>;
  podcasts: Maybe<MultiPodcastOutput>;
  post: Maybe<SinglePostOutput>;
  postRelation: Maybe<SinglePostRelationOutput>;
  postRelations: Maybe<MultiPostRelationOutput>;
  posts: Maybe<MultiPostOutput>;
  rSSFeed: Maybe<SingleRSSFeedOutput>;
  rSSFeeds: Maybe<MultiRSSFeedOutput>;
  report: Maybe<SingleReportOutput>;
  reports: Maybe<MultiReportOutput>;
  reviewVote: Maybe<SingleReviewVoteOutput>;
  reviewVotes: Maybe<MultiReviewVoteOutput>;
  reviewWinner: Maybe<SingleReviewWinnerOutput>;
  reviewWinnerArt: Maybe<SingleReviewWinnerArtOutput>;
  reviewWinnerArts: Maybe<MultiReviewWinnerArtOutput>;
  reviewWinners: Maybe<MultiReviewWinnerOutput>;
  revision: Maybe<SingleRevisionOutput>;
  revisions: Maybe<MultiRevisionOutput>;
  sequence: Maybe<SingleSequenceOutput>;
  sequences: Maybe<MultiSequenceOutput>;
  splashArtCoordinate: Maybe<SingleSplashArtCoordinateOutput>;
  splashArtCoordinates: Maybe<MultiSplashArtCoordinateOutput>;
  spotlight: Maybe<SingleSpotlightOutput>;
  spotlights: Maybe<MultiSpotlightOutput>;
  subscription: Maybe<SingleSubscriptionOutput>;
  subscriptions: Maybe<MultiSubscriptionOutput>;
  survey: Maybe<SingleSurveyOutput>;
  surveyQuestion: Maybe<SingleSurveyQuestionOutput>;
  surveyQuestions: Maybe<MultiSurveyQuestionOutput>;
  surveyResponse: Maybe<SingleSurveyResponseOutput>;
  surveyResponses: Maybe<MultiSurveyResponseOutput>;
  surveySchedule: Maybe<SingleSurveyScheduleOutput>;
  surveySchedules: Maybe<MultiSurveyScheduleOutput>;
  surveys: Maybe<MultiSurveyOutput>;
  tag: Maybe<SingleTagOutput>;
  tagFlag: Maybe<SingleTagFlagOutput>;
  tagFlags: Maybe<MultiTagFlagOutput>;
  tagRel: Maybe<SingleTagRelOutput>;
  tagRels: Maybe<MultiTagRelOutput>;
  tags: Maybe<MultiTagOutput>;
  typingIndicator: Maybe<SingleTypingIndicatorOutput>;
  typingIndicators: Maybe<MultiTypingIndicatorOutput>;
  ultraFeedEvent: Maybe<SingleUltraFeedEventOutput>;
  ultraFeedEvents: Maybe<MultiUltraFeedEventOutput>;
  unreadNotificationCounts: NotificationCounts;
  user: Maybe<SingleUserOutput>;
  userEAGDetail: Maybe<SingleUserEAGDetailOutput>;
  userEAGDetails: Maybe<MultiUserEAGDetailOutput>;
  userJobAd: Maybe<SingleUserJobAdOutput>;
  userJobAds: Maybe<MultiUserJobAdOutput>;
  userMostValuablePost: Maybe<SingleUserMostValuablePostOutput>;
  userMostValuablePosts: Maybe<MultiUserMostValuablePostOutput>;
  userRateLimit: Maybe<SingleUserRateLimitOutput>;
  userRateLimits: Maybe<MultiUserRateLimitOutput>;
  userTagRel: Maybe<SingleUserTagRelOutput>;
  userTagRels: Maybe<MultiUserTagRelOutput>;
  users: Maybe<MultiUserOutput>;
  vote: Maybe<SingleVoteOutput>;
  votes: Maybe<MultiVoteOutput>;
};


export type QueryAllTagsActivityFeedArgs = {
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryAnalyticsSeriesArgs = {
  endDate?: InputMaybe<Scalars['Date']['input']>;
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryArbitalPageDataArgs = {
  pageAlias?: InputMaybe<Scalars['String']['input']>;
};


export type QueryCommentEmbeddingSearchArgs = {
  query: Scalars['String']['input'];
  scoreBias?: InputMaybe<Scalars['Float']['input']>;
};


export type QueryCommentEmbeddingSimilaritySearchArgs = {
  commentId: Scalars['String']['input'];
  scoreBias?: InputMaybe<Scalars['Float']['input']>;
};


export type QueryCommentsWithReactsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryCrossedKarmaThresholdArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryCuratedAndPopularThisWeekArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryDigestHighlightsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryDigestPlannerDataArgs = {
  digestId?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
};


export type QueryDigestPostsArgs = {
  num?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryDigestPostsThisWeekArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryElicitBlockDataArgs = {
  questionId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryEmailPreviewArgs = {
  notificationIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGetRandomUserArgs = {
  userIsAuthor: Scalars['String']['input'];
};


export type QueryGetUserBySlugArgs = {
  slug: Scalars['String']['input'];
};


export type QueryGivingSeasonHeartsArgs = {
  electionName: Scalars['String']['input'];
};


export type QueryHomepageCommunityEventsArgs = {
  limit: Scalars['Int']['input'];
};


export type QueryIsDisplayNameTakenArgs = {
  displayName: Scalars['String']['input'];
};


export type QueryMultiPostAnalyticsArgs = {
  desc?: InputMaybe<Scalars['Boolean']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};


export type QueryMyDialoguesArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryNetKarmaChangesForAuthorsOverPeriodArgs = {
  days: Scalars['Int']['input'];
  limit: Scalars['Int']['input'];
};


export type QueryNotificationDisplaysArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPopularCommentsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPostAnalyticsArgs = {
  postId: Scalars['String']['input'];
};


export type QueryPostIsCriticismArgs = {
  args?: InputMaybe<Scalars['JSON']['input']>;
};


export type QueryPostsBySubscribedAuthorsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPostsUserCommentedOnArgs = {
  filter?: InputMaybe<PostReviewFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<PostReviewSort>;
};


export type QueryPostsWithActiveDiscussionArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryPostsWithApprovedJargonArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryRecentDiscussionFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryRecentlyActiveDialoguesArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryRecombeeHybridPostsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
};


export type QueryRecombeeLatestPostsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
};


export type QueryRecommendationsArgs = {
  algorithm?: InputMaybe<Scalars['JSON']['input']>;
  count?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryRevisionsDiffArgs = {
  afterRev: Scalars['String']['input'];
  beforeRev?: InputMaybe<Scalars['String']['input']>;
  collectionName: Scalars['String']['input'];
  fieldName: Scalars['String']['input'];
  id?: InputMaybe<Scalars['String']['input']>;
  trim?: InputMaybe<Scalars['Boolean']['input']>;
};


export type QueryRssPostChangesArgs = {
  postId: Scalars['String']['input'];
};


export type QuerySubforumMagicFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Float']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
};


export type QuerySubforumNewFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
};


export type QuerySubforumOldFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
};


export type QuerySubforumRecentCommentsFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
};


export type QuerySubforumTopFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Int']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
};


export type QuerySubscribedFeedArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
};


export type QuerySuggestedFeedSubscriptionUsersArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QuerySuggestedTopActiveUsersArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type QueryTagHistoryFeedArgs = {
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  options?: InputMaybe<Scalars['JSON']['input']>;
  tagId: Scalars['String']['input'];
};


export type QueryTagPreviewArgs = {
  hash?: InputMaybe<Scalars['String']['input']>;
  slug: Scalars['String']['input'];
};


export type QueryTagUpdatesByUserArgs = {
  limit: Scalars['Int']['input'];
  skip: Scalars['Int']['input'];
  userId: Scalars['String']['input'];
};


export type QueryTagUpdatesInTimeBlockArgs = {
  after: Scalars['Date']['input'];
  before: Scalars['Date']['input'];
};


export type QueryTagsByCoreTagIdArgs = {
  coreTagId?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  searchTagIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};


export type QueryUltraFeedArgs = {
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
};


export type QueryUltraFeedSubscriptionsArgs = {
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
};


export type QueryUserReadHistoryArgs = {
  filter?: InputMaybe<PostReviewFilter>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  sort?: InputMaybe<PostReviewSort>;
};


export type QueryUserReadsPerCoreTagArgs = {
  userId: Scalars['String']['input'];
};


export type QueryUserWrappedDataByYearArgs = {
  userId: Scalars['String']['input'];
  year: Scalars['Int']['input'];
};


export type QueryUsersReadPostsOfTargetUserArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  targetUserId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
};


export type QueryadvisorRequestArgs = {
  input?: InputMaybe<SingleAdvisorRequestInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryadvisorRequestsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiAdvisorRequestInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<AdvisorRequestSelector>;
};


export type QueryarbitalTagContentRelArgs = {
  input?: InputMaybe<SingleArbitalTagContentRelInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryarbitalTagContentRelsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiArbitalTagContentRelInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ArbitalTagContentRelSelector>;
};


export type QuerybanArgs = {
  input?: InputMaybe<SingleBanInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerybansArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiBanInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<BanSelector>;
};


export type QuerybookArgs = {
  input?: InputMaybe<SingleBookInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerybookmarkArgs = {
  input?: InputMaybe<SingleBookmarkInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerybookmarksArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiBookmarkInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<BookmarkSelector>;
};


export type QuerybooksArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiBookInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<BookSelector>;
};


export type QuerychapterArgs = {
  input?: InputMaybe<SingleChapterInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerychaptersArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiChapterInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ChapterSelector>;
};


export type QueryckEditorUserSessionArgs = {
  input?: InputMaybe<SingleCkEditorUserSessionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryckEditorUserSessionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiCkEditorUserSessionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<CkEditorUserSessionSelector>;
};


export type QueryclientIdArgs = {
  input?: InputMaybe<SingleClientIdInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryclientIdsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiClientIdInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ClientIdSelector>;
};


export type QuerycollectionArgs = {
  input?: InputMaybe<SingleCollectionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerycollectionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiCollectionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<CollectionSelector>;
};


export type QuerycommentArgs = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<SingleCommentInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerycommentModeratorActionArgs = {
  input?: InputMaybe<SingleCommentModeratorActionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerycommentModeratorActionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiCommentModeratorActionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<CommentModeratorActionSelector>;
};


export type QuerycommentsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiCommentInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<CommentSelector>;
};


export type QueryconversationArgs = {
  input?: InputMaybe<SingleConversationInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryconversationsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiConversationInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ConversationSelector>;
};


export type QueryconvertDocumentArgs = {
  document?: InputMaybe<Scalars['JSON']['input']>;
  targetFormat?: InputMaybe<Scalars['String']['input']>;
};


export type QuerycurationNoticeArgs = {
  input?: InputMaybe<SingleCurationNoticeInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerycurationNoticesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiCurationNoticeInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<CurationNoticeSelector>;
};


export type QuerydialogueCheckArgs = {
  input?: InputMaybe<SingleDialogueCheckInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerydialogueChecksArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiDialogueCheckInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<DialogueCheckSelector>;
};


export type QuerydialogueMatchPreferenceArgs = {
  input?: InputMaybe<SingleDialogueMatchPreferenceInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerydialogueMatchPreferencesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiDialogueMatchPreferenceInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<DialogueMatchPreferenceSelector>;
};


export type QuerydigestArgs = {
  input?: InputMaybe<SingleDigestInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerydigestPostArgs = {
  input?: InputMaybe<SingleDigestPostInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerydigestPostsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiDigestPostInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<DigestPostSelector>;
};


export type QuerydigestsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiDigestInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<DigestSelector>;
};


export type QueryelectionCandidateArgs = {
  input?: InputMaybe<SingleElectionCandidateInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryelectionCandidatesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiElectionCandidateInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ElectionCandidateSelector>;
};


export type QueryelectionVoteArgs = {
  input?: InputMaybe<SingleElectionVoteInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryelectionVotesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiElectionVoteInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ElectionVoteSelector>;
};


export type QueryelicitQuestionArgs = {
  input?: InputMaybe<SingleElicitQuestionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryelicitQuestionPredictionArgs = {
  input?: InputMaybe<SingleElicitQuestionPredictionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryelicitQuestionPredictionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiElicitQuestionPredictionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ElicitQuestionPredictionSelector>;
};


export type QueryelicitQuestionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiElicitQuestionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ElicitQuestionSelector>;
};


export type QueryfeaturedResourceArgs = {
  input?: InputMaybe<SingleFeaturedResourceInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryfeaturedResourcesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiFeaturedResourceInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<FeaturedResourceSelector>;
};


export type QueryfieldChangeArgs = {
  input?: InputMaybe<SingleFieldChangeInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryfieldChangesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiFieldChangeInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<FieldChangeSelector>;
};


export type QueryforumEventArgs = {
  input?: InputMaybe<SingleForumEventInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryforumEventsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiForumEventInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ForumEventSelector>;
};


export type QuerygardenCodeArgs = {
  input?: InputMaybe<SingleGardenCodeInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerygardenCodesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiGardenCodeInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<GardenCodeSelector>;
};


export type QuerygetCrosspostArgs = {
  args?: InputMaybe<Scalars['JSON']['input']>;
};


export type QuerygetLinkSharedPostArgs = {
  linkSharingKey: Scalars['String']['input'];
  postId: Scalars['String']['input'];
};


export type QuerygoogleServiceAccountSessionArgs = {
  input?: InputMaybe<SingleGoogleServiceAccountSessionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerygoogleServiceAccountSessionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiGoogleServiceAccountSessionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<GoogleServiceAccountSessionSelector>;
};


export type QueryjargonTermArgs = {
  input?: InputMaybe<SingleJargonTermInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryjargonTermsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiJargonTermInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<JargonTermSelector>;
};


export type QuerylWEventArgs = {
  input?: InputMaybe<SingleLWEventInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerylWEventsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiLWEventInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<LWEventSelector>;
};


export type QuerylatestDialogueMessagesArgs = {
  dialogueId: Scalars['String']['input'];
  numMessages: Scalars['Int']['input'];
};


export type QuerylatestGoogleDocMetadataArgs = {
  postId: Scalars['String']['input'];
  version?: InputMaybe<Scalars['String']['input']>;
};


export type QueryllmConversationArgs = {
  input?: InputMaybe<SingleLlmConversationInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryllmConversationsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiLlmConversationInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<LlmConversationSelector>;
};


export type QuerylocalgroupArgs = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<SingleLocalgroupInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerylocalgroupsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiLocalgroupInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<LocalgroupSelector>;
};


export type QuerymessageArgs = {
  input?: InputMaybe<SingleMessageInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerymessagesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiMessageInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<MessageSelector>;
};


export type QuerymoderationTemplateArgs = {
  input?: InputMaybe<SingleModerationTemplateInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerymoderationTemplatesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiModerationTemplateInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ModerationTemplateSelector>;
};


export type QuerymoderatorActionArgs = {
  input?: InputMaybe<SingleModeratorActionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerymoderatorActionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiModeratorActionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ModeratorActionSelector>;
};


export type QuerymoderatorViewIPAddressArgs = {
  ipAddress: Scalars['String']['input'];
};


export type QuerymultiDocumentArgs = {
  input?: InputMaybe<SingleMultiDocumentInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerymultiDocumentsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiMultiDocumentInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<MultiDocumentSelector>;
};


export type QuerynotificationArgs = {
  input?: InputMaybe<SingleNotificationInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerynotificationsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiNotificationInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<NotificationSelector>;
};


export type QuerypetrovDayActionArgs = {
  input?: InputMaybe<SinglePetrovDayActionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerypetrovDayActionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiPetrovDayActionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<PetrovDayActionSelector>;
};


export type QuerypodcastArgs = {
  input?: InputMaybe<SinglePodcastInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerypodcastEpisodeArgs = {
  input?: InputMaybe<SinglePodcastEpisodeInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerypodcastEpisodesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiPodcastEpisodeInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<PodcastEpisodeSelector>;
};


export type QuerypodcastsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiPodcastInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<PodcastSelector>;
};


export type QuerypostArgs = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<SinglePostInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerypostRelationArgs = {
  input?: InputMaybe<SinglePostRelationInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerypostRelationsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiPostRelationInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<PostRelationSelector>;
};


export type QuerypostsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiPostInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<PostSelector>;
};


export type QueryrSSFeedArgs = {
  input?: InputMaybe<SingleRSSFeedInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryrSSFeedsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiRSSFeedInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<RSSFeedSelector>;
};


export type QueryreportArgs = {
  input?: InputMaybe<SingleReportInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryreportsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiReportInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ReportSelector>;
};


export type QueryreviewVoteArgs = {
  input?: InputMaybe<SingleReviewVoteInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryreviewVotesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiReviewVoteInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ReviewVoteSelector>;
};


export type QueryreviewWinnerArgs = {
  input?: InputMaybe<SingleReviewWinnerInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryreviewWinnerArtArgs = {
  input?: InputMaybe<SingleReviewWinnerArtInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryreviewWinnerArtsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiReviewWinnerArtInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ReviewWinnerArtSelector>;
};


export type QueryreviewWinnersArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiReviewWinnerInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<ReviewWinnerSelector>;
};


export type QueryrevisionArgs = {
  input?: InputMaybe<SingleRevisionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryrevisionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiRevisionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<RevisionSelector>;
};


export type QuerysequenceArgs = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<SingleSequenceInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysequencesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSequenceInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SequenceSelector>;
};


export type QuerysplashArtCoordinateArgs = {
  input?: InputMaybe<SingleSplashArtCoordinateInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysplashArtCoordinatesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSplashArtCoordinateInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SplashArtCoordinateSelector>;
};


export type QueryspotlightArgs = {
  input?: InputMaybe<SingleSpotlightInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryspotlightsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSpotlightInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SpotlightSelector>;
};


export type QuerysubscriptionArgs = {
  input?: InputMaybe<SingleSubscriptionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysubscriptionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSubscriptionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SubscriptionSelector>;
};


export type QuerysurveyArgs = {
  input?: InputMaybe<SingleSurveyInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysurveyQuestionArgs = {
  input?: InputMaybe<SingleSurveyQuestionInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysurveyQuestionsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSurveyQuestionInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SurveyQuestionSelector>;
};


export type QuerysurveyResponseArgs = {
  input?: InputMaybe<SingleSurveyResponseInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysurveyResponsesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSurveyResponseInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SurveyResponseSelector>;
};


export type QuerysurveyScheduleArgs = {
  input?: InputMaybe<SingleSurveyScheduleInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerysurveySchedulesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSurveyScheduleInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SurveyScheduleSelector>;
};


export type QuerysurveysArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiSurveyInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<SurveySelector>;
};


export type QuerytagArgs = {
  input?: InputMaybe<SingleTagInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerytagFlagArgs = {
  input?: InputMaybe<SingleTagFlagInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerytagFlagsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiTagFlagInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<TagFlagSelector>;
};


export type QuerytagRelArgs = {
  input?: InputMaybe<SingleTagRelInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerytagRelsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiTagRelInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<TagRelSelector>;
};


export type QuerytagsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiTagInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<TagSelector>;
};


export type QuerytypingIndicatorArgs = {
  input?: InputMaybe<SingleTypingIndicatorInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QuerytypingIndicatorsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiTypingIndicatorInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<TypingIndicatorSelector>;
};


export type QueryultraFeedEventArgs = {
  input?: InputMaybe<SingleUltraFeedEventInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryultraFeedEventsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUltraFeedEventInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UltraFeedEventSelector>;
};


export type QueryuserArgs = {
  input?: InputMaybe<SingleUserInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserEAGDetailArgs = {
  input?: InputMaybe<SingleUserEAGDetailInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserEAGDetailsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserEAGDetailInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserEAGDetailSelector>;
};


export type QueryuserJobAdArgs = {
  input?: InputMaybe<SingleUserJobAdInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserJobAdsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserJobAdInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserJobAdSelector>;
};


export type QueryuserMostValuablePostArgs = {
  input?: InputMaybe<SingleUserMostValuablePostInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserMostValuablePostsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserMostValuablePostInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserMostValuablePostSelector>;
};


export type QueryuserRateLimitArgs = {
  input?: InputMaybe<SingleUserRateLimitInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserRateLimitsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserRateLimitInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserRateLimitSelector>;
};


export type QueryuserTagRelArgs = {
  input?: InputMaybe<SingleUserTagRelInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryuserTagRelsArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserTagRelInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserTagRelSelector>;
};


export type QueryusersArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiUserInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<UserSelector>;
};


export type QueryvoteArgs = {
  input?: InputMaybe<SingleVoteInput>;
  selector?: InputMaybe<SelectorInput>;
};


export type QueryvotesArgs = {
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  input?: InputMaybe<MultiVoteInput>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  selector?: InputMaybe<VoteSelector>;
};

export type RSSFeed = {
  __typename?: 'RSSFeed';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  displayFullContent: Scalars['Boolean']['output'];
  importAsDraft: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  nickname: Scalars['String']['output'];
  ownedByUser: Scalars['Boolean']['output'];
  rawFeed: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  setCanonicalUrl: Scalars['Boolean']['output'];
  status: Maybe<Scalars['String']['output']>;
  url: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type RSSFeedOutput = {
  __typename?: 'RSSFeedOutput';
  data: Maybe<RSSFeed>;
};

export type RSSFeedSelector = {
  default?: InputMaybe<EmptyViewInput>;
  usersFeed?: InputMaybe<RSSFeedsUsersFeedInput>;
};

export type RSSFeedsUsersFeedInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ReactPaletteStyle =
  | 'gridView'
  | 'listView';

export type ReactionChange = {
  __typename?: 'ReactionChange';
  reactionType: Scalars['String']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type ReadStatus = {
  __typename?: 'ReadStatus';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type RecentDiscussionFeedEntry = {
  __typename?: 'RecentDiscussionFeedEntry';
  postCommented: Maybe<Post>;
  shortformCommented: Maybe<Post>;
  tagDiscussed: Maybe<Tag>;
  tagRevised: Maybe<Revision>;
  type: RecentDiscussionFeedEntryType;
};

export type RecentDiscussionFeedEntryType =
  | 'meetupsPoke'
  | 'postCommented'
  | 'shortformCommented'
  | 'subscribeReminder'
  | 'tagDiscussed'
  | 'tagRevised';

export type RecentDiscussionFeedQueryResults = {
  __typename?: 'RecentDiscussionFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<RecentDiscussionFeedEntry>>;
  sessionId: Maybe<Scalars['String']['output']>;
};

export type RecentlyActiveDialoguesResult = {
  __typename?: 'RecentlyActiveDialoguesResult';
  results: Array<Post>;
};

export type RecombeeHybridPostsResult = {
  __typename?: 'RecombeeHybridPostsResult';
  results: Array<RecombeeRecommendedPost>;
};

export type RecombeeLatestPostsResult = {
  __typename?: 'RecombeeLatestPostsResult';
  results: Array<RecombeeRecommendedPost>;
};

export type RecombeeRecommendedPost = {
  __typename?: 'RecombeeRecommendedPost';
  curated: Maybe<Scalars['Boolean']['output']>;
  generatedAt: Maybe<Scalars['Date']['output']>;
  post: Post;
  recommId: Maybe<Scalars['String']['output']>;
  scenario: Maybe<Scalars['String']['output']>;
  stickied: Maybe<Scalars['Boolean']['output']>;
};

export type RecommendResumeSequence = {
  __typename?: 'RecommendResumeSequence';
  collection: Maybe<Collection>;
  lastReadTime: Maybe<Scalars['Date']['output']>;
  nextPost: Post;
  numRead: Maybe<Scalars['Int']['output']>;
  numTotal: Maybe<Scalars['Int']['output']>;
  sequence: Maybe<Sequence>;
};

export type RecommendationAlgorithmSettingsInput = {
  count: Scalars['Int']['input'];
  curatedModifier: Scalars['Float']['input'];
  frontpageModifier: Scalars['Float']['input'];
  method: Scalars['String']['input'];
  onlyUnread: Scalars['Boolean']['input'];
  personalBlogpostModifier: Scalars['Float']['input'];
  scoreExponent: Scalars['Float']['input'];
  scoreOffset: Scalars['Float']['input'];
};

export type RecommendationSettingsInput = {
  frontpage: RecommendationAlgorithmSettingsInput;
  frontpageEA: RecommendationAlgorithmSettingsInput;
  recommendationspage: RecommendationAlgorithmSettingsInput;
};

export type RecommendationsCache = {
  __typename?: 'RecommendationsCache';
  _id: Scalars['String']['output'];
  attributionId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  postId: Maybe<Scalars['String']['output']>;
  scenario: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  source: Maybe<Scalars['String']['output']>;
  ttlMs: Maybe<Scalars['Float']['output']>;
  userId: Maybe<Scalars['String']['output']>;
};

export type Report = {
  __typename?: 'Report';
  _id: Scalars['String']['output'];
  claimedUser: Maybe<User>;
  claimedUserId: Maybe<Scalars['String']['output']>;
  closedAt: Maybe<Scalars['Date']['output']>;
  comment: Maybe<Comment>;
  commentId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  description: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  link: Scalars['String']['output'];
  markedAsSpam: Maybe<Scalars['Boolean']['output']>;
  post: Maybe<Post>;
  postId: Maybe<Scalars['String']['output']>;
  reportedAsSpam: Maybe<Scalars['Boolean']['output']>;
  reportedUser: Maybe<User>;
  reportedUserId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type ReportOutput = {
  __typename?: 'ReportOutput';
  data: Maybe<Report>;
};

export type ReportSelector = {
  adminClaimedReports?: InputMaybe<ReportsAdminClaimedReportsInput>;
  allReports?: InputMaybe<EmptyViewInput>;
  claimedReports?: InputMaybe<EmptyViewInput>;
  closedReports?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  sunshineSidebarReports?: InputMaybe<EmptyViewInput>;
  unclaimedReports?: InputMaybe<EmptyViewInput>;
};

export type ReportsAdminClaimedReportsInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ReviewVote = {
  __typename?: 'ReviewVote';
  _id: Scalars['String']['output'];
  comment: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  dummy: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  quadraticScore: Scalars['Int']['output'];
  qualitativeScore: Scalars['Int']['output'];
  reactions: Maybe<Array<Scalars['String']['output']>>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
  year: Scalars['String']['output'];
};

export type ReviewVoteSelector = {
  default?: InputMaybe<EmptyViewInput>;
  reviewVotesAdminDashboard?: InputMaybe<ReviewVotesReviewVotesAdminDashboardInput>;
  reviewVotesForPost?: InputMaybe<EmptyViewInput>;
  reviewVotesForPostAndUser?: InputMaybe<ReviewVotesReviewVotesForPostAndUserInput>;
  reviewVotesFromUser?: InputMaybe<ReviewVotesReviewVotesFromUserInput>;
};

export type ReviewVotesReviewVotesAdminDashboardInput = {
  year?: InputMaybe<Scalars['Int']['input']>;
};

export type ReviewVotesReviewVotesForPostAndUserInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ReviewVotesReviewVotesFromUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['String']['input']>;
};

export type ReviewWinner = {
  __typename?: 'ReviewWinner';
  _id: Scalars['String']['output'];
  category: Scalars['String']['output'];
  competitorCount: Maybe<Scalars['Int']['output']>;
  createdAt: Scalars['Date']['output'];
  curatedOrder: Maybe<Scalars['Float']['output']>;
  isAI: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  reviewRanking: Scalars['Float']['output'];
  reviewWinnerArt: Maybe<ReviewWinnerArt>;
  reviewYear: Scalars['Float']['output'];
  schemaVersion: Scalars['Float']['output'];
};

export type ReviewWinnerArt = {
  __typename?: 'ReviewWinnerArt';
  _id: Scalars['String']['output'];
  activeSplashArtCoordinates: Maybe<SplashArtCoordinate>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  postId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  splashArtImagePrompt: Scalars['String']['output'];
  splashArtImageUrl: Scalars['String']['output'];
};

export type ReviewWinnerArtSelector = {
  allForYear?: InputMaybe<ReviewWinnerArtsAllForYearInput>;
  default?: InputMaybe<EmptyViewInput>;
  postArt?: InputMaybe<ReviewWinnerArtsPostArtInput>;
};

export type ReviewWinnerArtsAllForYearInput = {
  year?: InputMaybe<Scalars['Int']['input']>;
};

export type ReviewWinnerArtsPostArtInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type ReviewWinnerSelector = {
  bestOfLessWrongAnnouncement?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  reviewWinnerSingle?: InputMaybe<ReviewWinnersReviewWinnerSingleInput>;
};

export type ReviewWinnersReviewWinnerSingleInput = {
  category?: InputMaybe<Scalars['String']['input']>;
  reviewRanking?: InputMaybe<Scalars['String']['input']>;
  reviewYear?: InputMaybe<Scalars['String']['input']>;
};

export type Revision = {
  __typename?: 'Revision';
  _id: Scalars['String']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  baseScore: Scalars['Float']['output'];
  changeMetrics: Scalars['JSON']['output'];
  ckEditorMarkup: Maybe<Scalars['String']['output']>;
  collectionName: Maybe<Scalars['String']['output']>;
  commitMessage: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  documentId: Maybe<Scalars['String']['output']>;
  draft: Maybe<Scalars['Boolean']['output']>;
  editedAt: Scalars['Date']['output'];
  extendedScore: Maybe<Scalars['JSON']['output']>;
  fieldName: Maybe<Scalars['String']['output']>;
  googleDocMetadata: Maybe<Scalars['JSON']['output']>;
  hasFootnotes: Maybe<Scalars['Boolean']['output']>;
  html: Maybe<Scalars['String']['output']>;
  htmlHighlight: Scalars['String']['output'];
  htmlHighlightStartingAtHash: Scalars['String']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  lens: Maybe<MultiDocument>;
  markdown: Maybe<Scalars['String']['output']>;
  originalContents: ContentType;
  plaintextDescription: Scalars['String']['output'];
  plaintextMainText: Scalars['String']['output'];
  post: Maybe<Post>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  skipAttributions: Scalars['Boolean']['output'];
  summary: Maybe<MultiDocument>;
  tag: Maybe<Tag>;
  updateType: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
  version: Scalars['String']['output'];
  voteCount: Scalars['Float']['output'];
  wordCount: Scalars['Float']['output'];
};


export type RevisionhtmlHighlightStartingAtHashArgs = {
  hash?: InputMaybe<Scalars['String']['input']>;
};

export type RevisionOutput = {
  __typename?: 'RevisionOutput';
  data: Maybe<Revision>;
};

export type RevisionSelector = {
  default?: InputMaybe<EmptyViewInput>;
  revisionByVersionNumber?: InputMaybe<RevisionsRevisionByVersionNumberInput>;
  revisionsByUser?: InputMaybe<RevisionsRevisionsByUserInput>;
  revisionsOnDocument?: InputMaybe<RevisionsRevisionsOnDocumentInput>;
};

export type RevisionsKarmaChange = {
  __typename?: 'RevisionsKarmaChange';
  _id: Scalars['String']['output'];
  addedReacts: Maybe<Array<ReactionChange>>;
  collectionName: Scalars['String']['output'];
  eaAddedReacts: Maybe<Scalars['JSON']['output']>;
  scoreChange: Scalars['Int']['output'];
  tagId: Maybe<Scalars['String']['output']>;
  tagName: Maybe<Scalars['String']['output']>;
  tagSlug: Maybe<Scalars['String']['output']>;
};

export type RevisionsRevisionByVersionNumberInput = {
  documentId?: InputMaybe<Scalars['String']['input']>;
  fieldName?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};

export type RevisionsRevisionsByUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type RevisionsRevisionsOnDocumentInput = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  documentId?: InputMaybe<Scalars['String']['input']>;
  fieldName?: InputMaybe<Scalars['String']['input']>;
};

export type RssPostChangeInfo = {
  __typename?: 'RssPostChangeInfo';
  htmlDiff: Scalars['String']['output'];
  isChanged: Scalars['Boolean']['output'];
  newHtml: Scalars['String']['output'];
};

export type SelectorInput = {
  _id?: InputMaybe<Scalars['String']['input']>;
  documentId?: InputMaybe<Scalars['String']['input']>;
};

export type SentenceScore = {
  __typename?: 'SentenceScore';
  score: Scalars['Float']['output'];
  sentence: Scalars['String']['output'];
};

export type Sequence = {
  __typename?: 'Sequence';
  _id: Scalars['String']['output'];
  af: Scalars['Boolean']['output'];
  bannerImageId: Maybe<Scalars['String']['output']>;
  canonicalCollection: Maybe<Collection>;
  canonicalCollectionSlug: Maybe<Scalars['String']['output']>;
  chapters: Array<Chapter>;
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  curatedOrder: Maybe<Scalars['Float']['output']>;
  draft: Scalars['Boolean']['output'];
  gridImageId: Maybe<Scalars['String']['output']>;
  hidden: Scalars['Boolean']['output'];
  hideFromAuthorPage: Scalars['Boolean']['output'];
  isDeleted: Scalars['Boolean']['output'];
  lastUpdated: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  noindex: Scalars['Boolean']['output'];
  postsCount: Scalars['Int']['output'];
  readPostsCount: Scalars['Int']['output'];
  schemaVersion: Scalars['Float']['output'];
  title: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
  userProfileOrder: Maybe<Scalars['Float']['output']>;
};


export type SequencecontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type SequenceDefaultViewInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type SequenceOutput = {
  __typename?: 'SequenceOutput';
  data: Maybe<Sequence>;
};

export type SequenceSelector = {
  communitySequences?: InputMaybe<SequencesCommunitySequencesInput>;
  curatedSequences?: InputMaybe<SequencesCuratedSequencesInput>;
  default?: InputMaybe<SequenceDefaultViewInput>;
  userProfile?: InputMaybe<SequencesUserProfileInput>;
  userProfileAll?: InputMaybe<SequencesUserProfileAllInput>;
  userProfilePrivate?: InputMaybe<SequencesUserProfilePrivateInput>;
};

export type SequencesCommunitySequencesInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SequencesCuratedSequencesInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SequencesUserProfileAllInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SequencesUserProfileInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SequencesUserProfilePrivateInput = {
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type Session = {
  __typename?: 'Session';
  _id: Maybe<Scalars['String']['output']>;
  expires: Maybe<Scalars['Date']['output']>;
  lastModified: Maybe<Scalars['Date']['output']>;
  session: Maybe<Scalars['JSON']['output']>;
};

export type SideCommentCache = {
  __typename?: 'SideCommentCache';
  _id: Scalars['String']['output'];
  annotatedHtml: Maybe<Scalars['String']['output']>;
  commentsByBlock: Maybe<Scalars['JSON']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  postId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  version: Maybe<Scalars['Float']['output']>;
};

export type SingleAdvisorRequestInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleAdvisorRequestOutput = {
  __typename?: 'SingleAdvisorRequestOutput';
  result: Maybe<AdvisorRequest>;
};

export type SingleArbitalTagContentRelInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleArbitalTagContentRelOutput = {
  __typename?: 'SingleArbitalTagContentRelOutput';
  result: Maybe<ArbitalTagContentRel>;
};

export type SingleBanInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleBanOutput = {
  __typename?: 'SingleBanOutput';
  result: Maybe<Ban>;
};

export type SingleBookInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleBookOutput = {
  __typename?: 'SingleBookOutput';
  result: Maybe<Book>;
};

export type SingleBookmarkInput = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleBookmarkOutput = {
  __typename?: 'SingleBookmarkOutput';
  result: Maybe<Bookmark>;
};

export type SingleChapterInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleChapterOutput = {
  __typename?: 'SingleChapterOutput';
  result: Maybe<Chapter>;
};

export type SingleCkEditorUserSessionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleCkEditorUserSessionOutput = {
  __typename?: 'SingleCkEditorUserSessionOutput';
  result: Maybe<CkEditorUserSession>;
};

export type SingleClientIdInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleClientIdOutput = {
  __typename?: 'SingleClientIdOutput';
  result: Maybe<ClientId>;
};

export type SingleCollectionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleCollectionOutput = {
  __typename?: 'SingleCollectionOutput';
  result: Maybe<Collection>;
};

export type SingleCommentInput = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleCommentModeratorActionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleCommentModeratorActionOutput = {
  __typename?: 'SingleCommentModeratorActionOutput';
  result: Maybe<CommentModeratorAction>;
};

export type SingleCommentOutput = {
  __typename?: 'SingleCommentOutput';
  result: Maybe<Comment>;
};

export type SingleConversationInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleConversationOutput = {
  __typename?: 'SingleConversationOutput';
  result: Maybe<Conversation>;
};

export type SingleCurationNoticeInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleCurationNoticeOutput = {
  __typename?: 'SingleCurationNoticeOutput';
  result: Maybe<CurationNotice>;
};

export type SingleDialogueCheckInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleDialogueCheckOutput = {
  __typename?: 'SingleDialogueCheckOutput';
  result: Maybe<DialogueCheck>;
};

export type SingleDialogueMatchPreferenceInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleDialogueMatchPreferenceOutput = {
  __typename?: 'SingleDialogueMatchPreferenceOutput';
  result: Maybe<DialogueMatchPreference>;
};

export type SingleDigestInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleDigestOutput = {
  __typename?: 'SingleDigestOutput';
  result: Maybe<Digest>;
};

export type SingleDigestPostInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleDigestPostOutput = {
  __typename?: 'SingleDigestPostOutput';
  result: Maybe<DigestPost>;
};

export type SingleElectionCandidateInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleElectionCandidateOutput = {
  __typename?: 'SingleElectionCandidateOutput';
  result: Maybe<ElectionCandidate>;
};

export type SingleElectionVoteInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleElectionVoteOutput = {
  __typename?: 'SingleElectionVoteOutput';
  result: Maybe<ElectionVote>;
};

export type SingleElicitQuestionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleElicitQuestionOutput = {
  __typename?: 'SingleElicitQuestionOutput';
  result: Maybe<ElicitQuestion>;
};

export type SingleElicitQuestionPredictionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleElicitQuestionPredictionOutput = {
  __typename?: 'SingleElicitQuestionPredictionOutput';
  result: Maybe<ElicitQuestionPrediction>;
};

export type SingleFeaturedResourceInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleFeaturedResourceOutput = {
  __typename?: 'SingleFeaturedResourceOutput';
  result: Maybe<FeaturedResource>;
};

export type SingleFieldChangeInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleFieldChangeOutput = {
  __typename?: 'SingleFieldChangeOutput';
  result: Maybe<FieldChange>;
};

export type SingleForumEventInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleForumEventOutput = {
  __typename?: 'SingleForumEventOutput';
  result: Maybe<ForumEvent>;
};

export type SingleGardenCodeInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleGardenCodeOutput = {
  __typename?: 'SingleGardenCodeOutput';
  result: Maybe<GardenCode>;
};

export type SingleGoogleServiceAccountSessionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleGoogleServiceAccountSessionOutput = {
  __typename?: 'SingleGoogleServiceAccountSessionOutput';
  result: Maybe<GoogleServiceAccountSession>;
};

export type SingleJargonTermInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleJargonTermOutput = {
  __typename?: 'SingleJargonTermOutput';
  result: Maybe<JargonTerm>;
};

export type SingleLWEventInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleLWEventOutput = {
  __typename?: 'SingleLWEventOutput';
  result: Maybe<LWEvent>;
};

export type SingleLlmConversationInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleLlmConversationOutput = {
  __typename?: 'SingleLlmConversationOutput';
  result: Maybe<LlmConversation>;
};

export type SingleLocalgroupInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleLocalgroupOutput = {
  __typename?: 'SingleLocalgroupOutput';
  result: Maybe<Localgroup>;
};

export type SingleMessageInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleMessageOutput = {
  __typename?: 'SingleMessageOutput';
  result: Maybe<Message>;
};

export type SingleModerationTemplateInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleModerationTemplateOutput = {
  __typename?: 'SingleModerationTemplateOutput';
  result: Maybe<ModerationTemplate>;
};

export type SingleModeratorActionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleModeratorActionOutput = {
  __typename?: 'SingleModeratorActionOutput';
  result: Maybe<ModeratorAction>;
};

export type SingleMultiDocumentInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleMultiDocumentOutput = {
  __typename?: 'SingleMultiDocumentOutput';
  result: Maybe<MultiDocument>;
};

export type SingleNotificationInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleNotificationOutput = {
  __typename?: 'SingleNotificationOutput';
  result: Maybe<Notification>;
};

export type SinglePetrovDayActionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SinglePetrovDayActionOutput = {
  __typename?: 'SinglePetrovDayActionOutput';
  result: Maybe<PetrovDayAction>;
};

export type SinglePodcastEpisodeInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SinglePodcastEpisodeOutput = {
  __typename?: 'SinglePodcastEpisodeOutput';
  result: Maybe<PodcastEpisode>;
};

export type SinglePodcastInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SinglePodcastOutput = {
  __typename?: 'SinglePodcastOutput';
  result: Maybe<Podcast>;
};

export type SinglePostInput = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SinglePostOutput = {
  __typename?: 'SinglePostOutput';
  result: Maybe<Post>;
};

export type SinglePostRelationInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SinglePostRelationOutput = {
  __typename?: 'SinglePostRelationOutput';
  result: Maybe<PostRelation>;
};

export type SingleRSSFeedInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleRSSFeedOutput = {
  __typename?: 'SingleRSSFeedOutput';
  result: Maybe<RSSFeed>;
};

export type SingleReportInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleReportOutput = {
  __typename?: 'SingleReportOutput';
  result: Maybe<Report>;
};

export type SingleReviewVoteInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleReviewVoteOutput = {
  __typename?: 'SingleReviewVoteOutput';
  result: Maybe<ReviewVote>;
};

export type SingleReviewWinnerArtInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleReviewWinnerArtOutput = {
  __typename?: 'SingleReviewWinnerArtOutput';
  result: Maybe<ReviewWinnerArt>;
};

export type SingleReviewWinnerInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleReviewWinnerOutput = {
  __typename?: 'SingleReviewWinnerOutput';
  result: Maybe<ReviewWinner>;
};

export type SingleRevisionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleRevisionOutput = {
  __typename?: 'SingleRevisionOutput';
  result: Maybe<Revision>;
};

export type SingleSequenceInput = {
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSequenceOutput = {
  __typename?: 'SingleSequenceOutput';
  result: Maybe<Sequence>;
};

export type SingleSplashArtCoordinateInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSplashArtCoordinateOutput = {
  __typename?: 'SingleSplashArtCoordinateOutput';
  result: Maybe<SplashArtCoordinate>;
};

export type SingleSpotlightInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSpotlightOutput = {
  __typename?: 'SingleSpotlightOutput';
  result: Maybe<Spotlight>;
};

export type SingleSubscriptionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSubscriptionOutput = {
  __typename?: 'SingleSubscriptionOutput';
  result: Maybe<Subscription>;
};

export type SingleSurveyInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSurveyOutput = {
  __typename?: 'SingleSurveyOutput';
  result: Maybe<Survey>;
};

export type SingleSurveyQuestionInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSurveyQuestionOutput = {
  __typename?: 'SingleSurveyQuestionOutput';
  result: Maybe<SurveyQuestion>;
};

export type SingleSurveyResponseInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSurveyResponseOutput = {
  __typename?: 'SingleSurveyResponseOutput';
  result: Maybe<SurveyResponse>;
};

export type SingleSurveyScheduleInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleSurveyScheduleOutput = {
  __typename?: 'SingleSurveyScheduleOutput';
  result: Maybe<SurveySchedule>;
};

export type SingleTagFlagInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleTagFlagOutput = {
  __typename?: 'SingleTagFlagOutput';
  result: Maybe<TagFlag>;
};

export type SingleTagInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleTagOutput = {
  __typename?: 'SingleTagOutput';
  result: Maybe<Tag>;
};

export type SingleTagRelInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleTagRelOutput = {
  __typename?: 'SingleTagRelOutput';
  result: Maybe<TagRel>;
};

export type SingleTypingIndicatorInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleTypingIndicatorOutput = {
  __typename?: 'SingleTypingIndicatorOutput';
  result: Maybe<TypingIndicator>;
};

export type SingleUltraFeedEventInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUltraFeedEventOutput = {
  __typename?: 'SingleUltraFeedEventOutput';
  result: Maybe<UltraFeedEvent>;
};

export type SingleUserEAGDetailInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUserEAGDetailOutput = {
  __typename?: 'SingleUserEAGDetailOutput';
  result: Maybe<UserEAGDetail>;
};

export type SingleUserInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<UserSelectorUniqueInput>;
};

export type SingleUserJobAdInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUserJobAdOutput = {
  __typename?: 'SingleUserJobAdOutput';
  result: Maybe<UserJobAd>;
};

export type SingleUserMostValuablePostInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUserMostValuablePostOutput = {
  __typename?: 'SingleUserMostValuablePostOutput';
  result: Maybe<UserMostValuablePost>;
};

export type SingleUserOutput = {
  __typename?: 'SingleUserOutput';
  result: Maybe<User>;
};

export type SingleUserRateLimitInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUserRateLimitOutput = {
  __typename?: 'SingleUserRateLimitOutput';
  result: Maybe<UserRateLimit>;
};

export type SingleUserTagRelInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleUserTagRelOutput = {
  __typename?: 'SingleUserTagRelOutput';
  result: Maybe<UserTagRel>;
};

export type SingleVoteInput = {
  resolverArgs?: InputMaybe<Scalars['JSON']['input']>;
  selector?: InputMaybe<SelectorInput>;
};

export type SingleVoteOutput = {
  __typename?: 'SingleVoteOutput';
  result: Maybe<Vote>;
};

export type Site = {
  __typename?: 'Site';
  logoUrl: Maybe<Scalars['String']['output']>;
  title: Maybe<Scalars['String']['output']>;
  url: Maybe<Scalars['String']['output']>;
};

export type SocialPreviewInput = {
  imageId?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['String']['input']>;
};

export type SocialPreviewOutput = {
  __typename?: 'SocialPreviewOutput';
  imageId: Maybe<Scalars['String']['output']>;
  text: Maybe<Scalars['String']['output']>;
};

export type SocialPreviewType = {
  __typename?: 'SocialPreviewType';
  _id: Scalars['String']['output'];
  imageId: Maybe<Scalars['String']['output']>;
  imageUrl: Scalars['String']['output'];
  text: Maybe<Scalars['String']['output']>;
};

export type SplashArtCoordinate = {
  __typename?: 'SplashArtCoordinate';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  leftFlipped: Scalars['Boolean']['output'];
  leftHeightPct: Scalars['Float']['output'];
  leftWidthPct: Scalars['Float']['output'];
  leftXPct: Scalars['Float']['output'];
  leftYPct: Scalars['Float']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  middleFlipped: Scalars['Boolean']['output'];
  middleHeightPct: Scalars['Float']['output'];
  middleWidthPct: Scalars['Float']['output'];
  middleXPct: Scalars['Float']['output'];
  middleYPct: Scalars['Float']['output'];
  reviewWinnerArt: Maybe<ReviewWinnerArt>;
  reviewWinnerArtId: Maybe<Scalars['String']['output']>;
  rightFlipped: Scalars['Boolean']['output'];
  rightHeightPct: Scalars['Float']['output'];
  rightWidthPct: Scalars['Float']['output'];
  rightXPct: Scalars['Float']['output'];
  rightYPct: Scalars['Float']['output'];
  schemaVersion: Scalars['Float']['output'];
};

export type SplashArtCoordinateOutput = {
  __typename?: 'SplashArtCoordinateOutput';
  data: Maybe<SplashArtCoordinate>;
};

export type SplashArtCoordinateSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type Spotlight = {
  __typename?: 'Spotlight';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  customSubtitle: Maybe<Scalars['String']['output']>;
  customTitle: Maybe<Scalars['String']['output']>;
  deletedDraft: Scalars['Boolean']['output'];
  description: Maybe<Revision>;
  description_latest: Maybe<Scalars['String']['output']>;
  document: Maybe<Post>;
  documentId: Scalars['String']['output'];
  documentType: SpotlightDocumentType;
  draft: Scalars['Boolean']['output'];
  duration: Scalars['Float']['output'];
  headerTitle: Maybe<Scalars['String']['output']>;
  headerTitleLeftColor: Maybe<Scalars['String']['output']>;
  headerTitleRightColor: Maybe<Scalars['String']['output']>;
  imageFade: Scalars['Boolean']['output'];
  imageFadeColor: Maybe<Scalars['String']['output']>;
  lastPromotedAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  position: Scalars['Float']['output'];
  post: Maybe<Post>;
  schemaVersion: Scalars['Float']['output'];
  sequence: Maybe<Sequence>;
  sequenceChapters: Maybe<Array<Chapter>>;
  showAuthor: Scalars['Boolean']['output'];
  spotlightDarkImageId: Maybe<Scalars['String']['output']>;
  spotlightImageId: Maybe<Scalars['String']['output']>;
  spotlightSplashImageUrl: Maybe<Scalars['String']['output']>;
  subtitleUrl: Maybe<Scalars['String']['output']>;
  tag: Maybe<Tag>;
};


export type SpotlightdescriptionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type SpotlightDocumentType =
  | 'Post'
  | 'Sequence'
  | 'Tag';

export type SpotlightOutput = {
  __typename?: 'SpotlightOutput';
  data: Maybe<Spotlight>;
};

export type SpotlightSelector = {
  default?: InputMaybe<EmptyViewInput>;
  mostRecentlyPromotedSpotlights?: InputMaybe<SpotlightsMostRecentlyPromotedSpotlightsInput>;
  spotlightsByDocumentIds?: InputMaybe<SpotlightsSpotlightsByDocumentIdsInput>;
  spotlightsById?: InputMaybe<SpotlightsSpotlightsByIdInput>;
  spotlightsPage?: InputMaybe<SpotlightsSpotlightsPageInput>;
  spotlightsPageDraft?: InputMaybe<SpotlightsSpotlightsPageDraftInput>;
};

export type SpotlightsMostRecentlyPromotedSpotlightsInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type SpotlightsSpotlightsByDocumentIdsInput = {
  documentIds?: InputMaybe<Scalars['String']['input']>;
};

export type SpotlightsSpotlightsByIdInput = {
  spotlightIds?: InputMaybe<Scalars['String']['input']>;
};

export type SpotlightsSpotlightsPageDraftInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type SpotlightsSpotlightsPageInput = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};

export type SubforumMagicFeedEntry = {
  __typename?: 'SubforumMagicFeedEntry';
  tagSubforumComments: Maybe<Comment>;
  tagSubforumPosts: Maybe<Post>;
  tagSubforumStickyComments: Maybe<Comment>;
  type: SubforumMagicFeedEntryType;
};

export type SubforumMagicFeedEntryType =
  | 'tagSubforumComments'
  | 'tagSubforumPosts'
  | 'tagSubforumStickyComments';

export type SubforumMagicFeedQueryResults = {
  __typename?: 'SubforumMagicFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubforumMagicFeedEntry>>;
};

export type SubforumNewFeedEntry = {
  __typename?: 'SubforumNewFeedEntry';
  tagSubforumComments: Maybe<Comment>;
  tagSubforumPosts: Maybe<Post>;
  tagSubforumStickyComments: Maybe<Comment>;
  type: SubforumNewFeedEntryType;
};

export type SubforumNewFeedEntryType =
  | 'tagSubforumComments'
  | 'tagSubforumPosts'
  | 'tagSubforumStickyComments';

export type SubforumNewFeedQueryResults = {
  __typename?: 'SubforumNewFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubforumNewFeedEntry>>;
};

export type SubforumOldFeedEntry = {
  __typename?: 'SubforumOldFeedEntry';
  tagSubforumComments: Maybe<Comment>;
  tagSubforumPosts: Maybe<Post>;
  tagSubforumStickyComments: Maybe<Comment>;
  type: SubforumOldFeedEntryType;
};

export type SubforumOldFeedEntryType =
  | 'tagSubforumComments'
  | 'tagSubforumPosts'
  | 'tagSubforumStickyComments';

export type SubforumOldFeedQueryResults = {
  __typename?: 'SubforumOldFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubforumOldFeedEntry>>;
};

export type SubforumPreferredLayout =
  | 'card'
  | 'list';

export type SubforumRecentCommentsFeedEntry = {
  __typename?: 'SubforumRecentCommentsFeedEntry';
  tagSubforumComments: Maybe<Comment>;
  tagSubforumPosts: Maybe<Post>;
  tagSubforumStickyComments: Maybe<Comment>;
  type: SubforumRecentCommentsFeedEntryType;
};

export type SubforumRecentCommentsFeedEntryType =
  | 'tagSubforumComments'
  | 'tagSubforumPosts'
  | 'tagSubforumStickyComments';

export type SubforumRecentCommentsFeedQueryResults = {
  __typename?: 'SubforumRecentCommentsFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubforumRecentCommentsFeedEntry>>;
};

export type SubforumTopFeedEntry = {
  __typename?: 'SubforumTopFeedEntry';
  tagSubforumComments: Maybe<Comment>;
  tagSubforumPosts: Maybe<Post>;
  tagSubforumStickyComments: Maybe<Comment>;
  type: SubforumTopFeedEntryType;
};

export type SubforumTopFeedEntryType =
  | 'tagSubforumComments'
  | 'tagSubforumPosts'
  | 'tagSubforumStickyComments';

export type SubforumTopFeedQueryResults = {
  __typename?: 'SubforumTopFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubforumTopFeedEntry>>;
};

export type SubscribedFeedEntry = {
  __typename?: 'SubscribedFeedEntry';
  postCommented: Maybe<SubscribedPostAndComments>;
  type: SubscribedFeedEntryType;
};

export type SubscribedFeedEntryType =
  | 'postCommented';

export type SubscribedFeedQueryResults = {
  __typename?: 'SubscribedFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<SubscribedFeedEntry>>;
};

export type SubscribedPostAndComments = {
  __typename?: 'SubscribedPostAndComments';
  _id: Scalars['String']['output'];
  comments: Maybe<Array<Comment>>;
  expandCommentIds: Maybe<Array<Scalars['String']['output']>>;
  post: Post;
  postIsFromSubscribedUser: Scalars['Boolean']['output'];
};

export type Subscription = {
  __typename?: 'Subscription';
  _id: Scalars['String']['output'];
  collectionName: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Maybe<Scalars['Boolean']['output']>;
  documentId: Maybe<Scalars['String']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  state: Maybe<Scalars['String']['output']>;
  type: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type SubscriptionOutput = {
  __typename?: 'SubscriptionOutput';
  data: Maybe<Subscription>;
};

export type SubscriptionSelector = {
  default?: InputMaybe<EmptyViewInput>;
  membersOfGroup?: InputMaybe<SubscriptionsMembersOfGroupInput>;
  subscriptionState?: InputMaybe<SubscriptionsSubscriptionStateInput>;
  subscriptionsOfType?: InputMaybe<SubscriptionsSubscriptionsOfTypeInput>;
};

export type SubscriptionsMembersOfGroupInput = {
  documentId?: InputMaybe<Scalars['String']['input']>;
};

export type SubscriptionsSubscriptionStateInput = {
  collectionName?: InputMaybe<Scalars['String']['input']>;
  documentId?: InputMaybe<Scalars['String']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SubscriptionsSubscriptionsOfTypeInput = {
  collectionName?: InputMaybe<Scalars['String']['input']>;
  subscriptionType?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type SuggestedFeedSubscriptionUsersResult = {
  __typename?: 'SuggestedFeedSubscriptionUsersResult';
  results: Array<User>;
};

export type SuggestedTopActiveUsersResult = {
  __typename?: 'SuggestedTopActiveUsersResult';
  results: Array<User>;
};

export type Survey = {
  __typename?: 'Survey';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  name: Scalars['String']['output'];
  questions: Array<SurveyQuestion>;
  schemaVersion: Scalars['Float']['output'];
};

export type SurveyOutput = {
  __typename?: 'SurveyOutput';
  data: Maybe<Survey>;
};

export type SurveyQuestion = {
  __typename?: 'SurveyQuestion';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  format: SurveyQuestionFormat;
  legacyData: Maybe<Scalars['JSON']['output']>;
  order: Scalars['Float']['output'];
  question: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  survey: Survey;
  surveyId: Scalars['String']['output'];
};

export type SurveyQuestionFormat =
  | 'multilineText'
  | 'rank0To10'
  | 'text';

export type SurveyQuestionInfo = {
  _id?: InputMaybe<Scalars['String']['input']>;
  format: Scalars['String']['input'];
  question: Scalars['String']['input'];
};

export type SurveyQuestionOutput = {
  __typename?: 'SurveyQuestionOutput';
  data: Maybe<SurveyQuestion>;
};

export type SurveyQuestionSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type SurveyResponse = {
  __typename?: 'SurveyResponse';
  _id: Scalars['String']['output'];
  client: Maybe<ClientId>;
  clientId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  response: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  survey: Maybe<Survey>;
  surveyId: Maybe<Scalars['String']['output']>;
  surveySchedule: Maybe<SurveySchedule>;
  surveyScheduleId: Maybe<Scalars['String']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type SurveyResponseOutput = {
  __typename?: 'SurveyResponseOutput';
  data: Maybe<SurveyResponse>;
};

export type SurveyResponseSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type SurveySchedule = {
  __typename?: 'SurveySchedule';
  _id: Scalars['String']['output'];
  clientIds: Maybe<Array<Scalars['String']['output']>>;
  clients: Maybe<Array<ClientId>>;
  createdAt: Scalars['Date']['output'];
  deactivated: Maybe<Scalars['Boolean']['output']>;
  endDate: Maybe<Scalars['Date']['output']>;
  impressionsLimit: Maybe<Scalars['Float']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  maxKarma: Maybe<Scalars['Float']['output']>;
  maxVisitorPercentage: Maybe<Scalars['Float']['output']>;
  minKarma: Maybe<Scalars['Float']['output']>;
  name: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  startDate: Maybe<Scalars['Date']['output']>;
  survey: Maybe<Survey>;
  surveyId: Scalars['String']['output'];
  target: Maybe<SurveyScheduleTarget>;
};

export type SurveyScheduleOutput = {
  __typename?: 'SurveyScheduleOutput';
  data: Maybe<SurveySchedule>;
};

export type SurveyScheduleSelector = {
  default?: InputMaybe<EmptyViewInput>;
  surveySchedulesByCreatedAt?: InputMaybe<EmptyViewInput>;
};

export type SurveyScheduleTarget =
  | 'allUsers'
  | 'loggedInOnly'
  | 'loggedOutOnly';

export type SurveySelector = {
  default?: InputMaybe<EmptyViewInput>;
  surveysByCreatedAt?: InputMaybe<EmptyViewInput>;
};

export type Tag = {
  __typename?: 'Tag';
  _id: Scalars['String']['output'];
  adminOnly: Scalars['Boolean']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  arbitalLinkedPages: Maybe<ArbitalLinkedPages>;
  autoTagModel: Maybe<Scalars['String']['output']>;
  autoTagPrompt: Maybe<Scalars['String']['output']>;
  bannerImageId: Maybe<Scalars['String']['output']>;
  baseScore: Scalars['Float']['output'];
  canEditUserIds: Maybe<Array<Scalars['String']['output']>>;
  canVoteOnRels: Maybe<Array<TagRelVoteGroup>>;
  charsAdded: Maybe<Scalars['Float']['output']>;
  charsRemoved: Maybe<Scalars['Float']['output']>;
  contributionStats: Maybe<Scalars['JSON']['output']>;
  contributors: TagContributorsList;
  core: Scalars['Boolean']['output'];
  coreTagId: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  defaultOrder: Scalars['Float']['output'];
  deleted: Scalars['Boolean']['output'];
  description: Maybe<Revision>;
  descriptionTruncationCount: Scalars['Float']['output'];
  description_latest: Maybe<Scalars['String']['output']>;
  extendedScore: Maybe<Scalars['JSON']['output']>;
  forceAllowType3Audio: Scalars['Boolean']['output'];
  htmlWithContributorAnnotations: Maybe<Scalars['String']['output']>;
  introSequenceId: Maybe<Scalars['String']['output']>;
  isArbitalImport: Maybe<Scalars['Boolean']['output']>;
  isPlaceholderPage: Scalars['Boolean']['output'];
  isPostType: Scalars['Boolean']['output'];
  isRead: Maybe<Scalars['Boolean']['output']>;
  isSubforum: Scalars['Boolean']['output'];
  lastCommentedAt: Maybe<Scalars['Date']['output']>;
  lastSubforumCommentAt: Maybe<Scalars['Date']['output']>;
  lastVisitedAt: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  lenses: Array<MultiDocument>;
  lensesIncludingDeleted: Array<MultiDocument>;
  lesswrongWikiImportCompleted: Maybe<Scalars['Boolean']['output']>;
  lesswrongWikiImportRevision: Maybe<Scalars['String']['output']>;
  lesswrongWikiImportSlug: Maybe<Scalars['String']['output']>;
  maxScore: Maybe<Scalars['Int']['output']>;
  moderationGuidelines: Maybe<Revision>;
  moderationGuidelines_latest: Maybe<Scalars['String']['output']>;
  name: Scalars['String']['output'];
  needsReview: Scalars['Boolean']['output'];
  noindex: Scalars['Boolean']['output'];
  oldSlugs: Array<Scalars['String']['output']>;
  parentTag: Maybe<Tag>;
  parentTagId: Maybe<Scalars['String']['output']>;
  pingbacks: Maybe<Scalars['JSON']['output']>;
  postCount: Scalars['Float']['output'];
  postsDefaultSortOrder: Maybe<Scalars['String']['output']>;
  recentComments: Array<Comment>;
  reviewedByUser: Maybe<User>;
  reviewedByUserId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  sequence: Maybe<Sequence>;
  shortName: Maybe<Scalars['String']['output']>;
  slug: Scalars['String']['output'];
  squareImageId: Maybe<Scalars['String']['output']>;
  subTagIds: Array<Scalars['String']['output']>;
  subTags: Array<Tag>;
  subforumIntroPost: Maybe<Post>;
  subforumIntroPostId: Maybe<Scalars['String']['output']>;
  subforumModeratorIds: Array<Scalars['String']['output']>;
  subforumModerators: Array<User>;
  subforumUnreadMessagesCount: Maybe<Scalars['Int']['output']>;
  subforumWelcomeText: Maybe<Revision>;
  subforumWelcomeText_latest: Maybe<Scalars['String']['output']>;
  subtitle: Maybe<Scalars['String']['output']>;
  suggestedAsFilter: Scalars['Boolean']['output'];
  summaries: Array<MultiDocument>;
  tableOfContents: Maybe<Scalars['JSON']['output']>;
  tagFlags: Array<TagFlag>;
  tagFlagsIds: Array<Scalars['String']['output']>;
  textLastUpdatedAt: Maybe<Scalars['Date']['output']>;
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
  usersWhoLiked: Array<UserLikingTag>;
  voteCount: Scalars['Float']['output'];
  wikiGrade: Scalars['Int']['output'];
  wikiOnly: Scalars['Boolean']['output'];
};


export type TagcontributorsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TagdescriptionArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TaglensesArgs = {
  lensSlug?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TaglensesIncludingDeletedArgs = {
  lensSlug?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TagmoderationGuidelinesArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TagrecentCommentsArgs = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
  tagCommentType?: InputMaybe<Scalars['String']['input']>;
  tagCommentsLimit?: InputMaybe<Scalars['Int']['input']>;
};


export type TagsubforumWelcomeTextArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type TagtableOfContentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type TagCommentType =
  | 'DISCUSSION'
  | 'SUBFORUM';

export type TagContributor = {
  __typename?: 'TagContributor';
  contributionScore: Scalars['Int']['output'];
  currentAttributionCharCount: Maybe<Scalars['Int']['output']>;
  numCommits: Scalars['Int']['output'];
  user: Maybe<User>;
  voteCount: Scalars['Int']['output'];
};

export type TagContributorsList = {
  __typename?: 'TagContributorsList';
  contributors: Array<TagContributor>;
  totalCount: Scalars['Int']['output'];
};

export type TagDefaultViewInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagFlag = {
  __typename?: 'TagFlag';
  _id: Scalars['String']['output'];
  contents: Maybe<Revision>;
  contents_latest: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  deleted: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  name: Scalars['String']['output'];
  order: Maybe<Scalars['Float']['output']>;
  schemaVersion: Scalars['Float']['output'];
  slug: Scalars['String']['output'];
};


export type TagFlagcontentsArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};

export type TagFlagOutput = {
  __typename?: 'TagFlagOutput';
  data: Maybe<TagFlag>;
};

export type TagFlagSelector = {
  allTagFlags?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type TagHistoryFeedEntry = {
  __typename?: 'TagHistoryFeedEntry';
  lensOrSummaryMetadataChanged: Maybe<FieldChange>;
  lensRevision: Maybe<Revision>;
  summaryRevision: Maybe<Revision>;
  tagApplied: Maybe<TagRel>;
  tagCreated: Maybe<Tag>;
  tagDiscussionComment: Maybe<Comment>;
  tagRevision: Maybe<Revision>;
  type: TagHistoryFeedEntryType;
  wikiMetadataChanged: Maybe<FieldChange>;
};

export type TagHistoryFeedEntryType =
  | 'lensOrSummaryMetadataChanged'
  | 'lensRevision'
  | 'summaryRevision'
  | 'tagApplied'
  | 'tagCreated'
  | 'tagDiscussionComment'
  | 'tagRevision'
  | 'wikiMetadataChanged';

export type TagHistoryFeedQueryResults = {
  __typename?: 'TagHistoryFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<TagHistoryFeedEntry>>;
};

export type TagOutput = {
  __typename?: 'TagOutput';
  data: Maybe<Tag>;
};

export type TagPreviewWithSummaries = {
  __typename?: 'TagPreviewWithSummaries';
  lens: Maybe<MultiDocument>;
  summaries: Array<MultiDocument>;
  tag: Tag;
};

export type TagReadLikelihoodRatio = {
  __typename?: 'TagReadLikelihoodRatio';
  readLikelihoodRatio: Maybe<Scalars['Float']['output']>;
  tagId: Maybe<Scalars['String']['output']>;
  tagName: Maybe<Scalars['String']['output']>;
  tagShortName: Maybe<Scalars['String']['output']>;
  userReadCount: Maybe<Scalars['Int']['output']>;
};

export type TagRel = {
  __typename?: 'TagRel';
  _id: Scalars['String']['output'];
  afBaseScore: Maybe<Scalars['Float']['output']>;
  afExtendedScore: Maybe<Scalars['JSON']['output']>;
  afVoteCount: Maybe<Scalars['Float']['output']>;
  autoApplied: Scalars['Boolean']['output'];
  backfilled: Scalars['Boolean']['output'];
  baseScore: Scalars['Float']['output'];
  createdAt: Scalars['Date']['output'];
  currentUserCanVote: Scalars['Boolean']['output'];
  currentUserExtendedVote: Maybe<Scalars['JSON']['output']>;
  currentUserVote: Maybe<Scalars['String']['output']>;
  deleted: Scalars['Boolean']['output'];
  extendedScore: Maybe<Scalars['JSON']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Scalars['String']['output'];
  schemaVersion: Scalars['Float']['output'];
  score: Scalars['Float']['output'];
  tag: Maybe<Tag>;
  tagId: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
  voteCount: Scalars['Float']['output'];
};

export type TagRelSelector = {
  default?: InputMaybe<EmptyViewInput>;
  postsWithTag?: InputMaybe<TagRelsPostsWithTagInput>;
  tagsOnPost?: InputMaybe<TagRelsTagsOnPostInput>;
};

export type TagRelVoteGroup =
  | 'admins'
  | 'alignmentForum'
  | 'alignmentForumAdmins'
  | 'alignmentVoters'
  | 'canBypassPostRateLimit'
  | 'canModeratePersonal'
  | 'canSuggestCuration'
  | 'debaters'
  | 'guests'
  | 'members'
  | 'podcasters'
  | 'realAdmins'
  | 'sunshineRegiment'
  | 'trustLevel1'
  | 'userOwns'
  | 'userOwnsOnlyUpvote';

export type TagRelsPostsWithTagInput = {
  tagId?: InputMaybe<Scalars['String']['input']>;
};

export type TagRelsTagsOnPostInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type TagSelector = {
  allArbitalTags?: InputMaybe<TagsAllArbitalTagsInput>;
  allLWWikiTags?: InputMaybe<TagsAllLWWikiTagsInput>;
  allPagesByNewest?: InputMaybe<TagsAllPagesByNewestInput>;
  allPublicTags?: InputMaybe<TagsAllPublicTagsInput>;
  allTagsAlphabetical?: InputMaybe<TagsAllTagsAlphabeticalInput>;
  allTagsHierarchical?: InputMaybe<TagsAllTagsHierarchicalInput>;
  coreAndSubforumTags?: InputMaybe<TagsCoreAndSubforumTagsInput>;
  coreTags?: InputMaybe<TagsCoreTagsInput>;
  currentUserSubforums?: InputMaybe<TagsCurrentUserSubforumsInput>;
  default?: InputMaybe<TagDefaultViewInput>;
  newTags?: InputMaybe<TagsNewTagsInput>;
  pingbackWikiPages?: InputMaybe<TagsPingbackWikiPagesInput>;
  postTypeTags?: InputMaybe<TagsPostTypeTagsInput>;
  suggestedFilterTags?: InputMaybe<TagsSuggestedFilterTagsInput>;
  tagBySlug?: InputMaybe<TagsTagBySlugInput>;
  tagsBySlugs?: InputMaybe<TagsTagsBySlugsInput>;
  tagsByTagFlag?: InputMaybe<TagsTagsByTagFlagInput>;
  tagsByTagIds?: InputMaybe<TagsTagsByTagIdsInput>;
  unprocessedLWWikiTags?: InputMaybe<TagsUnprocessedLWWikiTagsInput>;
  unreviewedTags?: InputMaybe<TagsUnreviewedTagsInput>;
  userTags?: InputMaybe<TagsUserTagsInput>;
};

export type TagUpdates = {
  __typename?: 'TagUpdates';
  added: Scalars['Int']['output'];
  commentCount: Scalars['Int']['output'];
  commentIds: Array<Scalars['String']['output']>;
  documentDeletions: Array<DocumentDeletion>;
  lastCommentedAt: Maybe<Scalars['Date']['output']>;
  lastRevisedAt: Maybe<Scalars['Date']['output']>;
  removed: Scalars['Int']['output'];
  revisionIds: Array<Scalars['String']['output']>;
  tag: Tag;
  users: Array<User>;
};

export type TagWithTotalCount = {
  __typename?: 'TagWithTotalCount';
  tags: Array<Tag>;
  totalCount: Scalars['Int']['output'];
};

export type TagsAllArbitalTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsAllLWWikiTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsAllPagesByNewestInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsAllPublicTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsAllTagsAlphabeticalInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsAllTagsHierarchicalInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  wikiGrade?: InputMaybe<Scalars['String']['input']>;
};

export type TagsCoreAndSubforumTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsCoreTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsCurrentUserSubforumsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsNewTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsPingbackWikiPagesInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  tagId?: InputMaybe<Scalars['String']['input']>;
};

export type TagsPostTypeTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsSuggestedFilterTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsTagBySlugInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type TagsTagsBySlugsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  slugs: Array<Scalars['String']['input']>;
};

export type TagsTagsByTagFlagInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  tagFlagId?: InputMaybe<Scalars['String']['input']>;
};

export type TagsTagsByTagIdsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  tagIds: Array<Scalars['String']['input']>;
};

export type TagsUnprocessedLWWikiTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsUnreviewedTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type TagsUserTagsInput = {
  excludedTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type ToggleBookmarkInput = {
  collectionName: Scalars['String']['input'];
  documentId: Scalars['String']['input'];
};

export type ToggleBookmarkOutput = {
  __typename?: 'ToggleBookmarkOutput';
  data: Maybe<Bookmark>;
};

export type TopComment = {
  __typename?: 'TopComment';
  _id: Maybe<Scalars['String']['output']>;
  baseScore: Maybe<Scalars['Int']['output']>;
  contents: Maybe<TopCommentContents>;
  extendedScore: Maybe<Scalars['JSON']['output']>;
  postId: Maybe<Scalars['String']['output']>;
  postSlug: Maybe<Scalars['String']['output']>;
  postTitle: Maybe<Scalars['String']['output']>;
  postedAt: Maybe<Scalars['Date']['output']>;
};

export type TopCommentContents = {
  __typename?: 'TopCommentContents';
  html: Maybe<Scalars['String']['output']>;
};

export type TopCommentedTagUser = {
  __typename?: 'TopCommentedTagUser';
  _id: Scalars['ID']['output'];
  displayName: Scalars['String']['output'];
  tag_comment_counts: Array<CommentCountTag>;
  total_power: Scalars['Float']['output'];
  username: Scalars['String']['output'];
};

export type Tweet = {
  __typename?: 'Tweet';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type TypingIndicator = {
  __typename?: 'TypingIndicator';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  documentId: Maybe<Scalars['String']['output']>;
  lastUpdated: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  userId: Maybe<Scalars['String']['output']>;
};

export type TypingIndicatorSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type UltraFeedEntry = {
  __typename?: 'UltraFeedEntry';
  feedCommentThread: Maybe<FeedCommentThread>;
  feedPost: Maybe<FeedPost>;
  feedSpotlight: Maybe<FeedSpotlightItem>;
  feedSubscriptionSuggestions: Maybe<FeedSubscriptionSuggestions>;
  type: UltraFeedEntryType;
};

export type UltraFeedEntryType =
  | 'feedCommentThread'
  | 'feedPost'
  | 'feedSpotlight'
  | 'feedSubscriptionSuggestions';

export type UltraFeedEvent = {
  __typename?: 'UltraFeedEvent';
  _id: Scalars['String']['output'];
  collectionName: Maybe<UltraFeedEventCollectionName>;
  createdAt: Scalars['Date']['output'];
  documentId: Maybe<Scalars['String']['output']>;
  event: Maybe<Scalars['JSON']['output']>;
  eventType: Maybe<UltraFeedEventEventType>;
  feedItemId: Maybe<Scalars['String']['output']>;
  userId: Maybe<Scalars['String']['output']>;
};

export type UltraFeedEventCollectionName =
  | 'Comments'
  | 'Posts'
  | 'Spotlights';

export type UltraFeedEventEventType =
  | 'expanded'
  | 'interacted'
  | 'seeLess'
  | 'served'
  | 'viewed';

export type UltraFeedEventOutput = {
  __typename?: 'UltraFeedEventOutput';
  data: Maybe<UltraFeedEvent>;
};

export type UltraFeedEventSelector = {
  default?: InputMaybe<EmptyViewInput>;
};

export type UltraFeedQueryResults = {
  __typename?: 'UltraFeedQueryResults';
  cutoff: Maybe<Scalars['Date']['output']>;
  endOffset: Scalars['Int']['output'];
  results: Maybe<Array<UltraFeedEntry>>;
  sessionId: Maybe<Scalars['String']['output']>;
};

export type UniqueClientViewsSeries = {
  __typename?: 'UniqueClientViewsSeries';
  date: Maybe<Scalars['Date']['output']>;
  uniqueClientViews: Maybe<Scalars['Int']['output']>;
};

export type UpdateAdvisorRequestDataInput = {
  interestedInMetaculus?: InputMaybe<Scalars['Boolean']['input']>;
  jobAds?: InputMaybe<Scalars['JSON']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateAdvisorRequestInput = {
  data: UpdateAdvisorRequestDataInput;
  selector: SelectorInput;
};

export type UpdateBookDataInput = {
  collectionId?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  displaySequencesAsGrid?: InputMaybe<Scalars['Boolean']['input']>;
  hideProgressBar?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  number?: InputMaybe<Scalars['Float']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  sequenceIds?: InputMaybe<Array<Scalars['String']['input']>>;
  showChapters?: InputMaybe<Scalars['Boolean']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  tocTitle?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateBookInput = {
  data: UpdateBookDataInput;
  selector: SelectorInput;
};

export type UpdateChapterDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  number?: InputMaybe<Scalars['Float']['input']>;
  postIds?: InputMaybe<Array<Scalars['String']['input']>>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateChapterInput = {
  data: UpdateChapterDataInput;
  selector: SelectorInput;
};

export type UpdateCollectionDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  createdAt?: InputMaybe<Scalars['Date']['input']>;
  firstPageLink?: InputMaybe<Scalars['String']['input']>;
  gridImageId?: InputMaybe<Scalars['String']['input']>;
  hideStartReadingButton?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateCollectionInput = {
  data: UpdateCollectionDataInput;
  selector: SelectorInput;
};

export type UpdateCommentDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  afDate?: InputMaybe<Scalars['Date']['input']>;
  agentFoundationsId?: InputMaybe<Scalars['String']['input']>;
  answer?: InputMaybe<Scalars['Boolean']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  debateResponse?: InputMaybe<Scalars['Boolean']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  deletedByUserId?: InputMaybe<Scalars['String']['input']>;
  deletedDate?: InputMaybe<Scalars['Date']['input']>;
  deletedPublic?: InputMaybe<Scalars['Boolean']['input']>;
  deletedReason?: InputMaybe<Scalars['String']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  hideAuthor?: InputMaybe<Scalars['Boolean']['input']>;
  hideKarma?: InputMaybe<Scalars['Boolean']['input']>;
  hideModeratorHat?: InputMaybe<Scalars['Boolean']['input']>;
  isPinnedOnProfile?: InputMaybe<Scalars['Boolean']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  legacyParentId?: InputMaybe<Scalars['String']['input']>;
  legacyPoll?: InputMaybe<Scalars['Boolean']['input']>;
  modGPTAnalysis?: InputMaybe<Scalars['String']['input']>;
  modGPTRecommendation?: InputMaybe<Scalars['String']['input']>;
  moderatorHat?: InputMaybe<Scalars['Boolean']['input']>;
  moveToAlignmentUserId?: InputMaybe<Scalars['String']['input']>;
  needsReview?: InputMaybe<Scalars['Boolean']['input']>;
  nominatedForReview?: InputMaybe<Scalars['String']['input']>;
  originalDialogueId?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  postedAt?: InputMaybe<Scalars['Date']['input']>;
  promoted?: InputMaybe<Scalars['Boolean']['input']>;
  promotedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejected?: InputMaybe<Scalars['Boolean']['input']>;
  rejectedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejectedReason?: InputMaybe<Scalars['String']['input']>;
  relevantTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  repliesBlockedUntil?: InputMaybe<Scalars['Date']['input']>;
  retracted?: InputMaybe<Scalars['Boolean']['input']>;
  reviewForAlignmentUserId?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  reviewingForReview?: InputMaybe<Scalars['String']['input']>;
  shortform?: InputMaybe<Scalars['Boolean']['input']>;
  shortformFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  spam?: InputMaybe<Scalars['Boolean']['input']>;
  subforumStickyPriority?: InputMaybe<Scalars['Float']['input']>;
  suggestForAlignmentUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateCommentInput = {
  data: UpdateCommentDataInput;
  selector: SelectorInput;
};

export type UpdateCommentModeratorActionDataInput = {
  commentId?: InputMaybe<Scalars['String']['input']>;
  endedAt?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateCommentModeratorActionInput = {
  data: UpdateCommentModeratorActionDataInput;
  selector: SelectorInput;
};

export type UpdateConversationDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  archivedByIds?: InputMaybe<Array<Scalars['String']['input']>>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  moderator?: InputMaybe<Scalars['Boolean']['input']>;
  participantIds?: InputMaybe<Array<Scalars['String']['input']>>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateConversationInput = {
  data: UpdateConversationDataInput;
  selector: SelectorInput;
};

export type UpdateCurationNoticeDataInput = {
  commentId?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
};

export type UpdateCurationNoticeInput = {
  data: UpdateCurationNoticeDataInput;
  selector: SelectorInput;
};

export type UpdateDigestDataInput = {
  endDate?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  num?: InputMaybe<Scalars['Float']['input']>;
  onsiteImageId?: InputMaybe<Scalars['String']['input']>;
  onsitePrimaryColor?: InputMaybe<Scalars['String']['input']>;
  publishedDate?: InputMaybe<Scalars['Date']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
};

export type UpdateDigestInput = {
  data: UpdateDigestDataInput;
  selector: SelectorInput;
};

export type UpdateDigestPostDataInput = {
  digestId?: InputMaybe<Scalars['String']['input']>;
  emailDigestStatus?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  onsiteDigestStatus?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateDigestPostInput = {
  data: UpdateDigestPostDataInput;
  selector: SelectorInput;
};

export type UpdateElectionCandidateDataInput = {
  amountRaised?: InputMaybe<Scalars['Float']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  electionName?: InputMaybe<Scalars['String']['input']>;
  fundraiserLink?: InputMaybe<Scalars['String']['input']>;
  gwwcId?: InputMaybe<Scalars['String']['input']>;
  gwwcLink?: InputMaybe<Scalars['String']['input']>;
  href?: InputMaybe<Scalars['String']['input']>;
  isElectionFundraiser?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  logoSrc?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  targetAmount?: InputMaybe<Scalars['Float']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateElectionCandidateInput = {
  data: UpdateElectionCandidateDataInput;
  selector: SelectorInput;
};

export type UpdateElectionVoteDataInput = {
  compareState?: InputMaybe<Scalars['JSON']['input']>;
  electionName?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  submissionComments?: InputMaybe<Scalars['JSON']['input']>;
  submittedAt?: InputMaybe<Scalars['Date']['input']>;
  userExplanation?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  userOtherComments?: InputMaybe<Scalars['String']['input']>;
  vote?: InputMaybe<Scalars['JSON']['input']>;
};

export type UpdateElectionVoteInput = {
  data: UpdateElectionVoteDataInput;
  selector: SelectorInput;
};

export type UpdateElicitQuestionDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  notes?: InputMaybe<Scalars['String']['input']>;
  resolution?: InputMaybe<Scalars['String']['input']>;
  resolvesBy?: InputMaybe<Scalars['Date']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateElicitQuestionInput = {
  data: UpdateElicitQuestionDataInput;
  selector: SelectorInput;
};

export type UpdateForumEventDataInput = {
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  bannerTextColor?: InputMaybe<Scalars['String']['input']>;
  commentId?: InputMaybe<Scalars['String']['input']>;
  commentPrompt?: InputMaybe<Scalars['String']['input']>;
  contrastColor?: InputMaybe<Scalars['String']['input']>;
  customComponent?: InputMaybe<ForumEventCustomComponent>;
  darkColor?: InputMaybe<Scalars['String']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
  eventFormat?: InputMaybe<ForumEventFormat>;
  frontpageDescription?: InputMaybe<CreateRevisionDataInput>;
  frontpageDescriptionMobile?: InputMaybe<CreateRevisionDataInput>;
  includesPoll?: InputMaybe<Scalars['Boolean']['input']>;
  isGlobal?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  lightColor?: InputMaybe<Scalars['String']['input']>;
  maxStickersPerUser?: InputMaybe<Scalars['Float']['input']>;
  pollAgreeWording?: InputMaybe<Scalars['String']['input']>;
  pollDisagreeWording?: InputMaybe<Scalars['String']['input']>;
  pollQuestion?: InputMaybe<CreateRevisionDataInput>;
  postId?: InputMaybe<Scalars['String']['input']>;
  postPageDescription?: InputMaybe<CreateRevisionDataInput>;
  publicData?: InputMaybe<Scalars['JSON']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateForumEventInput = {
  data: UpdateForumEventDataInput;
  selector: SelectorInput;
};

export type UpdateJargonTermDataInput = {
  altTerms?: InputMaybe<Array<Scalars['String']['input']>>;
  approved?: InputMaybe<Scalars['Boolean']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  term?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateJargonTermInput = {
  data: UpdateJargonTermDataInput;
  selector: SelectorInput;
};

export type UpdateLlmConversationDataInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  model?: InputMaybe<Scalars['String']['input']>;
  systemPrompt?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateLlmConversationInput = {
  data: UpdateLlmConversationDataInput;
  selector: SelectorInput;
};

export type UpdateLocalgroupDataInput = {
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  categories?: InputMaybe<Array<Scalars['String']['input']>>;
  contactInfo?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  facebookLink?: InputMaybe<Scalars['String']['input']>;
  facebookPageLink?: InputMaybe<Scalars['String']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  inactive?: InputMaybe<Scalars['Boolean']['input']>;
  isOnline?: InputMaybe<Scalars['Boolean']['input']>;
  lastActivity?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  meetupLink?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  nameInAnotherLanguage?: InputMaybe<Scalars['String']['input']>;
  organizerIds?: InputMaybe<Array<Scalars['String']['input']>>;
  slackLink?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateLocalgroupInput = {
  data: UpdateLocalgroupDataInput;
  selector: SelectorInput;
};

export type UpdateMessageDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
};

export type UpdateMessageInput = {
  data: UpdateMessageDataInput;
  selector: SelectorInput;
};

export type UpdateModerationTemplateDataInput = {
  collectionName?: InputMaybe<ModerationTemplateType>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Float']['input']>;
};

export type UpdateModerationTemplateInput = {
  data: UpdateModerationTemplateDataInput;
  selector: SelectorInput;
};

export type UpdateModeratorActionDataInput = {
  endedAt?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type?: InputMaybe<ModeratorActionType>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateModeratorActionInput = {
  data: UpdateModeratorActionDataInput;
  selector: SelectorInput;
};

export type UpdateMultiDocumentDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  index?: InputMaybe<Scalars['Float']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  tabSubtitle?: InputMaybe<Scalars['String']['input']>;
  tabTitle?: InputMaybe<Scalars['String']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateMultiDocumentInput = {
  data: UpdateMultiDocumentDataInput;
  selector: SelectorInput;
};

export type UpdateNotificationDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  viewed?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateNotificationInput = {
  data: UpdateNotificationDataInput;
  selector: SelectorInput;
};

export type UpdatePostDataInput = {
  activateRSVPs?: InputMaybe<Scalars['Boolean']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  afDate?: InputMaybe<Scalars['Date']['input']>;
  afSticky?: InputMaybe<Scalars['Boolean']['input']>;
  agentFoundationsId?: InputMaybe<Scalars['String']['input']>;
  authorIsUnreviewed?: InputMaybe<Scalars['Boolean']['input']>;
  autoFrontpage?: InputMaybe<Scalars['String']['input']>;
  bannedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  canonicalBookId?: InputMaybe<Scalars['String']['input']>;
  canonicalCollectionSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalNextPostSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalPrevPostSlug?: InputMaybe<Scalars['String']['input']>;
  canonicalSequenceId?: InputMaybe<Scalars['String']['input']>;
  canonicalSource?: InputMaybe<Scalars['String']['input']>;
  coauthorStatuses?: InputMaybe<Array<CoauthorStatusInput>>;
  coauthorUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  collabEditorDialogue?: InputMaybe<Scalars['Boolean']['input']>;
  collectionTitle?: InputMaybe<Scalars['String']['input']>;
  commentSortOrder?: InputMaybe<Scalars['String']['input']>;
  commentsLocked?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLockedToAccountsCreatedAfter?: InputMaybe<Scalars['Date']['input']>;
  contactInfo?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  curatedDate?: InputMaybe<Scalars['Date']['input']>;
  customHighlight?: InputMaybe<CreateRevisionDataInput>;
  defaultRecommendation?: InputMaybe<Scalars['Boolean']['input']>;
  deletedDraft?: InputMaybe<Scalars['Boolean']['input']>;
  disableRecommendation?: InputMaybe<Scalars['Boolean']['input']>;
  disableSidenotes?: InputMaybe<Scalars['Boolean']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  endTime?: InputMaybe<Scalars['Date']['input']>;
  eventImageId?: InputMaybe<Scalars['String']['input']>;
  eventRegistrationLink?: InputMaybe<Scalars['String']['input']>;
  eventType?: InputMaybe<Scalars['String']['input']>;
  facebookLink?: InputMaybe<Scalars['String']['input']>;
  feedId?: InputMaybe<Scalars['String']['input']>;
  feedLink?: InputMaybe<Scalars['String']['input']>;
  fmCrosspost?: InputMaybe<CrosspostInput>;
  forceAllowType3Audio?: InputMaybe<Scalars['Boolean']['input']>;
  frontpageDate?: InputMaybe<Scalars['Date']['input']>;
  generateDraftJargon?: InputMaybe<Scalars['Boolean']['input']>;
  globalEvent?: InputMaybe<Scalars['Boolean']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  groupId?: InputMaybe<Scalars['String']['input']>;
  hasCoauthorPermission?: InputMaybe<Scalars['Boolean']['input']>;
  hiddenRelatedQuestion?: InputMaybe<Scalars['Boolean']['input']>;
  hideAuthor?: InputMaybe<Scalars['Boolean']['input']>;
  hideCommentKarma?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromPopularComments?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromRecentDiscussions?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageComments?: InputMaybe<Scalars['Boolean']['input']>;
  ignoreRateLimits?: InputMaybe<Scalars['Boolean']['input']>;
  isEvent?: InputMaybe<Scalars['Boolean']['input']>;
  joinEventLink?: InputMaybe<Scalars['String']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  legacySpam?: InputMaybe<Scalars['Boolean']['input']>;
  linkSharingKey?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  manifoldReviewMarketId?: InputMaybe<Scalars['String']['input']>;
  meetupLink?: InputMaybe<Scalars['String']['input']>;
  meta?: InputMaybe<Scalars['Boolean']['input']>;
  metaDate?: InputMaybe<Scalars['Date']['input']>;
  metaSticky?: InputMaybe<Scalars['Boolean']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  moderationStyle?: InputMaybe<Scalars['String']['input']>;
  nextDayReminderSent?: InputMaybe<Scalars['Boolean']['input']>;
  noIndex?: InputMaybe<Scalars['Boolean']['input']>;
  onlineEvent?: InputMaybe<Scalars['Boolean']['input']>;
  onlyVisibleToEstablishedAccounts?: InputMaybe<Scalars['Boolean']['input']>;
  onlyVisibleToLoggedIn?: InputMaybe<Scalars['Boolean']['input']>;
  organizerIds?: InputMaybe<Array<Scalars['String']['input']>>;
  podcastEpisodeId?: InputMaybe<Scalars['String']['input']>;
  postCategory?: InputMaybe<PostCategory>;
  postedAt?: InputMaybe<Scalars['Date']['input']>;
  question?: InputMaybe<Scalars['Boolean']['input']>;
  readTimeMinutesOverride?: InputMaybe<Scalars['Float']['input']>;
  rejected?: InputMaybe<Scalars['Boolean']['input']>;
  rejectedByUserId?: InputMaybe<Scalars['String']['input']>;
  rejectedReason?: InputMaybe<Scalars['String']['input']>;
  reviewForAlignmentUserId?: InputMaybe<Scalars['String']['input']>;
  reviewForCuratedUserId?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shareWithUsers?: InputMaybe<Array<Scalars['String']['input']>>;
  sharingSettings?: InputMaybe<Scalars['JSON']['input']>;
  shortform?: InputMaybe<Scalars['Boolean']['input']>;
  sideCommentVisibility?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  socialPreview?: InputMaybe<SocialPreviewInput>;
  socialPreviewImageAutoUrl?: InputMaybe<Scalars['String']['input']>;
  socialPreviewImageId?: InputMaybe<Scalars['String']['input']>;
  startTime?: InputMaybe<Scalars['Date']['input']>;
  status?: InputMaybe<Scalars['Float']['input']>;
  sticky?: InputMaybe<Scalars['Boolean']['input']>;
  stickyPriority?: InputMaybe<Scalars['Int']['input']>;
  subforumTagId?: InputMaybe<Scalars['String']['input']>;
  submitToFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  suggestForAlignmentUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  suggestForCuratedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  swrCachingEnabled?: InputMaybe<Scalars['Boolean']['input']>;
  tagRelevance?: InputMaybe<Scalars['JSON']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  types?: InputMaybe<Array<Scalars['String']['input']>>;
  unlisted?: InputMaybe<Scalars['Boolean']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  votingSystem?: InputMaybe<Scalars['String']['input']>;
  wasEverUndrafted?: InputMaybe<Scalars['Boolean']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
};

export type UpdatePostInput = {
  data: UpdatePostDataInput;
  selector: SelectorInput;
};

export type UpdateRSSFeedDataInput = {
  displayFullContent?: InputMaybe<Scalars['Boolean']['input']>;
  importAsDraft?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  nickname?: InputMaybe<Scalars['String']['input']>;
  ownedByUser?: InputMaybe<Scalars['Boolean']['input']>;
  rawFeed?: InputMaybe<Scalars['JSON']['input']>;
  setCanonicalUrl?: InputMaybe<Scalars['Boolean']['input']>;
  status?: InputMaybe<Scalars['String']['input']>;
  url?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateRSSFeedInput = {
  data: UpdateRSSFeedDataInput;
  selector: SelectorInput;
};

export type UpdateReportDataInput = {
  claimedUserId?: InputMaybe<Scalars['String']['input']>;
  closedAt?: InputMaybe<Scalars['Date']['input']>;
  createdAt?: InputMaybe<Scalars['Date']['input']>;
  description?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  markedAsSpam?: InputMaybe<Scalars['Boolean']['input']>;
  reportedAsSpam?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateReportInput = {
  data: UpdateReportDataInput;
  selector: SelectorInput;
};

export type UpdateRevisionDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  skipAttributions?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateRevisionInput = {
  data: UpdateRevisionDataInput;
  selector: SelectorInput;
};

export type UpdateSequenceDataInput = {
  af?: InputMaybe<Scalars['Boolean']['input']>;
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  canonicalCollectionSlug?: InputMaybe<Scalars['String']['input']>;
  contents?: InputMaybe<CreateRevisionDataInput>;
  curatedOrder?: InputMaybe<Scalars['Float']['input']>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  gridImageId?: InputMaybe<Scalars['String']['input']>;
  hidden?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromAuthorPage?: InputMaybe<Scalars['Boolean']['input']>;
  isDeleted?: InputMaybe<Scalars['Boolean']['input']>;
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  title?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
  userProfileOrder?: InputMaybe<Scalars['Float']['input']>;
};

export type UpdateSequenceInput = {
  data: UpdateSequenceDataInput;
  selector: SelectorInput;
};

export type UpdateSpotlightDataInput = {
  customSubtitle?: InputMaybe<Scalars['String']['input']>;
  customTitle?: InputMaybe<Scalars['String']['input']>;
  deletedDraft?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<CreateRevisionDataInput>;
  documentId?: InputMaybe<Scalars['String']['input']>;
  documentType?: InputMaybe<SpotlightDocumentType>;
  draft?: InputMaybe<Scalars['Boolean']['input']>;
  duration?: InputMaybe<Scalars['Float']['input']>;
  headerTitle?: InputMaybe<Scalars['String']['input']>;
  headerTitleLeftColor?: InputMaybe<Scalars['String']['input']>;
  headerTitleRightColor?: InputMaybe<Scalars['String']['input']>;
  imageFade?: InputMaybe<Scalars['Boolean']['input']>;
  imageFadeColor?: InputMaybe<Scalars['String']['input']>;
  lastPromotedAt?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  position?: InputMaybe<Scalars['Float']['input']>;
  showAuthor?: InputMaybe<Scalars['Boolean']['input']>;
  spotlightDarkImageId?: InputMaybe<Scalars['String']['input']>;
  spotlightImageId?: InputMaybe<Scalars['String']['input']>;
  spotlightSplashImageUrl?: InputMaybe<Scalars['String']['input']>;
  subtitleUrl?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateSpotlightInput = {
  data: UpdateSpotlightDataInput;
  selector: SelectorInput;
};

export type UpdateSurveyDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateSurveyInput = {
  data: UpdateSurveyDataInput;
  selector: SelectorInput;
};

export type UpdateSurveyQuestionDataInput = {
  format?: InputMaybe<SurveyQuestionFormat>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  order?: InputMaybe<Scalars['Float']['input']>;
  question?: InputMaybe<Scalars['String']['input']>;
  surveyId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateSurveyQuestionInput = {
  data: UpdateSurveyQuestionDataInput;
  selector: SelectorInput;
};

export type UpdateSurveyResponseDataInput = {
  clientId?: InputMaybe<Scalars['String']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  response?: InputMaybe<Scalars['JSON']['input']>;
  surveyId?: InputMaybe<Scalars['String']['input']>;
  surveyScheduleId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateSurveyResponseInput = {
  data: UpdateSurveyResponseDataInput;
  selector: SelectorInput;
};

export type UpdateSurveyScheduleDataInput = {
  clientIds?: InputMaybe<Array<Scalars['String']['input']>>;
  deactivated?: InputMaybe<Scalars['Boolean']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
  impressionsLimit?: InputMaybe<Scalars['Float']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  maxKarma?: InputMaybe<Scalars['Float']['input']>;
  maxVisitorPercentage?: InputMaybe<Scalars['Float']['input']>;
  minKarma?: InputMaybe<Scalars['Float']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
  surveyId?: InputMaybe<Scalars['String']['input']>;
  target?: InputMaybe<SurveyScheduleTarget>;
};

export type UpdateSurveyScheduleInput = {
  data: UpdateSurveyScheduleDataInput;
  selector: SelectorInput;
};

export type UpdateTagDataInput = {
  adminOnly?: InputMaybe<Scalars['Boolean']['input']>;
  autoTagModel?: InputMaybe<Scalars['String']['input']>;
  autoTagPrompt?: InputMaybe<Scalars['String']['input']>;
  bannerImageId?: InputMaybe<Scalars['String']['input']>;
  canEditUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  canVoteOnRels?: InputMaybe<Array<TagRelVoteGroup>>;
  core?: InputMaybe<Scalars['Boolean']['input']>;
  coreTagId?: InputMaybe<Scalars['String']['input']>;
  defaultOrder?: InputMaybe<Scalars['Float']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  description?: InputMaybe<CreateRevisionDataInput>;
  descriptionTruncationCount?: InputMaybe<Scalars['Float']['input']>;
  forceAllowType3Audio?: InputMaybe<Scalars['Boolean']['input']>;
  introSequenceId?: InputMaybe<Scalars['String']['input']>;
  isPlaceholderPage?: InputMaybe<Scalars['Boolean']['input']>;
  isPostType?: InputMaybe<Scalars['Boolean']['input']>;
  isSubforum?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  name?: InputMaybe<Scalars['String']['input']>;
  needsReview?: InputMaybe<Scalars['Boolean']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  parentTagId?: InputMaybe<Scalars['String']['input']>;
  postsDefaultSortOrder?: InputMaybe<Scalars['String']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shortName?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  squareImageId?: InputMaybe<Scalars['String']['input']>;
  subTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  subforumIntroPostId?: InputMaybe<Scalars['String']['input']>;
  subforumModeratorIds?: InputMaybe<Array<Scalars['String']['input']>>;
  subforumWelcomeText?: InputMaybe<CreateRevisionDataInput>;
  subtitle?: InputMaybe<Scalars['String']['input']>;
  suggestedAsFilter?: InputMaybe<Scalars['Boolean']['input']>;
  tagFlagsIds?: InputMaybe<Array<Scalars['String']['input']>>;
  wikiGrade?: InputMaybe<Scalars['Int']['input']>;
  wikiOnly?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateTagFlagDataInput = {
  contents?: InputMaybe<CreateRevisionDataInput>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  order?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateTagFlagInput = {
  data: UpdateTagFlagDataInput;
  selector: SelectorInput;
};

export type UpdateTagInput = {
  data: UpdateTagDataInput;
  selector: SelectorInput;
};

export type UpdateUltraFeedEventDataInput = {
  event?: InputMaybe<Scalars['JSON']['input']>;
};

export type UpdateUserDataInput = {
  abTestKey?: InputMaybe<Scalars['String']['input']>;
  abTestOverrides?: InputMaybe<Scalars['JSON']['input']>;
  acceptedTos?: InputMaybe<Scalars['Boolean']['input']>;
  acknowledgedNewUserGuidelines?: InputMaybe<Scalars['Boolean']['input']>;
  afApplicationText?: InputMaybe<Scalars['String']['input']>;
  afSubmittedApplication?: InputMaybe<Scalars['Boolean']['input']>;
  allCommentingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsFilter?: InputMaybe<Scalars['String']['input']>;
  allPostsHideCommunity?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsIncludeEvents?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsOpenSettings?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsShowLowKarma?: InputMaybe<Scalars['Boolean']['input']>;
  allPostsSorting?: InputMaybe<Scalars['String']['input']>;
  allPostsTimeframe?: InputMaybe<Scalars['String']['input']>;
  allowDatadogSessionReplay?: InputMaybe<Scalars['Boolean']['input']>;
  autoSubscribeAsOrganizer?: InputMaybe<Scalars['Boolean']['input']>;
  auto_subscribe_to_my_comments?: InputMaybe<Scalars['Boolean']['input']>;
  auto_subscribe_to_my_posts?: InputMaybe<Scalars['Boolean']['input']>;
  banned?: InputMaybe<Scalars['Date']['input']>;
  bannedPersonalUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  bannedUserIds?: InputMaybe<Array<Scalars['String']['input']>>;
  beta?: InputMaybe<Scalars['Boolean']['input']>;
  biography?: InputMaybe<CreateRevisionDataInput>;
  blueskyProfileURL?: InputMaybe<Scalars['String']['input']>;
  careerStage?: InputMaybe<Array<Scalars['String']['input']>>;
  collapseModerationGuidelines?: InputMaybe<Scalars['Boolean']['input']>;
  commentSorting?: InputMaybe<Scalars['String']['input']>;
  commentingOnOtherUsersDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  conversationsDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  criticismTipsDismissed?: InputMaybe<Scalars['Boolean']['input']>;
  currentFrontpageFilter?: InputMaybe<Scalars['String']['input']>;
  defaultToCKEditor?: InputMaybe<Scalars['Boolean']['input']>;
  deleteContent?: InputMaybe<Scalars['Boolean']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  displayName?: InputMaybe<Scalars['String']['input']>;
  draftsListShowArchived?: InputMaybe<Scalars['Boolean']['input']>;
  draftsListShowShared?: InputMaybe<Scalars['Boolean']['input']>;
  draftsListSorting?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  emailSubscribedToCurated?: InputMaybe<Scalars['Boolean']['input']>;
  expandedFrontpageSections?: InputMaybe<ExpandedFrontpageSectionsSettingsInput>;
  facebookProfileURL?: InputMaybe<Scalars['String']['input']>;
  fmCrosspostUserId?: InputMaybe<Scalars['String']['input']>;
  frontpageFilterSettings?: InputMaybe<Scalars['JSON']['input']>;
  frontpageSelectedTab?: InputMaybe<Scalars['String']['input']>;
  fullName?: InputMaybe<Scalars['String']['input']>;
  generateJargonForDrafts?: InputMaybe<Scalars['Boolean']['input']>;
  generateJargonForPublishedPosts?: InputMaybe<Scalars['Boolean']['input']>;
  githubProfileURL?: InputMaybe<Scalars['String']['input']>;
  googleLocation?: InputMaybe<Scalars['JSON']['input']>;
  groups?: InputMaybe<Array<Scalars['String']['input']>>;
  hiddenPostsMetadata?: InputMaybe<Array<PostMetadataInput>>;
  hideAFNonMemberInitialWarning?: InputMaybe<Scalars['Boolean']['input']>;
  hideActiveDialogueUsers?: InputMaybe<Scalars['Boolean']['input']>;
  hideCommunitySection?: InputMaybe<Scalars['Boolean']['input']>;
  hideDialogueFacilitation?: InputMaybe<Scalars['Boolean']['input']>;
  hideElicitPredictions?: InputMaybe<Scalars['Boolean']['input']>;
  hideFromPeopleDirectory?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBook2019Ad?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBook2020Ad?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageBookAd?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageFilterSettingsDesktop?: InputMaybe<Scalars['Boolean']['input']>;
  hideFrontpageMap?: InputMaybe<Scalars['Boolean']['input']>;
  hideHomeRHS?: InputMaybe<Scalars['Boolean']['input']>;
  hideIntercom?: InputMaybe<Scalars['Boolean']['input']>;
  hideJobAdUntil?: InputMaybe<Scalars['Date']['input']>;
  hideMeetupsPoke?: InputMaybe<Scalars['Boolean']['input']>;
  hideNavigationSidebar?: InputMaybe<Scalars['Boolean']['input']>;
  hidePostsRecommendations?: InputMaybe<Scalars['Boolean']['input']>;
  hideSubscribePoke?: InputMaybe<Scalars['Boolean']['input']>;
  hideSunshineSidebar?: InputMaybe<Scalars['Boolean']['input']>;
  hideTaggingProgressBar?: InputMaybe<Scalars['Boolean']['input']>;
  howICanHelpOthers?: InputMaybe<CreateRevisionDataInput>;
  howOthersCanHelpMe?: InputMaybe<CreateRevisionDataInput>;
  inactiveSurveyEmailSentAt?: InputMaybe<Scalars['Date']['input']>;
  isAdmin?: InputMaybe<Scalars['Boolean']['input']>;
  jobTitle?: InputMaybe<Scalars['String']['input']>;
  karmaChangeBatchStart?: InputMaybe<Scalars['Date']['input']>;
  karmaChangeLastOpened?: InputMaybe<Scalars['Date']['input']>;
  karmaChangeNotifierSettings?: InputMaybe<Scalars['JSON']['input']>;
  lastNotificationsCheck?: InputMaybe<Scalars['Date']['input']>;
  lastUsedTimezone?: InputMaybe<Scalars['String']['input']>;
  legacy?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  legacyId?: InputMaybe<Scalars['String']['input']>;
  linkedinProfileURL?: InputMaybe<Scalars['String']['input']>;
  location?: InputMaybe<Scalars['String']['input']>;
  mapLocation?: InputMaybe<Scalars['JSON']['input']>;
  mapMarkerText?: InputMaybe<Scalars['String']['input']>;
  markDownPostEditor?: InputMaybe<Scalars['Boolean']['input']>;
  moderationGuidelines?: InputMaybe<CreateRevisionDataInput>;
  moderationStyle?: InputMaybe<Scalars['String']['input']>;
  moderatorAssistance?: InputMaybe<Scalars['Boolean']['input']>;
  nearbyEventsNotifications?: InputMaybe<Scalars['Boolean']['input']>;
  nearbyEventsNotificationsLocation?: InputMaybe<Scalars['JSON']['input']>;
  nearbyEventsNotificationsRadius?: InputMaybe<Scalars['Float']['input']>;
  nearbyPeopleNotificationThreshold?: InputMaybe<Scalars['Float']['input']>;
  needsReview?: InputMaybe<Scalars['Boolean']['input']>;
  noCollapseCommentsFrontpage?: InputMaybe<Scalars['Boolean']['input']>;
  noCollapseCommentsPosts?: InputMaybe<Scalars['Boolean']['input']>;
  noExpandUnreadCommentsReview?: InputMaybe<Scalars['Boolean']['input']>;
  noKibitz?: InputMaybe<Scalars['Boolean']['input']>;
  noSingleLineComments?: InputMaybe<Scalars['Boolean']['input']>;
  noindex?: InputMaybe<Scalars['Boolean']['input']>;
  notificationAddedAsCoauthor?: InputMaybe<Scalars['JSON']['input']>;
  notificationAlignmentSubmissionApproved?: InputMaybe<Scalars['JSON']['input']>;
  notificationCommentsOnDraft?: InputMaybe<Scalars['JSON']['input']>;
  notificationCommentsOnSubscribedPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationDebateCommentsOnSubscribedPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationDebateReplies?: InputMaybe<Scalars['JSON']['input']>;
  notificationDialogueMatch?: InputMaybe<Scalars['JSON']['input']>;
  notificationDialogueMessages?: InputMaybe<Scalars['JSON']['input']>;
  notificationEventInRadius?: InputMaybe<Scalars['JSON']['input']>;
  notificationGroupAdministration?: InputMaybe<Scalars['JSON']['input']>;
  notificationKarmaPowersGained?: InputMaybe<Scalars['JSON']['input']>;
  notificationNewDialogueChecks?: InputMaybe<Scalars['JSON']['input']>;
  notificationNewMention?: InputMaybe<Scalars['JSON']['input']>;
  notificationPostsInGroups?: InputMaybe<Scalars['JSON']['input']>;
  notificationPostsNominatedReview?: InputMaybe<Scalars['JSON']['input']>;
  notificationPrivateMessage?: InputMaybe<Scalars['JSON']['input']>;
  notificationPublishedDialogueMessages?: InputMaybe<Scalars['JSON']['input']>;
  notificationRSVPs?: InputMaybe<Scalars['JSON']['input']>;
  notificationRepliesToMyComments?: InputMaybe<Scalars['JSON']['input']>;
  notificationRepliesToSubscribedComments?: InputMaybe<Scalars['JSON']['input']>;
  notificationSharedWithMe?: InputMaybe<Scalars['JSON']['input']>;
  notificationShortformContent?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubforumUnread?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedSequencePost?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedTagPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedUserComment?: InputMaybe<Scalars['JSON']['input']>;
  notificationSubscribedUserPost?: InputMaybe<Scalars['JSON']['input']>;
  notificationYourTurnMatchForm?: InputMaybe<Scalars['JSON']['input']>;
  nullifyVotes?: InputMaybe<Scalars['Boolean']['input']>;
  optedInToDialogueFacilitation?: InputMaybe<Scalars['Boolean']['input']>;
  optedOutOfSurveys?: InputMaybe<Scalars['Boolean']['input']>;
  organization?: InputMaybe<Scalars['String']['input']>;
  organizerOfGroupIds?: InputMaybe<Array<Scalars['String']['input']>>;
  partiallyReadSequences?: InputMaybe<Array<PartiallyReadSequenceItemInput>>;
  paymentEmail?: InputMaybe<Scalars['String']['input']>;
  paymentInfo?: InputMaybe<Scalars['String']['input']>;
  permanentDeletionRequestedAt?: InputMaybe<Scalars['Date']['input']>;
  petrovLaunchCodeDate?: InputMaybe<Scalars['Date']['input']>;
  petrovOptOut?: InputMaybe<Scalars['Boolean']['input']>;
  petrovPressedButtonDate?: InputMaybe<Scalars['Date']['input']>;
  postGlossariesPinned?: InputMaybe<Scalars['Boolean']['input']>;
  postingDisabled?: InputMaybe<Scalars['Boolean']['input']>;
  previousDisplayName?: InputMaybe<Scalars['String']['input']>;
  profileImageId?: InputMaybe<Scalars['String']['input']>;
  profileTagIds?: InputMaybe<Array<Scalars['String']['input']>>;
  profileUpdatedAt?: InputMaybe<Scalars['Date']['input']>;
  programParticipation?: InputMaybe<Array<Scalars['String']['input']>>;
  reactPaletteStyle?: InputMaybe<ReactPaletteStyle>;
  recommendationSettings?: InputMaybe<RecommendationSettingsInput>;
  revealChecksToAdmins?: InputMaybe<Scalars['Boolean']['input']>;
  reviewForAlignmentForumUserId?: InputMaybe<Scalars['String']['input']>;
  reviewVotesQuadratic?: InputMaybe<Scalars['Boolean']['input']>;
  reviewVotesQuadratic2019?: InputMaybe<Scalars['Boolean']['input']>;
  reviewVotesQuadratic2020?: InputMaybe<Scalars['Boolean']['input']>;
  reviewedAt?: InputMaybe<Scalars['Date']['input']>;
  reviewedByUserId?: InputMaybe<Scalars['String']['input']>;
  shortformFeedId?: InputMaybe<Scalars['String']['input']>;
  showCommunityInRecentDiscussion?: InputMaybe<Scalars['Boolean']['input']>;
  showDialoguesList?: InputMaybe<Scalars['Boolean']['input']>;
  showHideKarmaOption?: InputMaybe<Scalars['Boolean']['input']>;
  showMatches?: InputMaybe<Scalars['Boolean']['input']>;
  showMyDialogues?: InputMaybe<Scalars['Boolean']['input']>;
  showPostAuthorCard?: InputMaybe<Scalars['Boolean']['input']>;
  showRecommendedPartners?: InputMaybe<Scalars['Boolean']['input']>;
  signUpReCaptchaRating?: InputMaybe<Scalars['Float']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
  snoozedUntilContentCount?: InputMaybe<Scalars['Float']['input']>;
  sortDraftsBy?: InputMaybe<Scalars['String']['input']>;
  subforumPreferredLayout?: InputMaybe<SubforumPreferredLayout>;
  subscribedToDigest?: InputMaybe<Scalars['Boolean']['input']>;
  subscribedToNewsletter?: InputMaybe<Scalars['Boolean']['input']>;
  sunshineFlagged?: InputMaybe<Scalars['Boolean']['input']>;
  sunshineNotes?: InputMaybe<Scalars['String']['input']>;
  sunshineSnoozed?: InputMaybe<Scalars['Boolean']['input']>;
  taggingDashboardCollapsed?: InputMaybe<Scalars['Boolean']['input']>;
  theme?: InputMaybe<Scalars['JSON']['input']>;
  twitterProfileURL?: InputMaybe<Scalars['String']['input']>;
  twitterProfileURLAdmin?: InputMaybe<Scalars['String']['input']>;
  unsubscribeFromAll?: InputMaybe<Scalars['Boolean']['input']>;
  userSurveyEmailSentAt?: InputMaybe<Scalars['Date']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  usernameUnset?: InputMaybe<Scalars['Boolean']['input']>;
  viewUnreviewedComments?: InputMaybe<Scalars['Boolean']['input']>;
  voteBanned?: InputMaybe<Scalars['Boolean']['input']>;
  walledGardenInvite?: InputMaybe<Scalars['Boolean']['input']>;
  walledGardenPortalOnboarded?: InputMaybe<Scalars['Boolean']['input']>;
  website?: InputMaybe<Scalars['String']['input']>;
  whenConfirmationEmailSent?: InputMaybe<Scalars['Date']['input']>;
};

export type UpdateUserEAGDetailDataInput = {
  careerStage?: InputMaybe<Array<Scalars['String']['input']>>;
  countryOrRegion?: InputMaybe<Scalars['String']['input']>;
  experiencedIn?: InputMaybe<Array<Scalars['String']['input']>>;
  interestedIn?: InputMaybe<Array<Scalars['String']['input']>>;
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  nearestCity?: InputMaybe<Scalars['String']['input']>;
  willingnessToRelocate?: InputMaybe<Scalars['JSON']['input']>;
};

export type UpdateUserEAGDetailInput = {
  data: UpdateUserEAGDetailDataInput;
  selector: SelectorInput;
};

export type UpdateUserInput = {
  data: UpdateUserDataInput;
  selector: SelectorInput;
};

export type UpdateUserJobAdDataInput = {
  adState?: InputMaybe<Scalars['String']['input']>;
  lastUpdated?: InputMaybe<Scalars['Date']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  reminderSetAt?: InputMaybe<Scalars['Date']['input']>;
};

export type UpdateUserJobAdInput = {
  data: UpdateUserJobAdDataInput;
  selector: SelectorInput;
};

export type UpdateUserMostValuablePostDataInput = {
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateUserMostValuablePostInput = {
  data: UpdateUserMostValuablePostDataInput;
  selector: SelectorInput;
};

export type UpdateUserRateLimitDataInput = {
  actionsPerInterval?: InputMaybe<Scalars['Float']['input']>;
  endedAt?: InputMaybe<Scalars['Date']['input']>;
  intervalLength?: InputMaybe<Scalars['Float']['input']>;
  intervalUnit?: InputMaybe<UserRateLimitIntervalUnit>;
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  type?: InputMaybe<UserRateLimitType>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UpdateUserRateLimitInput = {
  data: UpdateUserRateLimitDataInput;
  selector: SelectorInput;
};

export type UpdateUserTagRelDataInput = {
  legacyData?: InputMaybe<Scalars['JSON']['input']>;
  subforumEmailNotifications?: InputMaybe<Scalars['Boolean']['input']>;
  subforumHideIntroPost?: InputMaybe<Scalars['Boolean']['input']>;
  subforumShowUnreadInSidebar?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UpdateUserTagRelInput = {
  data: UpdateUserTagRelDataInput;
  selector: SelectorInput;
};

export type UpvotedUser = {
  __typename?: 'UpvotedUser';
  _id: Scalars['ID']['output'];
  agreement_values: Scalars['String']['output'];
  displayName: Scalars['String']['output'];
  power_values: Scalars['String']['output'];
  recently_active_matchmaking: Scalars['Boolean']['output'];
  total_agreement: Scalars['Float']['output'];
  total_power: Scalars['Float']['output'];
  username: Scalars['String']['output'];
  vote_counts: Scalars['Int']['output'];
};

export type User = {
  __typename?: 'User';
  IPs: Maybe<Array<Scalars['String']['output']>>;
  _id: Scalars['String']['output'];
  abTestKey: Maybe<Scalars['String']['output']>;
  abTestOverrides: Maybe<Scalars['JSON']['output']>;
  acceptedTos: Maybe<Scalars['Boolean']['output']>;
  acknowledgedNewUserGuidelines: Maybe<Scalars['Boolean']['output']>;
  afApplicationText: Maybe<Scalars['String']['output']>;
  afCommentCount: Scalars['Float']['output'];
  afKarma: Scalars['Float']['output'];
  afPostCount: Scalars['Float']['output'];
  afSequenceCount: Scalars['Float']['output'];
  afSequenceDraftCount: Scalars['Float']['output'];
  afSubmittedApplication: Maybe<Scalars['Boolean']['output']>;
  allCommentingDisabled: Maybe<Scalars['Boolean']['output']>;
  allPostsFilter: Maybe<Scalars['String']['output']>;
  allPostsHideCommunity: Maybe<Scalars['Boolean']['output']>;
  allPostsIncludeEvents: Maybe<Scalars['Boolean']['output']>;
  allPostsOpenSettings: Maybe<Scalars['Boolean']['output']>;
  allPostsShowLowKarma: Maybe<Scalars['Boolean']['output']>;
  allPostsSorting: Maybe<Scalars['String']['output']>;
  allPostsTimeframe: Maybe<Scalars['String']['output']>;
  allowDatadogSessionReplay: Scalars['Boolean']['output'];
  altAccountsDetected: Maybe<Scalars['Boolean']['output']>;
  associatedClientId: Maybe<ClientId>;
  associatedClientIds: Maybe<Array<ClientId>>;
  autoSubscribeAsOrganizer: Scalars['Boolean']['output'];
  auto_subscribe_to_my_comments: Scalars['Boolean']['output'];
  auto_subscribe_to_my_posts: Scalars['Boolean']['output'];
  banned: Maybe<Scalars['Date']['output']>;
  bannedPersonalUserIds: Maybe<Array<Scalars['String']['output']>>;
  bannedUserIds: Maybe<Array<Scalars['String']['output']>>;
  beta: Maybe<Scalars['Boolean']['output']>;
  bigDownvoteCount: Maybe<Scalars['Float']['output']>;
  bigDownvoteReceivedCount: Maybe<Scalars['Float']['output']>;
  bigUpvoteCount: Maybe<Scalars['Float']['output']>;
  bigUpvoteReceivedCount: Maybe<Scalars['Float']['output']>;
  bio: Maybe<Scalars['String']['output']>;
  biography: Maybe<Revision>;
  biography_latest: Maybe<Scalars['String']['output']>;
  blueskyProfileURL: Maybe<Scalars['String']['output']>;
  bookmarkedPosts: Maybe<Array<Post>>;
  bookmarkedPostsMetadata: Maybe<Array<PostMetadataOutput>>;
  bookmarksCount: Maybe<Scalars['Int']['output']>;
  careerStage: Maybe<Array<Scalars['String']['output']>>;
  collapseModerationGuidelines: Maybe<Scalars['Boolean']['output']>;
  commentCount: Scalars['Float']['output'];
  commentSorting: Maybe<Scalars['String']['output']>;
  commentingOnOtherUsersDisabled: Maybe<Scalars['Boolean']['output']>;
  conversationsDisabled: Maybe<Scalars['Boolean']['output']>;
  createdAt: Scalars['Date']['output'];
  criticismTipsDismissed: Maybe<Scalars['Boolean']['output']>;
  currentFrontpageFilter: Maybe<Scalars['String']['output']>;
  defaultToCKEditor: Maybe<Scalars['Boolean']['output']>;
  deleteContent: Maybe<Scalars['Boolean']['output']>;
  deleted: Scalars['Boolean']['output'];
  displayName: Scalars['String']['output'];
  draftsListShowArchived: Maybe<Scalars['Boolean']['output']>;
  draftsListShowShared: Maybe<Scalars['Boolean']['output']>;
  draftsListSorting: Maybe<Scalars['String']['output']>;
  editUrl: Maybe<Scalars['String']['output']>;
  email: Maybe<Scalars['String']['output']>;
  emailSubscribedToCurated: Maybe<Scalars['Boolean']['output']>;
  emails: Maybe<Array<Scalars['JSON']['output']>>;
  expandedFrontpageSections: Maybe<ExpandedFrontpageSectionsSettingsOutput>;
  facebookProfileURL: Maybe<Scalars['String']['output']>;
  fmCrosspostUserId: Maybe<Scalars['String']['output']>;
  frontpageFilterSettings: Maybe<Scalars['JSON']['output']>;
  frontpagePostCount: Scalars['Float']['output'];
  frontpageSelectedTab: Maybe<Scalars['String']['output']>;
  fullName: Maybe<Scalars['String']['output']>;
  generateJargonForDrafts: Maybe<Scalars['Boolean']['output']>;
  generateJargonForPublishedPosts: Maybe<Scalars['Boolean']['output']>;
  githubProfileURL: Maybe<Scalars['String']['output']>;
  goodHeartTokens: Maybe<Scalars['Float']['output']>;
  googleLocation: Maybe<Scalars['JSON']['output']>;
  groups: Maybe<Array<Scalars['String']['output']>>;
  hasAnyBookmarks: Maybe<Scalars['Boolean']['output']>;
  hasAuth0Id: Maybe<Scalars['Boolean']['output']>;
  hasContinueReading: Maybe<Scalars['Boolean']['output']>;
  hiddenPosts: Maybe<Array<Post>>;
  hiddenPostsMetadata: Maybe<Array<PostMetadataOutput>>;
  hideAFNonMemberInitialWarning: Maybe<Scalars['Boolean']['output']>;
  hideActiveDialogueUsers: Maybe<Scalars['Boolean']['output']>;
  hideCommunitySection: Scalars['Boolean']['output'];
  hideDialogueFacilitation: Maybe<Scalars['Boolean']['output']>;
  hideElicitPredictions: Maybe<Scalars['Boolean']['output']>;
  hideFromPeopleDirectory: Scalars['Boolean']['output'];
  hideFrontpageBook2019Ad: Maybe<Scalars['Boolean']['output']>;
  hideFrontpageBook2020Ad: Maybe<Scalars['Boolean']['output']>;
  hideFrontpageBookAd: Maybe<Scalars['Boolean']['output']>;
  hideFrontpageFilterSettingsDesktop: Maybe<Scalars['Boolean']['output']>;
  hideFrontpageMap: Maybe<Scalars['Boolean']['output']>;
  hideHomeRHS: Maybe<Scalars['Boolean']['output']>;
  hideIntercom: Scalars['Boolean']['output'];
  hideJobAdUntil: Maybe<Scalars['Date']['output']>;
  hideMeetupsPoke: Maybe<Scalars['Boolean']['output']>;
  hideNavigationSidebar: Maybe<Scalars['Boolean']['output']>;
  hidePostsRecommendations: Scalars['Boolean']['output'];
  hideSubscribePoke: Maybe<Scalars['Boolean']['output']>;
  hideSunshineSidebar: Maybe<Scalars['Boolean']['output']>;
  hideTaggingProgressBar: Maybe<Scalars['Boolean']['output']>;
  hideWalledGardenUI: Maybe<Scalars['Boolean']['output']>;
  howICanHelpOthers: Maybe<Revision>;
  howICanHelpOthers_latest: Maybe<Scalars['String']['output']>;
  howOthersCanHelpMe: Maybe<Revision>;
  howOthersCanHelpMe_latest: Maybe<Scalars['String']['output']>;
  htmlBio: Scalars['String']['output'];
  htmlMapMarkerText: Maybe<Scalars['String']['output']>;
  inactiveSurveyEmailSentAt: Maybe<Scalars['Date']['output']>;
  isAdmin: Scalars['Boolean']['output'];
  isReviewed: Maybe<Scalars['Boolean']['output']>;
  jobTitle: Maybe<Scalars['String']['output']>;
  karma: Scalars['Float']['output'];
  karmaChangeBatchStart: Maybe<Scalars['Date']['output']>;
  karmaChangeLastOpened: Maybe<Scalars['Date']['output']>;
  karmaChangeNotifierSettings: Maybe<Scalars['JSON']['output']>;
  karmaChanges: Maybe<KarmaChanges>;
  lastNotificationsCheck: Maybe<Scalars['Date']['output']>;
  lastUsedTimezone: Maybe<Scalars['String']['output']>;
  legacy: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  legacyId: Maybe<Scalars['String']['output']>;
  linkedinProfileURL: Maybe<Scalars['String']['output']>;
  location: Maybe<Scalars['String']['output']>;
  lwWikiImport: Maybe<Scalars['Boolean']['output']>;
  mapLocation: Maybe<Scalars['JSON']['output']>;
  mapLocationLatLng: Maybe<LatLng>;
  mapLocationSet: Maybe<Scalars['Boolean']['output']>;
  mapMarkerText: Maybe<Scalars['String']['output']>;
  markDownPostEditor: Scalars['Boolean']['output'];
  maxCommentCount: Scalars['Float']['output'];
  maxPostCount: Scalars['Float']['output'];
  moderationGuidelines: Maybe<Revision>;
  moderationGuidelines_latest: Maybe<Scalars['String']['output']>;
  moderationStyle: Maybe<Scalars['String']['output']>;
  moderatorActions: Maybe<Array<ModeratorAction>>;
  moderatorAssistance: Maybe<Scalars['Boolean']['output']>;
  mongoLocation: Maybe<Scalars['JSON']['output']>;
  nearbyEventsNotifications: Scalars['Boolean']['output'];
  nearbyEventsNotificationsLocation: Maybe<Scalars['JSON']['output']>;
  nearbyEventsNotificationsMongoLocation: Maybe<Scalars['JSON']['output']>;
  nearbyEventsNotificationsRadius: Maybe<Scalars['Float']['output']>;
  nearbyPeopleNotificationThreshold: Maybe<Scalars['Float']['output']>;
  needsReview: Maybe<Scalars['Boolean']['output']>;
  noCollapseCommentsFrontpage: Scalars['Boolean']['output'];
  noCollapseCommentsPosts: Scalars['Boolean']['output'];
  noExpandUnreadCommentsReview: Scalars['Boolean']['output'];
  noKibitz: Maybe<Scalars['Boolean']['output']>;
  noSingleLineComments: Scalars['Boolean']['output'];
  noindex: Scalars['Boolean']['output'];
  notificationAddedAsCoauthor: Maybe<Scalars['JSON']['output']>;
  notificationAlignmentSubmissionApproved: Maybe<Scalars['JSON']['output']>;
  notificationCommentsOnDraft: Maybe<Scalars['JSON']['output']>;
  notificationCommentsOnSubscribedPost: Maybe<Scalars['JSON']['output']>;
  notificationDebateCommentsOnSubscribedPost: Maybe<Scalars['JSON']['output']>;
  notificationDebateReplies: Maybe<Scalars['JSON']['output']>;
  notificationDialogueMatch: Maybe<Scalars['JSON']['output']>;
  notificationDialogueMessages: Maybe<Scalars['JSON']['output']>;
  notificationEventInRadius: Maybe<Scalars['JSON']['output']>;
  notificationGroupAdministration: Maybe<Scalars['JSON']['output']>;
  notificationKarmaPowersGained: Maybe<Scalars['JSON']['output']>;
  notificationNewDialogueChecks: Maybe<Scalars['JSON']['output']>;
  notificationNewMention: Maybe<Scalars['JSON']['output']>;
  notificationPostsInGroups: Maybe<Scalars['JSON']['output']>;
  notificationPostsNominatedReview: Maybe<Scalars['JSON']['output']>;
  notificationPrivateMessage: Maybe<Scalars['JSON']['output']>;
  notificationPublishedDialogueMessages: Maybe<Scalars['JSON']['output']>;
  notificationRSVPs: Maybe<Scalars['JSON']['output']>;
  notificationRepliesToMyComments: Maybe<Scalars['JSON']['output']>;
  notificationRepliesToSubscribedComments: Maybe<Scalars['JSON']['output']>;
  notificationSharedWithMe: Maybe<Scalars['JSON']['output']>;
  notificationShortformContent: Maybe<Scalars['JSON']['output']>;
  notificationSubforumUnread: Maybe<Scalars['JSON']['output']>;
  notificationSubscribedSequencePost: Maybe<Scalars['JSON']['output']>;
  notificationSubscribedTagPost: Maybe<Scalars['JSON']['output']>;
  notificationSubscribedUserComment: Maybe<Scalars['JSON']['output']>;
  notificationSubscribedUserPost: Maybe<Scalars['JSON']['output']>;
  notificationYourTurnMatchForm: Maybe<Scalars['JSON']['output']>;
  nullifyVotes: Maybe<Scalars['Boolean']['output']>;
  oldSlugs: Array<Scalars['String']['output']>;
  optedInToDialogueFacilitation: Maybe<Scalars['Boolean']['output']>;
  optedOutOfSurveys: Maybe<Scalars['Boolean']['output']>;
  organization: Maybe<Scalars['String']['output']>;
  organizerOfGroupIds: Array<Scalars['String']['output']>;
  organizerOfGroups: Array<Localgroup>;
  pagePath: Maybe<Scalars['String']['output']>;
  pageUrl: Maybe<Scalars['String']['output']>;
  partiallyReadSequences: Maybe<Array<PartiallyReadSequenceItemOutput>>;
  paymentEmail: Maybe<Scalars['String']['output']>;
  paymentInfo: Maybe<Scalars['String']['output']>;
  permanentDeletionRequestedAt: Maybe<Scalars['Date']['output']>;
  petrovLaunchCodeDate: Maybe<Scalars['Date']['output']>;
  petrovOptOut: Scalars['Boolean']['output'];
  petrovPressedButtonDate: Maybe<Scalars['Date']['output']>;
  postCount: Scalars['Float']['output'];
  postGlossariesPinned: Maybe<Scalars['Boolean']['output']>;
  postingDisabled: Maybe<Scalars['Boolean']['output']>;
  posts: Maybe<Array<Post>>;
  previousDisplayName: Maybe<Scalars['String']['output']>;
  profile: Maybe<Scalars['JSON']['output']>;
  profileImageId: Maybe<Scalars['String']['output']>;
  profileTagIds: Array<Scalars['String']['output']>;
  profileTags: Array<Tag>;
  profileUpdatedAt: Scalars['Date']['output'];
  programParticipation: Maybe<Array<Scalars['String']['output']>>;
  rateLimitNextAbleToComment: Maybe<Scalars['JSON']['output']>;
  rateLimitNextAbleToPost: Maybe<Scalars['JSON']['output']>;
  reactPaletteStyle: Maybe<ReactPaletteStyle>;
  recentKarmaInfo: Maybe<Scalars['JSON']['output']>;
  recommendationSettings: Maybe<Scalars['JSON']['output']>;
  revealChecksToAdmins: Maybe<Scalars['Boolean']['output']>;
  reviewForAlignmentForumUserId: Maybe<Scalars['String']['output']>;
  reviewVoteCount: Maybe<Scalars['Int']['output']>;
  reviewVotesQuadratic: Maybe<Scalars['Boolean']['output']>;
  reviewVotesQuadratic2019: Maybe<Scalars['Boolean']['output']>;
  reviewVotesQuadratic2020: Maybe<Scalars['Boolean']['output']>;
  reviewedAt: Maybe<Scalars['Date']['output']>;
  reviewedByUser: Maybe<User>;
  reviewedByUserId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  sequenceCount: Scalars['Float']['output'];
  sequenceDraftCount: Scalars['Float']['output'];
  services: Maybe<Scalars['JSON']['output']>;
  shortformFeed: Maybe<Post>;
  shortformFeedId: Maybe<Scalars['String']['output']>;
  showCommunityInRecentDiscussion: Scalars['Boolean']['output'];
  showDialoguesList: Maybe<Scalars['Boolean']['output']>;
  showHideKarmaOption: Maybe<Scalars['Boolean']['output']>;
  showMatches: Maybe<Scalars['Boolean']['output']>;
  showMyDialogues: Maybe<Scalars['Boolean']['output']>;
  showPostAuthorCard: Maybe<Scalars['Boolean']['output']>;
  showRecommendedPartners: Maybe<Scalars['Boolean']['output']>;
  signUpReCaptchaRating: Maybe<Scalars['Float']['output']>;
  slug: Scalars['String']['output'];
  smallDownvoteCount: Maybe<Scalars['Float']['output']>;
  smallDownvoteReceivedCount: Maybe<Scalars['Float']['output']>;
  smallUpvoteCount: Maybe<Scalars['Float']['output']>;
  smallUpvoteReceivedCount: Maybe<Scalars['Float']['output']>;
  snoozedUntilContentCount: Maybe<Scalars['Float']['output']>;
  sortDraftsBy: Maybe<Scalars['String']['output']>;
  spamRiskScore: Scalars['Float']['output'];
  subforumPreferredLayout: Maybe<SubforumPreferredLayout>;
  subscribedToDigest: Maybe<Scalars['Boolean']['output']>;
  subscribedToNewsletter: Maybe<Scalars['Boolean']['output']>;
  sunshineFlagged: Maybe<Scalars['Boolean']['output']>;
  sunshineNotes: Maybe<Scalars['String']['output']>;
  sunshineSnoozed: Maybe<Scalars['Boolean']['output']>;
  tagRevisionCount: Scalars['Float']['output'];
  taggingDashboardCollapsed: Maybe<Scalars['Boolean']['output']>;
  theme: Maybe<Scalars['JSON']['output']>;
  twitterProfileURL: Maybe<Scalars['String']['output']>;
  twitterProfileURLAdmin: Maybe<Scalars['String']['output']>;
  unsubscribeFromAll: Maybe<Scalars['Boolean']['output']>;
  userSurveyEmailSentAt: Maybe<Scalars['Date']['output']>;
  username: Maybe<Scalars['String']['output']>;
  usernameUnset: Maybe<Scalars['Boolean']['output']>;
  usersContactedBeforeReview: Maybe<Array<Scalars['String']['output']>>;
  viewUnreviewedComments: Maybe<Scalars['Boolean']['output']>;
  voteBanned: Maybe<Scalars['Boolean']['output']>;
  voteCount: Maybe<Scalars['Float']['output']>;
  voteReceivedCount: Maybe<Scalars['Float']['output']>;
  walledGardenInvite: Maybe<Scalars['Boolean']['output']>;
  walledGardenPortalOnboarded: Maybe<Scalars['Boolean']['output']>;
  website: Maybe<Scalars['String']['output']>;
  whenConfirmationEmailSent: Maybe<Scalars['Date']['output']>;
};


export type UserbiographyArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type UserhowICanHelpOthersArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type UserhowOthersCanHelpMeArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type UserkarmaChangesArgs = {
  endDate?: InputMaybe<Scalars['Date']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
};


export type UsermoderationGuidelinesArgs = {
  version?: InputMaybe<Scalars['String']['input']>;
};


export type UserpostsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>;
};


export type UserrateLimitNextAbleToCommentArgs = {
  postId?: InputMaybe<Scalars['String']['input']>;
};


export type UserrateLimitNextAbleToPostArgs = {
  eventForm?: InputMaybe<Scalars['Boolean']['input']>;
};

export type UserActivity = {
  __typename?: 'UserActivity';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
};

export type UserCoreTagReads = {
  __typename?: 'UserCoreTagReads';
  tagId: Scalars['String']['output'];
  userReadCount: Scalars['Int']['output'];
};

export type UserDialogueUsefulData = {
  __typename?: 'UserDialogueUsefulData';
  activeDialogueMatchSeekers: Maybe<Array<Maybe<User>>>;
  dialogueUsers: Maybe<Array<Maybe<User>>>;
  topUsers: Maybe<Array<Maybe<UpvotedUser>>>;
};

export type UserEAGDetail = {
  __typename?: 'UserEAGDetail';
  _id: Scalars['String']['output'];
  careerStage: Maybe<Array<Scalars['String']['output']>>;
  countryOrRegion: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  experiencedIn: Maybe<Array<Scalars['String']['output']>>;
  interestedIn: Maybe<Array<Scalars['String']['output']>>;
  lastUpdated: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  nearestCity: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
  willingnessToRelocate: Maybe<Scalars['JSON']['output']>;
};

export type UserEAGDetailOutput = {
  __typename?: 'UserEAGDetailOutput';
  data: Maybe<UserEAGDetail>;
};

export type UserEAGDetailSelector = {
  dataByUser?: InputMaybe<UserEAGDetailsDataByUserInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type UserEAGDetailsDataByUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UserGroup =
  | 'admins'
  | 'alignmentForum'
  | 'alignmentForumAdmins'
  | 'alignmentVoters'
  | 'canBypassPostRateLimit'
  | 'canModeratePersonal'
  | 'canSuggestCuration'
  | 'debaters'
  | 'guests'
  | 'members'
  | 'podcasters'
  | 'realAdmins'
  | 'sunshineRegiment'
  | 'trustLevel1';

export type UserJobAd = {
  __typename?: 'UserJobAd';
  _id: Scalars['String']['output'];
  adState: Maybe<Scalars['String']['output']>;
  createdAt: Scalars['Date']['output'];
  jobName: Maybe<Scalars['String']['output']>;
  lastUpdated: Maybe<Scalars['Date']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  reminderSetAt: Maybe<Scalars['Date']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type UserJobAdOutput = {
  __typename?: 'UserJobAdOutput';
  data: Maybe<UserJobAd>;
};

export type UserJobAdSelector = {
  adsByUser?: InputMaybe<UserJobAdsAdsByUserInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type UserJobAdsAdsByUserInput = {
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UserLikingTag = {
  __typename?: 'UserLikingTag';
  displayName: Scalars['String']['output'];
  userId: Scalars['String']['output'];
};

export type UserMostValuablePost = {
  __typename?: 'UserMostValuablePost';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  deleted: Maybe<Scalars['Boolean']['output']>;
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  postId: Maybe<Scalars['String']['output']>;
  schemaVersion: Scalars['Float']['output'];
  user: Maybe<User>;
  userId: Maybe<Scalars['String']['output']>;
};

export type UserMostValuablePostOutput = {
  __typename?: 'UserMostValuablePostOutput';
  data: Maybe<UserMostValuablePost>;
};

export type UserMostValuablePostSelector = {
  currentUserMostValuablePosts?: InputMaybe<EmptyViewInput>;
  currentUserPost?: InputMaybe<UserMostValuablePostsCurrentUserPostInput>;
  default?: InputMaybe<EmptyViewInput>;
};

export type UserMostValuablePostsCurrentUserPostInput = {
  postId?: InputMaybe<Scalars['String']['input']>;
};

export type UserOutput = {
  __typename?: 'UserOutput';
  data: Maybe<User>;
};

export type UserRateLimit = {
  __typename?: 'UserRateLimit';
  _id: Scalars['String']['output'];
  actionsPerInterval: Scalars['Float']['output'];
  createdAt: Scalars['Date']['output'];
  endedAt: Scalars['Date']['output'];
  intervalLength: Scalars['Float']['output'];
  intervalUnit: UserRateLimitIntervalUnit;
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  type: UserRateLimitType;
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type UserRateLimitIntervalUnit =
  | 'days'
  | 'hours'
  | 'minutes'
  | 'weeks';

export type UserRateLimitOutput = {
  __typename?: 'UserRateLimitOutput';
  data: Maybe<UserRateLimit>;
};

export type UserRateLimitSelector = {
  activeUserRateLimits?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  userRateLimits?: InputMaybe<UserRateLimitsUserRateLimitsInput>;
};

export type UserRateLimitType =
  | 'allComments'
  | 'allPosts';

export type UserRateLimitsUserRateLimitsInput = {
  active?: InputMaybe<Scalars['Boolean']['input']>;
  userIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type UserReadHistoryResult = {
  __typename?: 'UserReadHistoryResult';
  posts: Maybe<Array<Post>>;
};

export type UserSelector = {
  LWSunshinesList?: InputMaybe<EmptyViewInput>;
  LWTrustLevel1List?: InputMaybe<EmptyViewInput>;
  LWUsersAdmin?: InputMaybe<EmptyViewInput>;
  alignmentSuggestedUsers?: InputMaybe<EmptyViewInput>;
  allUsers?: InputMaybe<EmptyViewInput>;
  default?: InputMaybe<EmptyViewInput>;
  recentlyActive?: InputMaybe<EmptyViewInput>;
  reviewAdminUsers?: InputMaybe<EmptyViewInput>;
  sunshineNewUsers?: InputMaybe<EmptyViewInput>;
  tagCommunityMembers?: InputMaybe<UsersTagCommunityMembersInput>;
  usersByUserIds?: InputMaybe<UsersUsersByUserIdsInput>;
  usersMapLocations?: InputMaybe<EmptyViewInput>;
  usersProfile?: InputMaybe<UsersUsersProfileInput>;
  usersTopKarma?: InputMaybe<EmptyViewInput>;
  usersWithBannedUsers?: InputMaybe<EmptyViewInput>;
  usersWithOptedInToDialogueFacilitation?: InputMaybe<EmptyViewInput>;
  usersWithPaymentInfo?: InputMaybe<EmptyViewInput>;
};

export type UserSelectorUniqueInput = {
  _id?: InputMaybe<Scalars['String']['input']>;
  documentId?: InputMaybe<Scalars['String']['input']>;
  slug?: InputMaybe<Scalars['String']['input']>;
};

export type UserTagRel = {
  __typename?: 'UserTagRel';
  _id: Scalars['String']['output'];
  createdAt: Scalars['Date']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  schemaVersion: Scalars['Float']['output'];
  subforumEmailNotifications: Maybe<Scalars['Boolean']['output']>;
  subforumHideIntroPost: Maybe<Scalars['Boolean']['output']>;
  subforumShowUnreadInSidebar: Maybe<Scalars['Boolean']['output']>;
  tag: Maybe<Tag>;
  tagId: Scalars['String']['output'];
  user: Maybe<User>;
  userId: Scalars['String']['output'];
};

export type UserTagRelOutput = {
  __typename?: 'UserTagRelOutput';
  data: Maybe<UserTagRel>;
};

export type UserTagRelSelector = {
  default?: InputMaybe<EmptyViewInput>;
  single?: InputMaybe<UserTagRelsSingleInput>;
};

export type UserTagRelsSingleInput = {
  tagId?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type UsersTagCommunityMembersInput = {
  hasBio?: InputMaybe<Scalars['Boolean']['input']>;
  profileTagId?: InputMaybe<Scalars['String']['input']>;
};

export type UsersUsersByUserIdsInput = {
  userIds?: InputMaybe<Array<Scalars['String']['input']>>;
};

export type UsersUsersProfileInput = {
  slug?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
};

export type VertexRecommendedPost = {
  __typename?: 'VertexRecommendedPost';
  attributionId: Maybe<Scalars['String']['output']>;
  post: Post;
};

export type Vote = {
  __typename?: 'Vote';
  _id: Scalars['String']['output'];
  afPower: Maybe<Scalars['Float']['output']>;
  authorId: Maybe<Scalars['String']['output']>;
  authorIds: Maybe<Array<Scalars['String']['output']>>;
  cancelled: Scalars['Boolean']['output'];
  collectionName: Scalars['String']['output'];
  comment: Maybe<Comment>;
  createdAt: Scalars['Date']['output'];
  documentId: Scalars['String']['output'];
  documentIsAf: Scalars['Boolean']['output'];
  extendedVoteType: Maybe<Scalars['JSON']['output']>;
  isUnvote: Scalars['Boolean']['output'];
  legacyData: Maybe<Scalars['JSON']['output']>;
  post: Maybe<Post>;
  power: Maybe<Scalars['Float']['output']>;
  schemaVersion: Scalars['Float']['output'];
  silenceNotification: Scalars['Boolean']['output'];
  tagRel: Maybe<TagRel>;
  userId: Maybe<Scalars['String']['output']>;
  voteType: VoteType;
  votedAt: Maybe<Scalars['Date']['output']>;
};

export type VoteResultComment = {
  __typename?: 'VoteResultComment';
  document: Comment;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultElectionCandidate = {
  __typename?: 'VoteResultElectionCandidate';
  document: ElectionCandidate;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultMessage = {
  __typename?: 'VoteResultMessage';
  document: Message;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultMultiDocument = {
  __typename?: 'VoteResultMultiDocument';
  document: MultiDocument;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultPost = {
  __typename?: 'VoteResultPost';
  document: Post;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultRevision = {
  __typename?: 'VoteResultRevision';
  document: Revision;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultTag = {
  __typename?: 'VoteResultTag';
  document: Tag;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteResultTagRel = {
  __typename?: 'VoteResultTagRel';
  document: TagRel;
  showVotingPatternWarning: Scalars['Boolean']['output'];
};

export type VoteSelector = {
  default?: InputMaybe<EmptyViewInput>;
  tagVotes?: InputMaybe<EmptyViewInput>;
  userPostVotes?: InputMaybe<VotesUserPostVotesInput>;
  userVotes?: InputMaybe<VotesUserVotesInput>;
};

export type VoteType =
  | 'bigDownvote'
  | 'bigUpvote'
  | 'neutral'
  | 'smallDownvote'
  | 'smallUpvote';

export type VotesUserPostVotesInput = {
  after?: InputMaybe<Scalars['String']['input']>;
  before?: InputMaybe<Scalars['String']['input']>;
  collectionName?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<VoteType>;
};

export type VotesUserVotesInput = {
  collectionNames: Array<Scalars['String']['input']>;
};

export type WrappedDataByYear = {
  __typename?: 'WrappedDataByYear';
  authorPercentile: Maybe<Scalars['Float']['output']>;
  combinedKarmaVals: Maybe<Array<Maybe<CombinedKarmaVals>>>;
  commentCount: Maybe<Scalars['Int']['output']>;
  commenterPercentile: Maybe<Scalars['Float']['output']>;
  daysVisited: Maybe<Array<Maybe<Scalars['String']['output']>>>;
  engagementPercentile: Maybe<Scalars['Float']['output']>;
  karmaChange: Maybe<Scalars['Int']['output']>;
  mostReadAuthors: Maybe<Array<Maybe<MostReadAuthor>>>;
  mostReadTopics: Maybe<Array<Maybe<MostReadTopic>>>;
  mostReceivedReacts: Maybe<Array<Maybe<MostReceivedReact>>>;
  personality: Scalars['String']['output'];
  postCount: Maybe<Scalars['Int']['output']>;
  postsReadCount: Maybe<Scalars['Int']['output']>;
  relativeMostReadCoreTopics: Maybe<Array<Maybe<TagReadLikelihoodRatio>>>;
  shortformCount: Maybe<Scalars['Int']['output']>;
  shortformPercentile: Maybe<Scalars['Float']['output']>;
  topComment: Maybe<TopComment>;
  topPosts: Maybe<Array<Maybe<Post>>>;
  topShortform: Maybe<Comment>;
  totalSeconds: Maybe<Scalars['Int']['output']>;
};

export type LocalgroupMetadataQueryVariables = Exact<{
  groupId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LocalgroupMetadataQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: { __typename?: 'Localgroup', _id: string, name: string, bannerImageId: string | null, contents: { __typename?: 'Revision', plaintextDescription: string } | null } | null } | null };

export type multiModeratorCommentsQueryQueryVariables = Exact<{
  commentIds: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type multiModeratorCommentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & ShortformComments
    )> } | null };

export type SequenceMetadataQueryVariables = Exact<{
  sequenceId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SequenceMetadataQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: { __typename?: 'Sequence', _id: string, title: string } | null } | null };

export type updateUserLayoutMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserLayoutMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type AdminMetadataQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type AdminMetadataQueryQuery = { __typename?: 'Query', AdminMetadata: string | null };

export type SearchSynonymsQueryVariables = Exact<{ [key: string]: never; }>;


export type SearchSynonymsQuery = { __typename?: 'Query', SearchSynonyms: Array<string> };

export type UpdateSearchSynonymsMutationVariables = Exact<{
  synonyms: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type UpdateSearchSynonymsMutation = { __typename?: 'Mutation', UpdateSearchSynonyms: Array<string> };

export type updateCurationNoticeCurationNoticesFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCurationNoticeDataInput;
}>;


export type updateCurationNoticeCurationNoticesFormMutation = { __typename?: 'Mutation', updateCurationNotice: { __typename?: 'CurationNoticeOutput', data: (
      { __typename?: 'CurationNotice' }
      & CurationNoticesFragment
    ) | null } | null };

export type createCurationNoticeCurationNoticesFormMutationVariables = Exact<{
  data: CreateCurationNoticeDataInput;
}>;


export type createCurationNoticeCurationNoticesFormMutation = { __typename?: 'Mutation', createCurationNotice: { __typename?: 'CurationNoticeOutput', data: (
      { __typename?: 'CurationNotice' }
      & CurationNoticesFragment
    ) | null } | null };

export type updatePostCurationNoticesItem1MutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostCurationNoticesItem1Mutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updateCurationNoticeCurationNoticesItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCurationNoticeDataInput;
}>;


export type updateCurationNoticeCurationNoticesItemMutation = { __typename?: 'Mutation', updateCurationNotice: { __typename?: 'CurationNoticeOutput', data: (
      { __typename?: 'CurationNotice' }
      & CurationNoticesFragment
    ) | null } | null };

export type createCommentCurationNoticesItemMutationVariables = Exact<{
  data: CreateCommentDataInput;
}>;


export type createCommentCurationNoticesItemMutation = { __typename?: 'Mutation', createComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type multiCurationNoticeCurationPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<CurationNoticeSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCurationNoticeCurationPageQueryQuery = { __typename?: 'Query', curationNotices: { __typename?: 'MultiCurationNoticeOutput', totalCount: number | null, results: Array<(
      { __typename?: 'CurationNotice' }
      & CurationNoticesFragment
    )> } | null };

export type randomUserQueryVariables = Exact<{
  userIsAuthor: Scalars['String']['input'];
}>;


export type randomUserQuery = { __typename?: 'Query', GetRandomUser: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type CrossedKarmaThresholdQueryVariables = Exact<{
  limit: Scalars['Int']['input'];
}>;


export type CrossedKarmaThresholdQuery = { __typename?: 'Query', CrossedKarmaThreshold: { __typename?: 'CrossedKarmaThresholdResult', results: Array<(
      { __typename?: 'Post' }
      & PostsTwitterAdmin
    )> } | null };

export type MigrationsDashboardQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type MigrationsDashboardQueryQuery = { __typename?: 'Query', MigrationsDashboard: { __typename?: 'MigrationsDashboardData', migrations: Array<{ __typename?: 'MigrationStatus', name: string, dateWritten: string | null, lastRun: string | null, runs: Array<{ __typename?: 'MigrationRun', name: string, started: string, finished: string | null, succeeded: boolean | null }> | null }> | null } | null };

export type multiCommentAFUnreviewedCommentCountQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentAFUnreviewedCommentCountQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & SuggestAlignmentComment
    )> } | null };

export type alignmentPostMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type alignmentPostMutation = { __typename?: 'Mutation', alignmentPost: (
    { __typename?: 'Post' }
    & PostsList
  ) | null };

export type multiUserAuthorAnalyticsPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserAuthorAnalyticsPageQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type PostsAnalyticsPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsAnalyticsPageQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type multiBookmarkBookmarksFeedQueryQueryVariables = Exact<{
  selector?: InputMaybe<BookmarkSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiBookmarkBookmarksFeedQueryQuery = { __typename?: 'Query', bookmarks: { __typename?: 'MultiBookmarkOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Bookmark' }
      & BookmarksFeedItemFragment
    )> } | null };

export type multiBookmarkBookmarksListQueryQueryVariables = Exact<{
  selector?: InputMaybe<BookmarkSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiBookmarkBookmarksListQueryQuery = { __typename?: 'Query', bookmarks: { __typename?: 'MultiBookmarkOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Bookmark' }
      & BookmarksWithDocumentFragment
    )> } | null };

export type getReadHistoryQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<PostReviewFilter>;
  sort?: InputMaybe<PostReviewSort>;
}>;


export type getReadHistoryQuery = { __typename?: 'Query', UserReadHistory: { __typename?: 'UserReadHistoryResult', posts: Array<(
      { __typename?: 'Post', lastVisitedAt: string | null }
      & PostsListWithVotes
    )> | null } | null };

export type multiVoteVoteHistoryTabQueryQueryVariables = Exact<{
  selector?: InputMaybe<VoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiVoteVoteHistoryTabQueryQuery = { __typename?: 'Query', votes: { __typename?: 'MultiVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Vote' }
      & UserVotesWithDocument
    )> } | null };

export type updateUserBook2020FrontpageWidgetMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserBook2020FrontpageWidgetMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type updateUserBookFrontpageWidgetMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserBookFrontpageWidgetMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type CommentEmbeddingsSearchQueryQueryVariables = Exact<{
  query: Scalars['String']['input'];
  scoreBias?: InputMaybe<Scalars['Float']['input']>;
}>;


export type CommentEmbeddingsSearchQueryQuery = { __typename?: 'Query', CommentEmbeddingSearch: Array<(
    { __typename?: 'Comment' }
    & CommentsListWithParentMetadata
  )> };

export type CommentEmbeddingsSimilaritySearchQueryQueryVariables = Exact<{
  commentId: Scalars['String']['input'];
  scoreBias?: InputMaybe<Scalars['Float']['input']>;
}>;


export type CommentEmbeddingsSimilaritySearchQueryQuery = { __typename?: 'Query', CommentEmbeddingSimilaritySearch: Array<(
    { __typename?: 'Comment' }
    & CommentsListWithParentMetadata
  )> };

export type CommentByIdQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentByIdQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentCommentFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentCommentFormMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type createCommentCommentFormMutationVariables = Exact<{
  data: CreateCommentDataInput;
}>;


export type createCommentCommentFormMutation = { __typename?: 'Mutation', createComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type CommentPermalinkQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentPermalinkQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    ) | null } | null };

export type LinkedDraftCommentQueryQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type LinkedDraftCommentQueryQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & DraftComments
    ) | null } | null };

export type CommentEditQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentEditQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentEdit
    ) | null } | null };

export type CommentDeletedMetadataQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentDeletedMetadataQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & DeletedCommentsMetaData
    ) | null } | null };

export type CommentPollVoteQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentPollVoteQuery = { __typename?: 'Query', forumEvent: { __typename?: 'SingleForumEventOutput', result: (
      { __typename?: 'ForumEvent' }
      & ForumEventsDisplay
    ) | null } | null };

export type CommentsNewFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentsNewFormQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersCurrentCommentRateLimit
    ) | null } | null };

export type multiLWEventLastVisitListQueryQueryVariables = Exact<{
  selector?: InputMaybe<LWEventSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLWEventLastVisitListQueryQuery = { __typename?: 'Query', lWEvents: { __typename?: 'MultiLWEventOutput', totalCount: number | null, results: Array<(
      { __typename?: 'LWEvent' }
      & lastEventFragment
    )> } | null };

export type PostsModerationGuidelinesQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsModerationGuidelinesQuery = { __typename?: 'Query', PostsModerationGuidelines: { __typename: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsModerationGuidelines
    ) | null } | null };

export type TagModerationGuidelinesQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagModerationGuidelinesQuery = { __typename?: 'Query', TagModerationGuidelines: { __typename: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagFragment
    ) | null } | null };

export type updatePostModerationGuidelinesEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostModerationGuidelinesEditFormMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type updateTagModerationGuidelinesEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagDataInput;
}>;


export type updateTagModerationGuidelinesEditFormMutation = { __typename?: 'Mutation', updateTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    ) | null } | null };

export type PostsEditQueryQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsEditQueryQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsEditQueryFragment
    ) | null } | null };

export type TagEditQueryQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type TagEditQueryQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type multiCommentModeratorCommentsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentModeratorCommentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type NewUserGuidelinesDialogQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NewUserGuidelinesDialogQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type ParentCommentSingleQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ParentCommentSingleQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type PopularCommentsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type PopularCommentsQuery = { __typename?: 'Query', PopularComments: { __typename?: 'PopularCommentsResult', results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type SideCommentSingleQueryVariables = Exact<{
  commentId: Scalars['String']['input'];
}>;


export type SideCommentSingleQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    ) | null } | null };

export type multiCommentUserCommentsRepliesQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentUserCommentsRepliesQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiUserUserCommentsRepliesQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserUserCommentsRepliesQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type DraftCommentsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type DraftCommentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & DraftComments
    )> } | null };

export type multiCommentRecentCommentsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentRecentCommentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiCommentuseCommentQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentuseCommentQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiCommentCommentsListCondensedQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentCommentsListCondensedQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & ShortformComments
    )> } | null };

export type HeaderEventSubtitleSpotlightQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type HeaderEventSubtitleSpotlightQueryQuery = { __typename?: 'Query', currentSpotlight: (
    { __typename?: 'Spotlight' }
    & SpotlightHeaderEventSubtitle
  ) | null };

export type multiTagHomeTagBarQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagHomeTagBarQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagFragment
    )> } | null };

export type multiFeaturedResourceFeaturedResourceBannerQueryQueryVariables = Exact<{
  selector?: InputMaybe<FeaturedResourceSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiFeaturedResourceFeaturedResourceBannerQueryQuery = { __typename?: 'Query', featuredResources: { __typename?: 'MultiFeaturedResourceOutput', totalCount: number | null, results: Array<(
      { __typename?: 'FeaturedResource' }
      & FeaturedResourcesFragment
    )> } | null };

export type multiTagSubforumsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagSubforumsListQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagSubforumSidebarFragment
    )> } | null };

export type PostExcerptQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostExcerptQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & HighlightWithHash
    ) | null } | null };

export type AllTagsActivityFeedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
}>;


export type AllTagsActivityFeedQuery = { __typename?: 'Query', AllTagsActivityFeed: { __typename: 'AllTagsActivityFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'AllTagsActivityFeedEntry', type: AllTagsActivityFeedEntryType, tagCreated: (
        { __typename?: 'Tag' }
        & TagCreationHistoryFragment
      ) | null, tagRevision: (
        { __typename?: 'Revision' }
        & RevisionTagFragment
      ) | null, tagDiscussionComment: (
        { __typename?: 'Comment' }
        & CommentsListWithParentMetadata
      ) | null }> | null } };

export type TagHistoryFeedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  tagId: Scalars['String']['input'];
  options?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type TagHistoryFeedQuery = { __typename?: 'Query', TagHistoryFeed: { __typename: 'TagHistoryFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'TagHistoryFeedEntry', type: TagHistoryFeedEntryType, tagCreated: (
        { __typename?: 'Tag' }
        & TagHistoryFragment
      ) | null, tagRevision: (
        { __typename?: 'Revision' }
        & RevisionHistoryEntry
      ) | null, lensRevision: (
        { __typename?: 'Revision' }
        & RevisionHistoryEntry
      ) | null, summaryRevision: (
        { __typename?: 'Revision' }
        & RevisionHistorySummaryEdit
      ) | null, tagApplied: (
        { __typename?: 'TagRel' }
        & TagRelHistoryFragment
      ) | null, tagDiscussionComment: (
        { __typename?: 'Comment' }
        & CommentsList
      ) | null, wikiMetadataChanged: (
        { __typename?: 'FieldChange' }
        & FieldChangeFragment
      ) | null, lensOrSummaryMetadataChanged: (
        { __typename?: 'FieldChange' }
        & FieldChangeFragment
      ) | null }> | null } };

export type RecentDiscussionFeedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
  tagCommentsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type RecentDiscussionFeedQuery = { __typename?: 'Query', RecentDiscussionFeed: { __typename: 'RecentDiscussionFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'RecentDiscussionFeedEntry', type: RecentDiscussionFeedEntryType, postCommented: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, shortformCommented: (
        { __typename?: 'Post' }
        & ShortformRecentDiscussion
      ) | null, tagDiscussed: (
        { __typename?: 'Tag' }
        & TagRecentDiscussion
      ) | null, tagRevised: (
        { __typename?: 'Revision' }
        & RecentDiscussionRevisionTagFragment
      ) | null }> | null } };

export type SubscribedFeedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type SubscribedFeedQuery = { __typename?: 'Query', SubscribedFeed: { __typename: 'SubscribedFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubscribedFeedEntry', type: SubscribedFeedEntryType, postCommented: (
        { __typename?: 'SubscribedPostAndComments' }
        & SubscribedPostAndCommentsFeed
      ) | null }> | null } };

export type SubforumMagicFeedQueryVariables = Exact<{
  tagId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Float']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SubforumMagicFeedQuery = { __typename?: 'Query', SubforumMagicFeed: { __typename: 'SubforumMagicFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubforumMagicFeedEntry', type: SubforumMagicFeedEntryType, tagSubforumPosts: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, tagSubforumComments: (
        { __typename?: 'Comment' }
        & CommentWithRepliesFragment
      ) | null, tagSubforumStickyComments: (
        { __typename?: 'Comment' }
        & StickySubforumCommentFragment
      ) | null }> | null } };

export type SubforumNewFeedQueryVariables = Exact<{
  tagId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SubforumNewFeedQuery = { __typename?: 'Query', SubforumNewFeed: { __typename: 'SubforumNewFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubforumNewFeedEntry', type: SubforumNewFeedEntryType, tagSubforumPosts: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, tagSubforumComments: (
        { __typename?: 'Comment' }
        & CommentWithRepliesFragment
      ) | null, tagSubforumStickyComments: (
        { __typename?: 'Comment' }
        & StickySubforumCommentFragment
      ) | null }> | null } };

export type SubforumOldFeedQueryVariables = Exact<{
  tagId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SubforumOldFeedQuery = { __typename?: 'Query', SubforumOldFeed: { __typename: 'SubforumOldFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubforumOldFeedEntry', type: SubforumOldFeedEntryType, tagSubforumPosts: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, tagSubforumComments: (
        { __typename?: 'Comment' }
        & CommentWithRepliesFragment
      ) | null, tagSubforumStickyComments: (
        { __typename?: 'Comment' }
        & StickySubforumCommentFragment
      ) | null }> | null } };

export type SubforumRecentCommentsFeedQueryVariables = Exact<{
  tagId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SubforumRecentCommentsFeedQuery = { __typename?: 'Query', SubforumRecentCommentsFeed: { __typename: 'SubforumRecentCommentsFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubforumRecentCommentsFeedEntry', type: SubforumRecentCommentsFeedEntryType, tagSubforumPosts: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, tagSubforumComments: (
        { __typename?: 'Comment' }
        & CommentWithRepliesFragment
      ) | null, tagSubforumStickyComments: (
        { __typename?: 'Comment' }
        & StickySubforumCommentFragment
      ) | null }> | null } };

export type SubforumTopFeedQueryVariables = Exact<{
  tagId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Int']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SubforumTopFeedQuery = { __typename?: 'Query', SubforumTopFeed: { __typename: 'SubforumTopFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'SubforumTopFeedEntry', type: SubforumTopFeedEntryType, tagSubforumPosts: (
        { __typename?: 'Post' }
        & PostsRecentDiscussion
      ) | null, tagSubforumComments: (
        { __typename?: 'Comment' }
        & CommentWithRepliesFragment
      ) | null, tagSubforumStickyComments: (
        { __typename?: 'Comment' }
        & StickySubforumCommentFragment
      ) | null }> | null } };

export type UltraFeedQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  sessionId?: InputMaybe<Scalars['String']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type UltraFeedQuery = { __typename?: 'Query', UltraFeed: { __typename: 'UltraFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'UltraFeedEntry', type: UltraFeedEntryType, feedCommentThread: (
        { __typename?: 'FeedCommentThread' }
        & FeedCommentThreadFragment
      ) | null, feedPost: (
        { __typename?: 'FeedPost' }
        & FeedPostFragment
      ) | null, feedSpotlight: (
        { __typename?: 'FeedSpotlightItem' }
        & FeedSpotlightFragment
      ) | null, feedSubscriptionSuggestions: (
        { __typename?: 'FeedSubscriptionSuggestions' }
        & FeedSubscriptionSuggestionsFragment
      ) | null }> | null } };

export type UltraFeedSubscriptionsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  cutoff?: InputMaybe<Scalars['Date']['input']>;
  offset?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type UltraFeedSubscriptionsQuery = { __typename?: 'Query', UltraFeedSubscriptions: { __typename: 'UltraFeedQueryResults', cutoff: string | null, endOffset: number, results: Array<{ __typename?: 'UltraFeedEntry', type: UltraFeedEntryType, feedCommentThread: (
        { __typename?: 'FeedCommentThread' }
        & FeedCommentThreadFragment
      ) | null, feedPost: (
        { __typename?: 'FeedPost' }
        & FeedPostFragment
      ) | null, feedSubscriptionSuggestions: (
        { __typename?: 'FeedSubscriptionSuggestions' }
        & FeedSubscriptionSuggestionsFragment
      ) | null }> | null } };

export type updateUserCommunityMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserCommunityMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersProfile
    ) | null } | null };

export type multiLocalgroupLocalGroupsQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupLocalGroupsQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    )> } | null };

export type multiLocalgroupOnlineGroupsQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupOnlineGroupsQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    )> } | null };

export type ElicitBlockDataQueryVariables = Exact<{
  questionId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ElicitBlockDataQuery = { __typename?: 'Query', ElicitBlockData: { __typename?: 'ElicitBlockData', _id: string | null, title: string | null, notes: string | null, resolvesBy: string | null, resolution: boolean | null, predictions: Array<{ __typename?: 'ElicitPrediction', _id: string | null, predictionId: string | null, prediction: number | null, createdAt: string | null, notes: string | null, sourceUrl: string | null, sourceId: string | null, binaryQuestionId: string | null, creator: { __typename?: 'ElicitUser', _id: string | null, displayName: string | null, sourceUserId: string | null, lwUser: (
          { __typename?: 'User' }
          & UsersMinimumInfo
        ) | null } | null }> | null } | null };

export type ElicitPredictionMutationVariables = Exact<{
  questionId?: InputMaybe<Scalars['String']['input']>;
  prediction?: InputMaybe<Scalars['Int']['input']>;
}>;


export type ElicitPredictionMutation = { __typename?: 'Mutation', MakeElicitPrediction: { __typename?: 'ElicitBlockData', _id: string | null, title: string | null, notes: string | null, resolvesBy: string | null, resolution: boolean | null, predictions: Array<{ __typename?: 'ElicitPrediction', _id: string | null, predictionId: string | null, prediction: number | null, createdAt: string | null, notes: string | null, sourceUrl: string | null, sourceId: string | null, binaryQuestionId: string | null, creator: { __typename?: 'ElicitUser', _id: string | null, displayName: string | null, sourceUserId: string | null, lwUser: (
          { __typename?: 'User' }
          & UsersMinimumInfo
        ) | null } | null }> | null } | null };

export type RecentlyActiveDialoguesQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type RecentlyActiveDialoguesQuery = { __typename?: 'Query', RecentlyActiveDialogues: { __typename?: 'RecentlyActiveDialoguesResult', results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type MyDialoguesQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type MyDialoguesQuery = { __typename?: 'Query', MyDialogues: { __typename?: 'MyDialoguesResult', results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type DialoguesPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type DialoguesPageQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null } | null };

export type updatePostBanUserFromPostDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostBanUserFromPostDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type CommentActionsQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentActionsQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsDetails
    ) | null } | null };

export type lockThreadMutationVariables = Exact<{
  commentId: Scalars['String']['input'];
  until?: InputMaybe<Scalars['String']['input']>;
}>;


export type lockThreadMutation = { __typename?: 'Mutation', lockThread: boolean };

export type unlockThreadMutationVariables = Exact<{
  commentId: Scalars['String']['input'];
}>;


export type unlockThreadMutation = { __typename?: 'Mutation', unlockThread: boolean };

export type updateCommentMoveToAlignmentCommentDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentMoveToAlignmentCommentDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentMoveToAnswersDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentMoveToAnswersDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentPinToProfileDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentPinToProfileDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentRetractCommentDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentRetractCommentDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentShortformFrontpageDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentShortformFrontpageDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type updateCommentSuggestAlignmentCommentDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentSuggestAlignmentCommentDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & SuggestAlignmentComment
    ) | null } | null };

export type updateCommentToggleIsModeratorCommentDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentToggleIsModeratorCommentDropdownItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type moderateCommentMutationVariables = Exact<{
  commentId?: InputMaybe<Scalars['String']['input']>;
  deleted?: InputMaybe<Scalars['Boolean']['input']>;
  deletedReason?: InputMaybe<Scalars['String']['input']>;
  deletedPublic?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type moderateCommentMutation = { __typename?: 'Mutation', moderateComment: (
    { __typename?: 'Comment' }
    & CommentsList
  ) | null };

export type updateUserApproveNewUserDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserApproveNewUserDropdownItemMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type updatePostDeleteDraftDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostDeleteDraftDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updatePostExcludeFromRecommendationsDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostExcludeFromRecommendationsDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type markAsReadOrUnreadMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
  isRead?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type markAsReadOrUnreadMutation = { __typename?: 'Mutation', markAsReadOrUnread: boolean | null };

export type updatePostMoveToDraftDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostMoveToDraftDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updatePostMoveToFrontpageDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostMoveToFrontpageDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updatePostResyncRssDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostResyncRssDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEdit
    ) | null } | null };

export type getRssPostChangesQueryVariables = Exact<{
  postId: Scalars['String']['input'];
}>;


export type getRssPostChangesQuery = { __typename?: 'Query', RssPostChanges: { __typename?: 'RssPostChangeInfo', isChanged: boolean, newHtml: string, htmlDiff: string } };

export type updateUserShortformDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserShortformDropdownItemMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type updatePostSuggestAlignmentPostDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostSuggestAlignmentPostDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updatePostSuggestCuratedDropdownItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostSuggestCuratedDropdownItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type setIsHiddenMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  isHidden: Scalars['Boolean']['input'];
}>;


export type setIsHiddenMutation = { __typename?: 'Mutation', setIsHidden: (
    { __typename?: 'User' }
    & UsersCurrent
  ) };

export type multiPostsListWithVotesQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostsListWithVotesQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiCollectionEABestOfPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<CollectionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCollectionEABestOfPageQueryQuery = { __typename?: 'Query', collections: { __typename?: 'MultiCollectionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Collection' }
      & CollectionsBestOfFragment
    )> } | null };

export type multiSequenceEABestOfPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<SequenceSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSequenceEABestOfPageQueryQuery = { __typename?: 'Query', sequences: { __typename?: 'MultiSequenceOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    )> } | null };

export type multiPostsBestOfListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostsBestOfListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsBestOfList
    )> } | null };

export type multiDigestEADigestPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<DigestSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiDigestEADigestPageQueryQuery = { __typename?: 'Query', digests: { __typename?: 'MultiDigestOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    )> } | null };

export type getDigestPostsQueryVariables = Exact<{
  num?: InputMaybe<Scalars['Int']['input']>;
}>;


export type getDigestPostsQuery = { __typename?: 'Query', DigestPosts: Array<(
    { __typename?: 'Post' }
    & PostsListWithVotes
  )> | null };

export type EAHomeHandbookQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EAHomeHandbookQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    ) | null } | null };

export type multiPostEAHomeRightHandSideQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostEAHomeRightHandSideQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type multiPostInstagramLandingPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostInstagramLandingPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiChapterInstagramLandingPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<ChapterSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiChapterInstagramLandingPageQueryQuery = { __typename?: 'Query', chapters: { __typename?: 'MultiChapterOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Chapter' }
      & ChaptersFragment
    )> } | null };

export type multiUserEAGDetailTargetedJobAdSectionQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserEAGDetailSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserEAGDetailTargetedJobAdSectionQueryQuery = { __typename?: 'Query', userEAGDetails: { __typename?: 'MultiUserEAGDetailOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserEAGDetail' }
      & UserEAGDetailsMinimumInfo
    )> } | null };

export type multiUserJobAdTargetedJobAdSectionQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserJobAdSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserJobAdTargetedJobAdSectionQueryQuery = { __typename?: 'Query', userJobAds: { __typename?: 'MultiUserJobAdOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserJobAd' }
      & UserJobAdsMinimumInfo
    )> } | null };

export type updateUserJobAdTargetedJobAdSectionMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserJobAdDataInput;
}>;


export type updateUserJobAdTargetedJobAdSectionMutation = { __typename?: 'Mutation', updateUserJobAd: { __typename?: 'UserJobAdOutput', data: (
      { __typename?: 'UserJobAd' }
      & UserJobAdsMinimumInfo
    ) | null } | null };

export type createUserJobAdTargetedJobAdSectionMutationVariables = Exact<{
  data: CreateUserJobAdDataInput;
}>;


export type createUserJobAdTargetedJobAdSectionMutation = { __typename?: 'Mutation', createUserJobAd: { __typename?: 'UserJobAdOutput', data: (
      { __typename?: 'UserJobAd' }
      & UserJobAdsMinimumInfo
    ) | null } | null };

export type getUserReadsPerCoreTagQueryVariables = Exact<{
  userId: Scalars['String']['input'];
}>;


export type getUserReadsPerCoreTagQuery = { __typename?: 'Query', UserReadsPerCoreTag: Array<{ __typename?: 'UserCoreTagReads', tagId: string, userReadCount: number }> };

export type updateDigestConfirmPublishDialogMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateDigestDataInput;
}>;


export type updateDigestConfirmPublishDialogMutation = { __typename?: 'Mutation', updateDigest: { __typename?: 'DigestOutput', data: (
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    ) | null } | null };

export type multiDigestDigestsQueryQueryVariables = Exact<{
  selector?: InputMaybe<DigestSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiDigestDigestsQueryQuery = { __typename?: 'Query', digests: { __typename?: 'MultiDigestOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    )> } | null };

export type multiDigestEditDigestQueryQueryVariables = Exact<{
  selector?: InputMaybe<DigestSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiDigestEditDigestQueryQuery = { __typename?: 'Query', digests: { __typename?: 'MultiDigestOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    )> } | null };

export type updateDigestPostEditDigestMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateDigestPostDataInput;
}>;


export type updateDigestPostEditDigestMutation = { __typename?: 'Mutation', updateDigestPost: { __typename?: 'DigestPostOutput', data: (
      { __typename?: 'DigestPost' }
      & DigestPostsMinimumInfo
    ) | null } | null };

export type createDigestPostEditDigestMutationVariables = Exact<{
  data: CreateDigestPostDataInput;
}>;


export type createDigestPostEditDigestMutation = { __typename?: 'Mutation', createDigestPost: { __typename?: 'DigestPostOutput', data: (
      { __typename?: 'DigestPost' }
      & DigestPostsMinimumInfo
    ) | null } | null };

export type getDigestPlannerDataQueryVariables = Exact<{
  digestId?: InputMaybe<Scalars['String']['input']>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
}>;


export type getDigestPlannerDataQuery = { __typename?: 'Query', DigestPlannerData: Array<{ __typename?: 'DigestPlannerPost', rating: number, post: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ), digestPost: { __typename?: 'DigestPost', _id: string, emailDigestStatus: string | null, onsiteDigestStatus: string | null } | null }> };

export type updateDigestEditDigestActionButtonsMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateDigestDataInput;
}>;


export type updateDigestEditDigestActionButtonsMutation = { __typename?: 'Mutation', updateDigest: { __typename?: 'DigestOutput', data: (
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    ) | null } | null };

export type updateDigestEditDigestHeaderMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateDigestDataInput;
}>;


export type updateDigestEditDigestHeaderMutation = { __typename?: 'Mutation', updateDigest: { __typename?: 'DigestOutput', data: (
      { __typename?: 'Digest' }
      & DigestsMinimumInfo
    ) | null } | null };

export type NewUserCompleteProfileMutationVariables = Exact<{
  username: Scalars['String']['input'];
  subscribeToDigest: Scalars['Boolean']['input'];
  email?: InputMaybe<Scalars['String']['input']>;
  acceptedTos?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type NewUserCompleteProfileMutation = { __typename?: 'Mutation', NewUserCompleteProfile: { __typename?: 'NewUserCompletedProfile', username: string | null, slug: string | null, displayName: string | null } | null };

export type isDisplayNameTakenQueryVariables = Exact<{
  displayName: Scalars['String']['input'];
}>;


export type isDisplayNameTakenQuery = { __typename?: 'Query', IsDisplayNameTaken: boolean };

export type multiUseruseSuggestedSubscriptionsQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUseruseSuggestedSubscriptionsQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UserOnboardingAuthor
    )> } | null };

export type multiTaguseSuggestedSubscriptionsQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTaguseSuggestedSubscriptionsQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & UserOnboardingTag
    )> } | null };

export type EAGApplicationImportFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EAGApplicationImportFormQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type multiPosthooksQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPosthooksQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiVotehooksQueryQueryVariables = Exact<{
  selector?: InputMaybe<VoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiVotehooksQueryQuery = { __typename?: 'Query', votes: { __typename?: 'MultiVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Vote' }
      & UserVotes
    )> } | null };

export type getWrappedDataQueryVariables = Exact<{
  userId: Scalars['String']['input'];
  year: Scalars['Int']['input'];
}>;


export type getWrappedDataQuery = { __typename?: 'Query', UserWrappedDataByYear: { __typename?: 'WrappedDataByYear', engagementPercentile: number | null, postsReadCount: number | null, totalSeconds: number | null, daysVisited: Array<string | null> | null, postCount: number | null, authorPercentile: number | null, commentCount: number | null, commenterPercentile: number | null, shortformCount: number | null, shortformPercentile: number | null, karmaChange: number | null, personality: string, mostReadTopics: Array<{ __typename?: 'MostReadTopic', name: string | null, shortName: string | null, slug: string | null, count: number | null } | null> | null, relativeMostReadCoreTopics: Array<{ __typename?: 'TagReadLikelihoodRatio', tagId: string | null, tagName: string | null, tagShortName: string | null, userReadCount: number | null, readLikelihoodRatio: number | null } | null> | null, mostReadAuthors: Array<{ __typename?: 'MostReadAuthor', _id: string | null, displayName: string | null, slug: string | null, profileImageId: string | null, count: number | null, engagementPercentile: number | null } | null> | null, topPosts: Array<{ __typename?: 'Post', _id: string, title: string, slug: string, baseScore: number } | null> | null, topComment: { __typename?: 'TopComment', _id: string | null, postedAt: string | null, postId: string | null, postTitle: string | null, postSlug: string | null, baseScore: number | null, extendedScore: any | null, contents: { __typename?: 'TopCommentContents', html: string | null } | null } | null, topShortform: { __typename?: 'Comment', _id: string, postedAt: string, postId: string | null, baseScore: number | null, extendedScore: any | null, contents: { __typename?: 'Revision', html: string | null } | null } | null, combinedKarmaVals: Array<{ __typename?: 'CombinedKarmaVals', date: string, postKarma: number, commentKarma: number } | null> | null, mostReceivedReacts: Array<{ __typename?: 'MostReceivedReact', name: string | null, count: number | null } | null> | null } | null };

export type multiPostCKPostEditorQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostCKPostEditorQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsMinimumInfo
    )> } | null };

export type sendNewDialogueMessageNotificationMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  dialogueHtml: Scalars['String']['input'];
}>;


export type sendNewDialogueMessageNotificationMutation = { __typename?: 'Mutation', sendNewDialogueMessageNotification: boolean };

export type updatePostEditTitleMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostEditTitleMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsMinimumInfo
    ) | null } | null };

export type getPostIsCriticismQueryVariables = Exact<{
  args?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type getPostIsCriticismQuery = { __typename?: 'Query', PostIsCriticism: boolean | null };

export type autosaveRevisionMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  contents: AutosaveContentType;
}>;


export type autosaveRevisionMutation = { __typename?: 'Mutation', autosaveRevision: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null };

export type LinkSharingQueryQueryVariables = Exact<{
  postId: Scalars['String']['input'];
  linkSharingKey: Scalars['String']['input'];
}>;


export type LinkSharingQueryQuery = { __typename?: 'Query', getLinkSharedPost: (
    { __typename?: 'Post' }
    & PostsEdit
  ) | null };

export type multiRevisionPostVersionHistoryQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionPostVersionHistoryQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionMetadataWithChangeMetrics
    )> } | null };

export type PostVersionHistoryQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostVersionHistoryQuery = { __typename?: 'Query', revision: { __typename?: 'SingleRevisionOutput', result: (
      { __typename?: 'Revision' }
      & RevisionDisplay
      & RevisionMetadata
    ) | null } | null };

export type revertPostToRevisionMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  revisionId: Scalars['String']['input'];
}>;


export type revertPostToRevisionMutation = { __typename?: 'Mutation', revertPostToRevision: (
    { __typename?: 'Post' }
    & PostsEdit
  ) | null };

export type PresenceListQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PresenceListQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type multiRevisionTagVersionHistoryQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionTagVersionHistoryQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionMetadataWithChangeMetrics
    )> } | null };

export type TagVersionHistoryQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagVersionHistoryQuery = { __typename?: 'Query', revision: { __typename?: 'SingleRevisionOutput', result: (
      { __typename?: 'Revision' }
      & RevisionDisplay
    ) | null } | null };

export type revertToRevisionMutationVariables = Exact<{
  tagId: Scalars['String']['input'];
  revertToRevisionId: Scalars['String']['input'];
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type revertToRevisionMutation = { __typename?: 'Mutation', revertTagToRevision: (
    { __typename?: 'Tag' }
    & TagPageFragment
  ) | null };

export type createElicitQuestionCreateClaimDialogMutationVariables = Exact<{
  data: CreateElicitQuestionDataInput;
}>;


export type createElicitQuestionCreateClaimDialogMutation = { __typename?: 'Mutation', createElicitQuestion: { __typename?: 'ElicitQuestionOutput', data: (
      { __typename?: 'ElicitQuestion' }
      & ElicitQuestionFragment
    ) | null } | null };

export type ConvertDocumentQueryVariables = Exact<{
  document?: InputMaybe<Scalars['JSON']['input']>;
  targetFormat?: InputMaybe<Scalars['String']['input']>;
}>;


export type ConvertDocumentQuery = { __typename?: 'Query', convertDocument: any | null };

export type multiPostEventsHomeQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostEventsHomeQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type updateUserEventsHomeMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserEventsHomeMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersProfile
    ) | null } | null };

export type FMCrosspostControlQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type FMCrosspostControlQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersCrosspostInfo
    ) | null } | null };

export type unlinkCrossposterMutationVariables = Exact<{ [key: string]: never; }>;


export type unlinkCrossposterMutation = { __typename?: 'Mutation', unlinkCrossposter: string | null };

export type ImageUploadQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ImageUploadQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type multiPodcastEpisodePodcastEpisodeInputQueryQueryVariables = Exact<{
  selector?: InputMaybe<PodcastEpisodeSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPodcastEpisodePodcastEpisodeInputQueryQuery = { __typename?: 'Query', podcastEpisodes: { __typename?: 'MultiPodcastEpisodeOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PodcastEpisode' }
      & PodcastEpisodeFull
    )> } | null };

export type multiPodcastPodcastEpisodeInputQueryQueryVariables = Exact<{
  selector?: InputMaybe<PodcastSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPodcastPodcastEpisodeInputQueryQuery = { __typename?: 'Query', podcasts: { __typename?: 'MultiPodcastOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Podcast' }
      & PodcastSelect
    )> } | null };

export type createPodcastEpisodePodcastEpisodeInputMutationVariables = Exact<{
  data: CreatePodcastEpisodeDataInput;
}>;


export type createPodcastEpisodePodcastEpisodeInputMutation = { __typename?: 'Mutation', createPodcastEpisode: { __typename?: 'PodcastEpisodeOutput', data: (
      { __typename?: 'PodcastEpisode' }
      & PodcastEpisodeCreateFragment
    ) | null } | null };

export type multiLocalgroupSelectLocalgroupQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupSelectLocalgroupQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsBase
    )> } | null };

export type SequencesListEditorItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SequencesListEditorItemQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    ) | null } | null };

export type SingleTagItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SingleTagItemQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagBasicInfo
    ) | null } | null };

export type SingleUsersItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SingleUsersItemQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersProfile
    ) | null } | null };

export type multiTagFlagTagFlagToggleListQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagFlagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagFlagTagFlagToggleListQueryQuery = { __typename?: 'Query', tagFlags: { __typename?: 'MultiTagFlagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'TagFlag' }
      & TagFlagFragment
    )> } | null };

export type TagSelectQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagSelectQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagBasicInfo
    ) | null } | null };

export type updateForumEventForumEventFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateForumEventDataInput;
}>;


export type updateForumEventForumEventFormMutation = { __typename?: 'Mutation', updateForumEvent: { __typename?: 'ForumEventOutput', data: (
      { __typename?: 'ForumEvent' }
      & ForumEventsEdit
    ) | null } | null };

export type createForumEventForumEventFormMutationVariables = Exact<{
  data: CreateForumEventDataInput;
}>;


export type createForumEventForumEventFormMutation = { __typename?: 'Mutation', createForumEvent: { __typename?: 'ForumEventOutput', data: (
      { __typename?: 'ForumEvent' }
      & ForumEventsEdit
    ) | null } | null };

export type ForumEventFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ForumEventFormQuery = { __typename?: 'Query', forumEvent: { __typename?: 'SingleForumEventOutput', result: (
      { __typename?: 'ForumEvent' }
      & ForumEventsEdit
    ) | null } | null };

export type multiCommentForumEventPollQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentForumEventPollQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & ShortformComments
    )> } | null };

export type multiUserForumEventPollQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserForumEventPollQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type ForumEventPollQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ForumEventPollQuery = { __typename?: 'Query', forumEvent: { __typename?: 'SingleForumEventOutput', result: (
      { __typename?: 'ForumEvent' }
      & ForumEventsDisplay
    ) | null } | null };

export type AddForumEventVoteMutationVariables = Exact<{
  forumEventId: Scalars['String']['input'];
  x: Scalars['Float']['input'];
  delta?: InputMaybe<Scalars['Float']['input']>;
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type AddForumEventVoteMutation = { __typename?: 'Mutation', AddForumEventVote: boolean | null };

export type RemoveForumEventVoteMutationVariables = Exact<{
  forumEventId: Scalars['String']['input'];
}>;


export type RemoveForumEventVoteMutation = { __typename?: 'Mutation', RemoveForumEventVote: boolean | null };

export type ForumEventPostPageBannerQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ForumEventPostPageBannerQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsDetails
    ) | null } | null };

export type ForumEventPostPagePollSection2QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ForumEventPostPagePollSection2Query = { __typename?: 'Query', forumEvent: { __typename?: 'SingleForumEventOutput', result: (
      { __typename?: 'ForumEvent' }
      & ForumEventsDisplay
    ) | null } | null };

export type ForumEventPostPagePollSectionQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ForumEventPostPagePollSectionQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsDetails
    ) | null } | null };

export type multiCommentForumEventStickersQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentForumEventStickersQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & ShortformComments
    )> } | null };

export type multiUserForumEventStickersQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserForumEventStickersQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type RemoveForumEventStickerMutationVariables = Exact<{
  forumEventId: Scalars['String']['input'];
  stickerId: Scalars['String']['input'];
}>;


export type RemoveForumEventStickerMutation = { __typename?: 'Mutation', RemoveForumEventSticker: boolean | null };

export type multiForumEventForumEventsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<ForumEventSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiForumEventForumEventsListQueryQuery = { __typename?: 'Query', forumEvents: { __typename?: 'MultiForumEventOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ForumEvent' }
      & ForumEventsMinimumInfo
    )> } | null };

export type MultiPostAnalyticsQueryQueryVariables = Exact<{
  userId?: InputMaybe<Scalars['String']['input']>;
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  sortBy?: InputMaybe<Scalars['String']['input']>;
  desc?: InputMaybe<Scalars['Boolean']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type MultiPostAnalyticsQueryQuery = { __typename?: 'Query', MultiPostAnalytics: { __typename?: 'MultiPostAnalyticsResult', totalCount: number, posts: Array<{ __typename?: 'PostAnalytics2Result', _id: string | null, title: string | null, slug: string | null, postedAt: string | null, views: number | null, uniqueViews: number | null, reads: number | null, meanReadingTime: number | null, karma: number | null, comments: number | null } | null> | null } };

export type AnalyticsSeriesQueryQueryVariables = Exact<{
  userId?: InputMaybe<Scalars['String']['input']>;
  postIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  startDate?: InputMaybe<Scalars['Date']['input']>;
  endDate?: InputMaybe<Scalars['Date']['input']>;
}>;


export type AnalyticsSeriesQueryQuery = { __typename?: 'Query', AnalyticsSeries: Array<{ __typename?: 'AnalyticsSeriesValue', date: string | null, views: number | null, reads: number | null, karma: number | null, comments: number | null } | null> | null };

export type multiBookmarkuseBookmarkQueryQueryVariables = Exact<{
  selector?: InputMaybe<BookmarkSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiBookmarkuseBookmarkQueryQuery = { __typename?: 'Query', bookmarks: { __typename?: 'MultiBookmarkOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Bookmark' }
      & BookmarksMinimumInfoFragment
    )> } | null };

export type ToggleBookmarkMutationMutationVariables = Exact<{
  input: ToggleBookmarkInput;
}>;


export type ToggleBookmarkMutationMutation = { __typename?: 'Mutation', toggleBookmark: { __typename?: 'ToggleBookmarkOutput', data: (
      { __typename?: 'Bookmark' }
      & BookmarksMinimumInfoFragment
    ) | null } | null };

export type multiForumEventuseCurrentForumEventQueryQueryVariables = Exact<{
  selector?: InputMaybe<ForumEventSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiForumEventuseCurrentForumEventQueryQuery = { __typename?: 'Query', forumEvents: { __typename?: 'MultiForumEventOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ForumEvent' }
      & ForumEventsDisplay
    )> } | null };

export type CurrentFrontpageSurveyQueryVariables = Exact<{ [key: string]: never; }>;


export type CurrentFrontpageSurveyQuery = { __typename?: 'Query', CurrentFrontpageSurvey: (
    { __typename?: 'SurveySchedule' }
    & SurveyScheduleMinimumInfo
  ) | null };

export type reviewVotesForPostAndUserQueryVariables = Exact<{
  postId: Scalars['String']['input'];
  userId: Scalars['String']['input'];
}>;


export type reviewVotesForPostAndUserQuery = { __typename?: 'Query', reviewVotes: { __typename?: 'MultiReviewVoteOutput', results: Array<{ __typename?: 'ReviewVote', _id: string, qualitativeScore: number, quadraticScore: number }> } | null };

export type UserExpandFrontpageSectionMutationVariables = Exact<{
  section: Scalars['String']['input'];
  expanded: Scalars['Boolean']['input'];
}>;


export type UserExpandFrontpageSectionMutation = { __typename?: 'Mutation', UserExpandFrontpageSection: boolean | null };

export type multiTagfilterSettingsQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagfilterSettingsQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagBasicInfo
    )> } | null };

export type initiateConversationMutationVariables = Exact<{
  participantIds: Array<Scalars['String']['input']> | Scalars['String']['input'];
  af?: InputMaybe<Scalars['Boolean']['input']>;
  moderator?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type initiateConversationMutation = { __typename?: 'Mutation', initiateConversation: (
    { __typename?: 'Conversation' }
    & ConversationsMinimumInfo
  ) | null };

export type markConversationReadMutationVariables = Exact<{
  conversationId: Scalars['String']['input'];
}>;


export type markConversationReadMutation = { __typename?: 'Mutation', markConversationRead: boolean };

export type multiSubscriptionuseNotifyMeQueryQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSubscriptionuseNotifyMeQueryQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Subscription' }
      & SubscriptionState
    )> } | null };

export type createSubscriptionuseNotifyMeMutationVariables = Exact<{
  data: CreateSubscriptionDataInput;
}>;


export type createSubscriptionuseNotifyMeMutation = { __typename?: 'Mutation', createSubscription: { __typename?: 'SubscriptionOutput', data: (
      { __typename?: 'Subscription' }
      & SubscriptionState
    ) | null } | null };

export type PostAnalyticsQueryQueryVariables = Exact<{
  postId: Scalars['String']['input'];
}>;


export type PostAnalyticsQueryQuery = { __typename?: 'Query', PostAnalytics: { __typename?: 'PostAnalyticsResult', allViews: number | null, uniqueClientViews: number | null, uniqueClientViews10Sec: number | null, medianReadingTime: number | null, uniqueClientViews5Min: number | null, uniqueClientViewsSeries: Array<{ __typename?: 'UniqueClientViewsSeries', date: string | null, uniqueClientViews: number | null } | null> | null } };

export type multiPostusePublishedPostsQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostusePublishedPostsQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & SunshinePostsList
    )> } | null };

export type RecentOpportunitiesQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type RecentOpportunitiesQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type RecentOpportunitiesWithSequenceQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type RecentOpportunitiesWithSequenceQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotesAndSequence
    )> } | null };

export type increasePostViewCountMutationMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type increasePostViewCountMutationMutation = { __typename?: 'Mutation', increasePostViewCount: number | null };

export type markPostCommentsReadMutationVariables = Exact<{
  postId: Scalars['String']['input'];
}>;


export type markPostCommentsReadMutation = { __typename?: 'Mutation', markPostCommentsRead: boolean | null };

export type RefreshDbSettingsMutationVariables = Exact<{ [key: string]: never; }>;


export type RefreshDbSettingsMutation = { __typename?: 'Mutation', RefreshDbSettings: boolean | null };

export type rejectPostMutationMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type rejectPostMutationMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & SunshinePostsList
    ) | null } | null };

export type rejectCommentMutationMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type rejectCommentMutationMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type multiMultiDocumentuseTagOrLensQueryQueryVariables = Exact<{
  selector?: InputMaybe<MultiDocumentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiMultiDocumentuseTagOrLensQueryQuery = { __typename?: 'Query', multiDocuments: { __typename?: 'MultiMultiDocumentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'MultiDocument' }
      & MultiDocumentParentDocument
    )> } | null };

export type UnreadNotificationCountQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type UnreadNotificationCountQueryQuery = { __typename?: 'Query', unreadNotificationCounts: { __typename?: 'NotificationCounts', unreadNotifications: number, unreadPrivateMessages: number, faviconBadgeNumber: number, checkedAt: string } };

export type updateUseruseUpdateCurrentUserMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUseruseUpdateCurrentUserMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type updateUseruseUpdateGlossaryPinnedStateMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUseruseUpdateGlossaryPinnedStateMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type multiJargonTermGlossaryEditFormQueryQueryVariables = Exact<{
  selector?: InputMaybe<JargonTermSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiJargonTermGlossaryEditFormQueryQuery = { __typename?: 'Query', jargonTerms: { __typename?: 'MultiJargonTermOutput', totalCount: number | null, results: Array<(
      { __typename?: 'JargonTerm' }
      & JargonTerms
    )> } | null };

export type updateJargonTermGlossaryEditForm1MutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateJargonTermDataInput;
}>;


export type updateJargonTermGlossaryEditForm1Mutation = { __typename?: 'Mutation', updateJargonTerm: { __typename?: 'JargonTermOutput', data: (
      { __typename?: 'JargonTerm' }
      & JargonTerms
    ) | null } | null };

export type updatePostGlossaryEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostGlossaryEditFormMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEdit
    ) | null } | null };

export type getNewJargonTermsMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  glossaryPrompt?: InputMaybe<Scalars['String']['input']>;
  examplePost?: InputMaybe<Scalars['String']['input']>;
  exampleTerm?: InputMaybe<Scalars['String']['input']>;
  exampleAltTerm?: InputMaybe<Scalars['String']['input']>;
  exampleDefinition?: InputMaybe<Scalars['String']['input']>;
}>;


export type getNewJargonTermsMutation = { __typename?: 'Mutation', getNewJargonTerms: Array<(
    { __typename?: 'JargonTerm' }
    & JargonTerms
  ) | null> | null };

export type multiPostGlossaryEditorPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type multiPostGlossaryEditorPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsEditQueryFragment
    )> } | null };

export type updateJargonTermJargonEditorRowMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateJargonTermDataInput;
}>;


export type updateJargonTermJargonEditorRowMutation = { __typename?: 'Mutation', updateJargonTerm: { __typename?: 'JargonTermOutput', data: (
      { __typename?: 'JargonTerm' }
      & JargonTerms
    ) | null } | null };

export type updateJargonTermJargonTermFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateJargonTermDataInput;
}>;


export type updateJargonTermJargonTermFormMutation = { __typename?: 'Mutation', updateJargonTerm: { __typename?: 'JargonTermOutput', data: (
      { __typename?: 'JargonTerm' }
      & JargonTerms
    ) | null } | null };

export type createJargonTermJargonTermFormMutationVariables = Exact<{
  data: CreateJargonTermDataInput;
}>;


export type createJargonTermJargonTermFormMutation = { __typename?: 'Mutation', createJargonTerm: { __typename?: 'JargonTermOutput', data: (
      { __typename?: 'JargonTerm' }
      & JargonTerms
    ) | null } | null };

export type getPostsWithApprovedJargonQueryVariables = Exact<{
  limit: Scalars['Int']['input'];
}>;


export type getPostsWithApprovedJargonQuery = { __typename?: 'Query', PostsWithApprovedJargon: { __typename?: 'PostsWithApprovedJargonResult', results: Array<{ __typename?: 'PostWithApprovedJargon', post: (
        { __typename?: 'Post' }
        & PostsListWithVotes
      ), jargonTerms: Array<(
        { __typename?: 'JargonTerm' }
        & JargonTerms
      )> }> } | null };

export type multiCommentAutocompleteModelSettingsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentAutocompleteModelSettingsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiPostAutocompleteModelSettingsQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostAutocompleteModelSettingsQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiLlmConversationLlmChatWrapperQueryQueryVariables = Exact<{
  selector?: InputMaybe<LlmConversationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLlmConversationLlmChatWrapperQueryQuery = { __typename?: 'Query', llmConversations: { __typename?: 'MultiLlmConversationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'LlmConversation' }
      & LlmConversationsFragment
    )> } | null };

export type updateLlmConversationLlmChatWrapperMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateLlmConversationDataInput;
}>;


export type updateLlmConversationLlmChatWrapperMutation = { __typename?: 'Mutation', updateLlmConversation: { __typename?: 'LlmConversationOutput', data: (
      { __typename?: 'LlmConversation' }
      & LlmConversationsFragment
    ) | null } | null };

export type LlmChatWrapperQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LlmChatWrapperQuery = { __typename?: 'Query', llmConversation: { __typename?: 'SingleLlmConversationOutput', result: (
      { __typename?: 'LlmConversation' }
      & LlmConversationsWithMessagesFragment
    ) | null } | null };

export type multiLlmConversationLlmConversationsViewingPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<LlmConversationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLlmConversationLlmConversationsViewingPageQueryQuery = { __typename?: 'Query', llmConversations: { __typename?: 'MultiLlmConversationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'LlmConversation' }
      & LlmConversationsViewingPageFragment
    )> } | null };

export type LlmConversationsViewingPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LlmConversationsViewingPageQuery = { __typename?: 'Query', llmConversation: { __typename?: 'SingleLlmConversationOutput', result: (
      { __typename?: 'LlmConversation' }
      & LlmConversationsWithMessagesFragment
    ) | null } | null };

export type PostSummaryDialogQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostSummaryDialogQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostWithGeneratedSummary
    ) | null } | null };

export type PostLinkPreviewSequenceQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type PostLinkPreviewSequenceQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    ) | null } | null };

export type PostLinkPreviewCommentQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type PostLinkPreviewCommentQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type PostLinkPreviewPostQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  allowNull?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type PostLinkPreviewPostQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type ArbitalPageRequestQueryVariables = Exact<{
  arbitalSlug: Scalars['String']['input'];
}>;


export type ArbitalPageRequestQuery = { __typename?: 'Query', ArbitalPageData: { __typename?: 'ArbitalPageData', title: string | null, html: string | null } | null };

export type updateUserCommunityHomeMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserCommunityHomeMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersProfile
    ) | null } | null };

export type multiUserCommunityMapQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserCommunityMapQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMapEntry
    )> } | null };

export type multiLocalgroupCommunityMapQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupCommunityMapQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    )> } | null };

export type multiPostCommunityMapQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostCommunityMapQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type updateLocalgroupGroupFormDialogMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateLocalgroupDataInput;
}>;


export type updateLocalgroupGroupFormDialogMutation = { __typename?: 'Mutation', updateLocalgroup: { __typename?: 'LocalgroupOutput', data: (
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    ) | null } | null };

export type createLocalgroupGroupFormDialogMutationVariables = Exact<{
  data: CreateLocalgroupDataInput;
}>;


export type createLocalgroupGroupFormDialogMutation = { __typename?: 'Mutation', createLocalgroup: { __typename?: 'LocalgroupOutput', data: (
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    ) | null } | null };

export type GroupFormDialogQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type GroupFormDialogQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsEdit
    ) | null } | null };

export type multiPostLocalGroupPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostLocalGroupPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type LocalGroupPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LocalGroupPageQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    ) | null } | null };

export type multiSubscriptionLocalGroupSubscribersQueryQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSubscriptionLocalGroupSubscribersQueryQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Subscription' }
      & MembersOfGroupFragment
    )> } | null };

export type multiLocalgroupLocalGroupsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupLocalGroupsListQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    )> } | null };

export type SetPersonalMapLocationDialogQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SetPersonalMapLocationDialogQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type multiPostTabNavigationEventsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostTabNavigationEventsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type multiMessageConversationContentsQueryQueryVariables = Exact<{
  selector?: InputMaybe<MessageSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiMessageConversationContentsQueryQuery = { __typename?: 'Query', messages: { __typename?: 'MultiMessageOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Message' }
      & messageListFragment
    )> } | null };

export type updateConversationInboxNavigationMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateConversationDataInput;
}>;


export type updateConversationInboxNavigationMutation = { __typename?: 'Mutation', updateConversation: { __typename?: 'ConversationOutput', data: (
      { __typename?: 'Conversation' }
      & ConversationsList
    ) | null } | null };

export type multiMessageConversationPreviewQueryQueryVariables = Exact<{
  selector?: InputMaybe<MessageSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiMessageConversationPreviewQueryQuery = { __typename?: 'Query', messages: { __typename?: 'MultiMessageOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Message' }
      & messageListFragment
    )> } | null };

export type ConversationPreviewQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ConversationPreviewQuery = { __typename?: 'Query', conversation: { __typename?: 'SingleConversationOutput', result: (
      { __typename?: 'Conversation' }
      & ConversationsList
    ) | null } | null };

export type updateConversationConversationTitleEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateConversationDataInput;
}>;


export type updateConversationConversationTitleEditFormMutation = { __typename?: 'Mutation', updateConversation: { __typename?: 'ConversationOutput', data: (
      { __typename?: 'Conversation' }
      & ConversationsList
    ) | null } | null };

export type multiConversationFriendlyInboxQueryQueryVariables = Exact<{
  selector?: InputMaybe<ConversationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiConversationFriendlyInboxQueryQuery = { __typename?: 'Query', conversations: { __typename?: 'MultiConversationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Conversation' }
      & ConversationsListWithReadStatus
    )> } | null };

export type FriendlyInboxQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type FriendlyInboxQuery = { __typename?: 'Query', conversation: { __typename?: 'SingleConversationOutput', result: (
      { __typename?: 'Conversation' }
      & ConversationsListWithReadStatus
    ) | null } | null };

export type MessageUserGetUserBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type MessageUserGetUserBySlugQuery = { __typename?: 'Query', GetUserBySlug: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type createMessageMessagesNewFormMutationVariables = Exact<{
  data: CreateMessageDataInput;
}>;


export type createMessageMessagesNewFormMutation = { __typename?: 'Mutation', createMessage: { __typename?: 'MessageOutput', data: (
      { __typename?: 'Message' }
      & messageListFragment
    ) | null } | null };

export type MessagesNewFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type MessagesNewFormQuery = { __typename?: 'Query', moderationTemplate: { __typename?: 'SingleModerationTemplateOutput', result: (
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    ) | null } | null };

export type updateModerationTemplateModerationTemplateFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateModerationTemplateDataInput;
}>;


export type updateModerationTemplateModerationTemplateFormMutation = { __typename?: 'Mutation', updateModerationTemplate: { __typename?: 'ModerationTemplateOutput', data: (
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    ) | null } | null };

export type createModerationTemplateModerationTemplateFormMutationVariables = Exact<{
  data: CreateModerationTemplateDataInput;
}>;


export type createModerationTemplateModerationTemplateFormMutation = { __typename?: 'Mutation', createModerationTemplate: { __typename?: 'ModerationTemplateOutput', data: (
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    ) | null } | null };

export type multiModerationTemplateModerationTemplatesPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<ModerationTemplateSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiModerationTemplateModerationTemplatesPageQueryQuery = { __typename?: 'Query', moderationTemplates: { __typename?: 'MultiModerationTemplateOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    )> } | null };

export type CommentOnYourDraftNotificationHoverQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentOnYourDraftNotificationHoverQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsMinimumInfo
    ) | null } | null };

export type EmailPreviewQueryQueryVariables = Exact<{
  notificationIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EmailPreviewQueryQuery = { __typename?: 'Query', EmailPreview: Array<{ __typename?: 'EmailPreview', to: string | null, subject: string | null, html: string | null, text: string | null } | null> | null };

export type multiNotificationNotificationsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<NotificationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiNotificationNotificationsListQueryQuery = { __typename?: 'Query', notifications: { __typename?: 'MultiNotificationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Notification' }
      & NotificationsList
    )> } | null };

export type NotificationsMenuButtonQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NotificationsMenuButtonQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UserKarmaChanges
    ) | null } | null };

export type NotificationsPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NotificationsPageQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UserKarmaChanges
    ) | null } | null };

export type NotificationsPageItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NotificationsPageItemQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type getNotificationDisplaysQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  type?: InputMaybe<Scalars['String']['input']>;
}>;


export type getNotificationDisplaysQuery = { __typename?: 'Query', NotificationDisplays: { __typename?: 'NotificationDisplaysResult', results: Array<any> } | null };

export type MarkAllNotificationsAsReadMutationVariables = Exact<{ [key: string]: never; }>;


export type MarkAllNotificationsAsReadMutation = { __typename?: 'Mutation', MarkAllNotificationsAsRead: boolean | null };

export type updateNotificationNotificationsPopoverNotificationMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateNotificationDataInput;
}>;


export type updateNotificationNotificationsPopoverNotificationMutation = { __typename?: 'Mutation', updateNotification: { __typename?: 'NotificationOutput', data: (
      { __typename?: 'Notification' }
      & NotificationsList
    ) | null } | null };

export type TagRelNotificationItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagRelNotificationItemQuery = { __typename?: 'Query', tagRel: { __typename?: 'SingleTagRelOutput', result: (
      { __typename?: 'TagRel' }
      & TagRelFragment
    ) | null } | null };

export type multiUserAdminPaymentsPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserAdminPaymentsPageQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type updateUserEditPaymentInfoPageMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserEditPaymentInfoPageMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type multiTagusePeopleDirectoryQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagusePeopleDirectoryQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagName
    )> } | null };

export type ActiveTagCountQueryVariables = Exact<{ [key: string]: never; }>;


export type ActiveTagCountQuery = { __typename?: 'Query', ActiveTagCount: number };

export type AddToCalendarButtonQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type AddToCalendarButtonQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsPlaintextDescription
    ) | null } | null };

export type multiPostCurrentOpenThreadPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostCurrentOpenThreadPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsMinimumInfo
    )> } | null };

export type multiPostDraftsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostDraftsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type updatePostDraftsListMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostDraftsListMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updatePostExternalPostImporterMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostExternalPostImporterMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type createCommentExternalPostImporterMutationVariables = Exact<{
  data: CreateCommentDataInput;
}>;


export type createCommentExternalPostImporterMutation = { __typename?: 'Mutation', createComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type importUrlAsDraftPostMutationVariables = Exact<{
  url: Scalars['String']['input'];
}>;


export type importUrlAsDraftPostMutation = { __typename?: 'Mutation', importUrlAsDraftPost: { __typename?: 'ExternalPostImportData', alreadyExists: boolean | null, post: { __typename?: 'ExternalPost', _id: string, slug: string | null, title: string | null, content: string | null, url: string | null, postedAt: string | null, createdAt: string | null, modifiedAt: string | null, userId: string | null, draft: boolean | null, coauthorUserIds: Array<string> | null } | null } };

export type FeedPostsHighlightQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type FeedPostsHighlightQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsExpandedHighlight
    ) | null } | null };

export type latestGoogleDocMetadataQueryVariables = Exact<{
  postId: Scalars['String']['input'];
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type latestGoogleDocMetadataQuery = { __typename?: 'Query', latestGoogleDocMetadata: any | null };

export type ImportGoogleDocMutationVariables = Exact<{
  fileUrl: Scalars['String']['input'];
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ImportGoogleDocMutation = { __typename?: 'Mutation', ImportGoogleDoc: (
    { __typename?: 'Post' }
    & PostsBase
  ) | null };

export type multiPostLWPostsByVoteQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostLWPostsByVoteQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type createPostNewDialogueDialogMutationVariables = Exact<{
  data: CreatePostDataInput;
}>;


export type createPostNewDialogueDialogMutation = { __typename?: 'Mutation', createPost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEdit
    ) | null } | null };

export type multiPostPingbacksListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostPingbacksListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type updatePostPostFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostPostFormMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEditMutationFragment
    ) | null } | null };

export type createPostPostFormMutationVariables = Exact<{
  data: CreatePostDataInput;
}>;


export type createPostPostFormMutation = { __typename?: 'Mutation', createPost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEditMutationFragment
    ) | null } | null };

export type multiUserMostValuablePostPostMostValuableCheckboxQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserMostValuablePostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserMostValuablePostPostMostValuableCheckboxQueryQuery = { __typename?: 'Query', userMostValuablePosts: { __typename?: 'MultiUserMostValuablePostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserMostValuablePost' }
      & UserMostValuablePostInfo
    )> } | null };

export type updateUserMostValuablePostPostMostValuableCheckboxMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserMostValuablePostDataInput;
}>;


export type updateUserMostValuablePostPostMostValuableCheckboxMutation = { __typename?: 'Mutation', updateUserMostValuablePost: { __typename?: 'UserMostValuablePostOutput', data: (
      { __typename?: 'UserMostValuablePost' }
      & UserMostValuablePostInfo
    ) | null } | null };

export type createUserMostValuablePostPostMostValuableCheckboxMutationVariables = Exact<{
  data: CreateUserMostValuablePostDataInput;
}>;


export type createUserMostValuablePostPostMostValuableCheckboxMutation = { __typename?: 'Mutation', createUserMostValuablePost: { __typename?: 'UserMostValuablePostOutput', data: (
      { __typename?: 'UserMostValuablePost' }
      & UserMostValuablePostInfo
    ) | null } | null };

export type multiPostPostsByVoteQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostPostsByVoteQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiVotePostsByVoteWrapperQueryQueryVariables = Exact<{
  selector?: InputMaybe<VoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiVotePostsByVoteWrapperQueryQuery = { __typename?: 'Query', votes: { __typename?: 'MultiVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Vote' }
      & UserVotes
    )> } | null };

export type multiRevisionPostsCompareRevisionsQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionPostsCompareRevisionsQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionHistoryEntry
    )> } | null };

export type PostsCompareRevisionsQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsCompareRevisionsQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsWithNavigation
    ) | null } | null };

export type multiCommentPostsDialogItemNewCommentsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentPostsDialogItemNewCommentsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type PostsEditFormUserQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  eventForm?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type PostsEditFormUserQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersCurrentPostRateLimit
    ) | null } | null };

export type PostsGroupDetailsQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsGroupDetailsQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    ) | null } | null };

export type PostsHighlightQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsHighlightQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsExpandedHighlight
    ) | null } | null };

export type multiCommentPostsItemNewCommentsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentPostsItemNewCommentsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type LatestDialogueMessagesQueryVariables = Exact<{
  dialogueId: Scalars['String']['input'];
  unreadCount: Scalars['Int']['input'];
}>;


export type LatestDialogueMessagesQuery = { __typename?: 'Query', latestDialogueMessages: Array<string> | null };

export type PostsItemWrapperQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsItemWrapperQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type createPostPostsNewFormMutationVariables = Exact<{
  data: CreatePostDataInput;
}>;


export type createPostPostsNewFormMutation = { __typename?: 'Mutation', createPost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsEdit
    ) | null } | null };

export type PostsNewForm4QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsNewForm4Query = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type PostsNewForm3QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsNewForm3Query = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsEditMutationFragment
    ) | null } | null };

export type PostsNewForm2QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsNewForm2Query = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsIsOnline
    ) | null } | null };

export type PostsNewForm1QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsNewForm1Query = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsEditQueryFragment
    ) | null } | null };

export type PostsNewFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsNewFormQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type multiReviewWinnerBestOfLessWrongAnnouncementQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewWinnerSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewWinnerBestOfLessWrongAnnouncementQueryQuery = { __typename?: 'Query', reviewWinners: { __typename?: 'MultiReviewWinnerOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewWinner' }
      & ReviewWinnerAnnouncement
    )> } | null };

export type createSplashArtCoordinateImageCropPreviewMutationVariables = Exact<{
  data: CreateSplashArtCoordinateDataInput;
}>;


export type createSplashArtCoordinateImageCropPreviewMutation = { __typename?: 'Mutation', createSplashArtCoordinate: { __typename?: 'SplashArtCoordinateOutput', data: (
      { __typename?: 'SplashArtCoordinate' }
      & SplashArtCoordinates
    ) | null } | null };

export type createSplashArtCoordinatePostWithArtGridMutationVariables = Exact<{
  data: CreateSplashArtCoordinateDataInput;
}>;


export type createSplashArtCoordinatePostWithArtGridMutation = { __typename?: 'Mutation', createSplashArtCoordinate: { __typename?: 'SplashArtCoordinateOutput', data: (
      { __typename?: 'SplashArtCoordinate' }
      & SplashArtCoordinatesEdit
    ) | null } | null };

export type multiCommentReviewPillContainerQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentReviewPillContainerQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    )> } | null };

export type flipSplashArtImageMutationVariables = Exact<{
  reviewWinnerArtId: Scalars['String']['input'];
}>;


export type flipSplashArtImageMutation = { __typename?: 'Mutation', flipSplashArtImage: boolean | null };

export type multiReviewWinnerArtSplashImageEditingOptionsQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewWinnerArtSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewWinnerArtSplashImageEditingOptionsQueryQuery = { __typename?: 'Query', reviewWinnerArts: { __typename?: 'MultiReviewWinnerArtOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewWinnerArt' }
      & ReviewWinnerArtImages
    )> } | null };

export type PostBodyQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostBodyQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostSideComments
    ) | null } | null };

export type PostsPageWrapper1QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPageWrapper1Query = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsWithNavigationAndRevision
    ) | null } | null };

export type PostsPageWrapperQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPageWrapperQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsWithNavigation
    ) | null } | null };

export type PostsRevisionsListQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsRevisionsListQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsRevisionsList
    ) | null } | null };

export type RegisterRSVPMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  email?: InputMaybe<Scalars['String']['input']>;
  private?: InputMaybe<Scalars['Boolean']['input']>;
  response?: InputMaybe<Scalars['String']['input']>;
}>;


export type RegisterRSVPMutation = { __typename?: 'Mutation', RSVPToEvent: (
    { __typename?: 'Post' }
    & PostsDetails
  ) | null };

export type CancelRSVPToEventMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
  name?: InputMaybe<Scalars['String']['input']>;
  userId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CancelRSVPToEventMutation = { __typename?: 'Mutation', CancelRSVPToEvent: (
    { __typename?: 'Post' }
    & PostsDetails
  ) | null };

export type LWPostsPreviewTooltip1QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  dialogueMessageId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LWPostsPreviewTooltip1Query = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostWithDialogueMessage
    ) | null } | null };

export type LWPostsPreviewTooltipQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type LWPostsPreviewTooltipQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & HighlightWithHash
    ) | null } | null };

export type PostsPreviewTooltipSingle4QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPreviewTooltipSingle4Query = { __typename?: 'Query', tagRel: { __typename?: 'SingleTagRelOutput', result: (
      { __typename?: 'TagRel' }
      & TagRelFragment
    ) | null } | null };

export type PostsPreviewTooltipSingle3QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPreviewTooltipSingle3Query = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type PostsPreviewTooltipSingleQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPreviewTooltipSingleQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type multiPostPostsTimeBlockQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostPostsTimeBlockQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type getRecombeeLatestPostsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type getRecombeeLatestPostsQuery = { __typename?: 'Query', RecombeeLatestPosts: { __typename?: 'RecombeeLatestPostsResult', results: Array<{ __typename?: 'RecombeeRecommendedPost', scenario: string | null, recommId: string | null, generatedAt: string | null, curated: boolean | null, stickied: boolean | null, post: (
        { __typename?: 'Post' }
        & PostsListWithVotes
      ) }> } | null };

export type getRecombeeHybridPostsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  settings?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type getRecombeeHybridPostsQuery = { __typename?: 'Query', RecombeeHybridPosts: { __typename?: 'RecombeeHybridPostsResult', results: Array<{ __typename?: 'RecombeeRecommendedPost', scenario: string | null, recommId: string | null, generatedAt: string | null, curated: boolean | null, stickied: boolean | null, post: (
        { __typename?: 'Post' }
        & PostsListWithVotes
      ) }> } | null };

export type createCommentDialogueSubmitMutationVariables = Exact<{
  data: CreateCommentDataInput;
}>;


export type createCommentDialogueSubmitMutation = { __typename?: 'Mutation', createComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentEdit
    ) | null } | null };

export type PostsEditFormPostQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsEditFormPostQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsEditQueryFragment
    ) | null } | null };

export type multiCommentPostsPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentPostsPageQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type postCommentsThreadQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type postCommentsThreadQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiPostusePostQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostusePostQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsPage
    )> } | null };

export type postsListWithVotesQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type postsListWithVotesQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type postsListTagWithVotesQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  tagId?: InputMaybe<Scalars['String']['input']>;
}>;


export type postsListTagWithVotesQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListTagWithVotes
    )> } | null };

export type multiCommentQuickTakesSectionQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentQuickTakesSectionQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & FrontpageShortformComments
    )> } | null };

export type multiTaguseQuickTakesTagsQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTaguseQuickTakesTagsQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagPreviewFragment
    )> } | null };

export type multiPostRecentDiscussionThreadsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  commentsLimit?: InputMaybe<Scalars['Int']['input']>;
  maxAgeHours?: InputMaybe<Scalars['Int']['input']>;
  af?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostRecentDiscussionThreadsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsRecentDiscussion
    )> } | null };

export type CuratedAndPopularThisWeekQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type CuratedAndPopularThisWeekQuery = { __typename?: 'Query', CuratedAndPopularThisWeek: { __typename?: 'CuratedAndPopularThisWeekResult', results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type multiPostRecommendationsSamplePageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostRecommendationsSamplePageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type WelcomePostItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type WelcomePostItemQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null } | null };

export type observeRecommendationMutationVariables = Exact<{
  postId: Scalars['String']['input'];
}>;


export type observeRecommendationMutation = { __typename?: 'Mutation', observeRecommendation: boolean | null };

export type clickRecommendationMutationVariables = Exact<{
  postId: Scalars['String']['input'];
}>;


export type clickRecommendationMutation = { __typename?: 'Mutation', clickRecommendation: boolean | null };

export type ContinueReadingQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type ContinueReadingQueryQuery = { __typename?: 'Query', ContinueReading: Array<{ __typename?: 'RecommendResumeSequence', numRead: number | null, numTotal: number | null, lastReadTime: string | null, sequence: (
      { __typename?: 'Sequence' }
      & SequenceContinueReadingFragment
    ) | null, collection: (
      { __typename?: 'Collection' }
      & CollectionContinueReadingFragment
    ) | null, nextPost: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) }> | null };

export type dismissRecommendationMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type dismissRecommendationMutation = { __typename?: 'Mutation', dismissRecommendation: boolean | null };

export type RecommendationsQueryQueryVariables = Exact<{
  count?: InputMaybe<Scalars['Int']['input']>;
  algorithm?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type RecommendationsQueryQuery = { __typename?: 'Query', Recommendations: Array<(
    { __typename?: 'Post' }
    & PostsListWithVotesAndSequence
  )> | null };

export type multiReviewWinnerArtBestOfLessWrongAdminQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewWinnerArtSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewWinnerArtBestOfLessWrongAdminQueryQuery = { __typename?: 'Query', reviewWinnerArts: { __typename?: 'MultiReviewWinnerArtOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewWinnerArt' }
      & ReviewWinnerArtImages
    )> } | null };

export type BestOfLessWrongAdminQueryVariables = Exact<{ [key: string]: never; }>;


export type BestOfLessWrongAdminQuery = { __typename?: 'Query', GetAllReviewWinners: Array<(
    { __typename?: 'Post' }
    & PostsTopItemInfo
  )> };

export type FrontpageBestOfLWWidgetQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type FrontpageBestOfLWWidgetQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null } | null };

export type GenerateCoverImagesForPostMutationVariables = Exact<{
  postId: Scalars['String']['input'];
  prompt?: InputMaybe<Scalars['String']['input']>;
}>;


export type GenerateCoverImagesForPostMutation = { __typename?: 'Mutation', generateCoverImagesForPost: Array<{ __typename?: 'ReviewWinnerArt', _id: string } | null> | null };

export type multiCommentLatestReviewQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentLatestReviewQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type PostNominatedNotificationQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostNominatedNotificationQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type getPostsUserCommentedOnQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
  filter?: InputMaybe<PostReviewFilter>;
  sort?: InputMaybe<PostReviewSort>;
}>;


export type getPostsUserCommentedOnQuery = { __typename?: 'Query', PostsUserCommentedOn: { __typename?: 'UserReadHistoryResult', posts: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> | null } | null };

export type multiPostQuickReviewPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostQuickReviewPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsReviewVotingList
    )> } | null };

export type multiPostQuickReviewPage2022QueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostQuickReviewPage2022QueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsReviewVotingList
    )> } | null };

export type multiReviewVoteReviewAdminDashboardQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewVoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewVoteReviewAdminDashboardQueryQuery = { __typename?: 'Query', reviewVotes: { __typename?: 'MultiReviewVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewVote' }
      & reviewAdminDashboard
    )> } | null };

export type multiCommentReviewPostCommentsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentReviewPostCommentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    )> } | null };

export type multiCommentReviewProgressNominationsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentReviewProgressNominationsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiCommentReviewProgressReviewsQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentReviewProgressReviewsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiReviewVoteReviewProgressVotingQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewVoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewVoteReviewProgressVotingQueryQuery = { __typename?: 'Query', reviewVotes: { __typename?: 'MultiReviewVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewVote' }
      & reviewVoteFragment
    )> } | null };

export type multiReviewVoteReviewVotingCanvasQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReviewVoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReviewVoteReviewVotingCanvasQueryQuery = { __typename?: 'Query', reviewVotes: { __typename?: 'MultiReviewVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ReviewVote' }
      & reviewVoteFragment
    )> } | null };

export type GivingSeasonHeartsQueryQueryVariables = Exact<{
  electionName: Scalars['String']['input'];
}>;


export type GivingSeasonHeartsQueryQuery = { __typename?: 'Query', GivingSeasonHearts: Array<{ __typename?: 'GivingSeasonHeart', userId: string, displayName: string, x: number, y: number, theta: number }> };

export type AddGivingSeasonHeartMutationVariables = Exact<{
  electionName: Scalars['String']['input'];
  x: Scalars['Float']['input'];
  y: Scalars['Float']['input'];
  theta: Scalars['Float']['input'];
}>;


export type AddGivingSeasonHeartMutation = { __typename?: 'Mutation', AddGivingSeasonHeart: Array<{ __typename?: 'GivingSeasonHeart', userId: string, displayName: string, x: number, y: number, theta: number }> };

export type RemoveGivingSeasonHeartMutationVariables = Exact<{
  electionName: Scalars['String']['input'];
}>;


export type RemoveGivingSeasonHeartMutation = { __typename?: 'Mutation', RemoveGivingSeasonHeart: Array<{ __typename?: 'GivingSeasonHeart', userId: string, displayName: string, x: number, y: number, theta: number }> };

export type ReviewVotingExpandedPostQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ReviewVotingExpandedPostQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type multiPostReviewVotingPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostReviewVotingPageQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsReviewVotingList
    )> } | null };

export type submitReviewVoteMutationVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
  qualitativeScore?: InputMaybe<Scalars['Int']['input']>;
  quadraticChange?: InputMaybe<Scalars['Int']['input']>;
  newQuadraticScore?: InputMaybe<Scalars['Int']['input']>;
  comment?: InputMaybe<Scalars['String']['input']>;
  year?: InputMaybe<Scalars['String']['input']>;
  dummy?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type submitReviewVoteMutation = { __typename?: 'Mutation', submitReviewVote: (
    { __typename?: 'Post' }
    & PostsReviewVotingList
  ) | null };

export type updateUserReviews2019MutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserReviews2019Mutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type multiCommentReviewsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentReviewsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type RotatingReviewWinnerSpotlightDisplayQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type RotatingReviewWinnerSpotlightDisplayQuery = { __typename?: 'Query', spotlight: { __typename?: 'SingleSpotlightOutput', result: (
      { __typename?: 'Spotlight' }
      & SpotlightDisplay
    ) | null } | null };

export type RotatingReviewWinnerSpotlightQueryVariables = Exact<{ [key: string]: never; }>;


export type RotatingReviewWinnerSpotlightQuery = { __typename?: 'Query', GetAllReviewWinners: Array<{ __typename?: 'Post', reviewWinner: { __typename?: 'ReviewWinner', _id: string, category: string } | null, spotlight: { __typename?: 'Spotlight', _id: string } | null }> };

export type multiCommentSingleLineReviewsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentSingleLineReviewsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiUserUserReviewsQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserUserReviewsQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type updateRevisionCompareRevisionsMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateRevisionDataInput;
}>;


export type updateRevisionCompareRevisionsMutation = { __typename?: 'Mutation', updateRevision: { __typename?: 'RevisionOutput', data: (
      { __typename?: 'Revision' }
      & RevisionEdit
    ) | null } | null };

export type RevisionsDiffQueryVariables = Exact<{
  collectionName: Scalars['String']['input'];
  fieldName: Scalars['String']['input'];
  id: Scalars['String']['input'];
  beforeRev?: InputMaybe<Scalars['String']['input']>;
  afterRev: Scalars['String']['input'];
  trim?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type RevisionsDiffQuery = { __typename?: 'Query', RevisionsDiff: string | null };

export type multiRevisionPostsRevisionSelectQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionPostsRevisionSelectQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionMetadataWithChangeMetrics
    )> } | null };

export type PostsRevisionSelectQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsRevisionSelectQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsDetails
    ) | null } | null };

export type multiRevisionTagPageRevisionSelectQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionTagPageRevisionSelectQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionHistoryEntry
    )> } | null };

export type multiRSSFeedNewFeedButtonQueryQueryVariables = Exact<{
  selector?: InputMaybe<RSSFeedSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRSSFeedNewFeedButtonQueryQuery = { __typename?: 'Query', rSSFeeds: { __typename?: 'MultiRSSFeedOutput', totalCount: number | null, results: Array<(
      { __typename?: 'RSSFeed' }
      & RSSFeedMinimumInfo
    )> } | null };

export type createRSSFeedNewFeedButtonMutationVariables = Exact<{
  data: CreateRSSFeedDataInput;
}>;


export type createRSSFeedNewFeedButtonMutation = { __typename?: 'Mutation', createRSSFeed: { __typename?: 'RSSFeedOutput', data: (
      { __typename?: 'RSSFeed' }
      & newRSSFeedFragment
    ) | null } | null };

export type multiUserAprilFools2022QueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserAprilFools2022QueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type HomepageCommunityMapQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type HomepageCommunityMapQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type launchPetrovMissileMutationVariables = Exact<{
  launchCode?: InputMaybe<Scalars['String']['input']>;
}>;


export type launchPetrovMissileMutation = { __typename?: 'Mutation', PetrovDayLaunchMissile: { __typename?: 'PetrovDayLaunchMissileData', launchCode: string | null } | null };

export type petrovDayLaunchResolversQueryVariables = Exact<{ [key: string]: never; }>;


export type petrovDayLaunchResolversQuery = { __typename?: 'Query', PetrovDayCheckIfIncoming: { __typename?: 'PetrovDayCheckIfIncomingData', launched: boolean | null, createdAt: string | null } | null };

export type meetupMonthQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type meetupMonthQueryQuery = { __typename?: 'Query', HomepageCommunityEvents: { __typename?: 'HomepageCommunityEventMarkersResult', events: Array<{ __typename?: 'HomepageCommunityEventMarker', _id: string, lat: number, lng: number, types: Array<string> | null }> } };

export type multiPetrovDayActionOptIntoPetrovButtonQueryQueryVariables = Exact<{
  selector?: InputMaybe<PetrovDayActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPetrovDayActionOptIntoPetrovButtonQueryQuery = { __typename?: 'Query', petrovDayActions: { __typename?: 'MultiPetrovDayActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    )> } | null };

export type createPetrovDayActionOptIntoPetrovButtonMutationVariables = Exact<{
  data: CreatePetrovDayActionDataInput;
}>;


export type createPetrovDayActionOptIntoPetrovButtonMutation = { __typename?: 'Mutation', createPetrovDayAction: { __typename?: 'PetrovDayActionOutput', data: (
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    ) | null } | null };

export type multiPetrovDayActionPetrovAdminConsoleQueryQueryVariables = Exact<{
  selector?: InputMaybe<PetrovDayActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPetrovDayActionPetrovAdminConsoleQueryQuery = { __typename?: 'Query', petrovDayActions: { __typename?: 'MultiPetrovDayActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    )> } | null };

export type multiPetrovDayActionPetrovGameWrapperQueryQueryVariables = Exact<{
  selector?: InputMaybe<PetrovDayActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPetrovDayActionPetrovGameWrapperQueryQuery = { __typename?: 'Query', petrovDayActions: { __typename?: 'MultiPetrovDayActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    )> } | null };

export type petrov2024checkIfNukedQueryVariables = Exact<{ [key: string]: never; }>;


export type petrov2024checkIfNukedQuery = { __typename?: 'Query', petrov2024checkIfNuked: boolean | null };

export type multiPetrovDayActionPetrovLaunchConsoleQueryQueryVariables = Exact<{
  selector?: InputMaybe<PetrovDayActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPetrovDayActionPetrovLaunchConsoleQueryQuery = { __typename?: 'Query', petrovDayActions: { __typename?: 'MultiPetrovDayActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    )> } | null };

export type createPetrovDayActionPetrovLaunchConsoleMutationVariables = Exact<{
  data: CreatePetrovDayActionDataInput;
}>;


export type createPetrovDayActionPetrovLaunchConsoleMutation = { __typename?: 'Mutation', createPetrovDayAction: { __typename?: 'PetrovDayActionOutput', data: (
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    ) | null } | null };

export type multiPetrovDayActionPetrovWarningConsoleQueryQueryVariables = Exact<{
  selector?: InputMaybe<PetrovDayActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPetrovDayActionPetrovWarningConsoleQueryQuery = { __typename?: 'Query', petrovDayActions: { __typename?: 'MultiPetrovDayActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    )> } | null };

export type createPetrovDayActionPetrovWarningConsoleMutationVariables = Exact<{
  data: CreatePetrovDayActionDataInput;
}>;


export type createPetrovDayActionPetrovWarningConsoleMutation = { __typename?: 'Mutation', createPetrovDayAction: { __typename?: 'PetrovDayActionOutput', data: (
      { __typename?: 'PetrovDayAction' }
      & PetrovDayActionInfo
    ) | null } | null };

export type petrovDay2024ResolversQueryVariables = Exact<{ [key: string]: never; }>;


export type petrovDay2024ResolversQuery = { __typename?: 'Query', PetrovDay2024CheckNumberOfIncoming: { __typename?: 'PetrovDay2024CheckNumberOfIncomingData', count: number | null } | null };

export type updateChapterAddDraftPostDialogMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateChapterDataInput;
}>;


export type updateChapterAddDraftPostDialogMutation = { __typename?: 'Mutation', updateChapter: { __typename?: 'ChapterOutput', data: (
      { __typename?: 'Chapter' }
      & ChaptersFragment
    ) | null } | null };

export type updateBookBooksFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateBookDataInput;
}>;


export type updateBookBooksFormMutation = { __typename?: 'Mutation', updateBook: { __typename?: 'BookOutput', data: (
      { __typename?: 'Book' }
      & BookPageFragment
    ) | null } | null };

export type createBookBooksFormMutationVariables = Exact<{
  data: CreateBookDataInput;
}>;


export type createBookBooksFormMutation = { __typename?: 'Mutation', createBook: { __typename?: 'BookOutput', data: (
      { __typename?: 'Book' }
      & BookPageFragment
    ) | null } | null };

export type BooksItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type BooksItemQuery = { __typename?: 'Query', book: { __typename?: 'SingleBookOutput', result: (
      { __typename?: 'Book' }
      & BookEdit
    ) | null } | null };

export type updateChapterChaptersFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateChapterDataInput;
}>;


export type updateChapterChaptersFormMutation = { __typename?: 'Mutation', updateChapter: { __typename?: 'ChapterOutput', data: (
      { __typename?: 'Chapter' }
      & ChaptersEdit
    ) | null } | null };

export type createChapterChaptersFormMutationVariables = Exact<{
  data: CreateChapterDataInput;
}>;


export type createChapterChaptersFormMutation = { __typename?: 'Mutation', createChapter: { __typename?: 'ChapterOutput', data: (
      { __typename?: 'Chapter' }
      & ChaptersEdit
    ) | null } | null };

export type ChaptersItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ChaptersItemQuery = { __typename?: 'Query', chapter: { __typename?: 'SingleChapterOutput', result: (
      { __typename?: 'Chapter' }
      & ChaptersEdit
    ) | null } | null };

export type multiChapterChaptersListQueryQueryVariables = Exact<{
  selector?: InputMaybe<ChapterSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiChapterChaptersListQueryQuery = { __typename?: 'Query', chapters: { __typename?: 'MultiChapterOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Chapter' }
      & ChaptersFragment
    )> } | null };

export type updateCollectionCollectionsEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCollectionDataInput;
}>;


export type updateCollectionCollectionsEditFormMutation = { __typename?: 'Mutation', updateCollection: { __typename?: 'CollectionOutput', data: (
      { __typename?: 'Collection' }
      & CollectionsPageFragment
    ) | null } | null };

export type CollectionsEditQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionsEditQuery = { __typename?: 'Query', collection: { __typename?: 'SingleCollectionOutput', result: (
      { __typename?: 'Collection' }
      & CollectionsEditFragment
    ) | null } | null };

export type multiPostSequenceDraftsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostSequenceDraftsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type updateSequenceSequencesFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateSequenceDataInput;
}>;


export type updateSequenceSequencesFormMutation = { __typename?: 'Mutation', updateSequence: { __typename?: 'SequenceOutput', data: (
      { __typename?: 'Sequence' }
      & SequencesEdit
    ) | null } | null };

export type createSequenceSequencesFormMutationVariables = Exact<{
  data: CreateSequenceDataInput;
}>;


export type createSequenceSequencesFormMutation = { __typename?: 'Mutation', createSequence: { __typename?: 'SequenceOutput', data: (
      { __typename?: 'Sequence' }
      & SequencesEdit
    ) | null } | null };

export type multiSequenceSequencesGridWrapperQueryQueryVariables = Exact<{
  selector?: InputMaybe<SequenceSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSequenceSequencesGridWrapperQueryQuery = { __typename?: 'Query', sequences: { __typename?: 'MultiSequenceOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    )> } | null };

export type SequencesPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SequencesPageQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageFragment
    ) | null } | null };

export type SequencesEditQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SequencesEditQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesEdit
    ) | null } | null };

export type multiChapterSequencesSummaryQueryQueryVariables = Exact<{
  selector?: InputMaybe<ChapterSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiChapterSequencesSummaryQueryQuery = { __typename?: 'Query', chapters: { __typename?: 'MultiChapterOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Chapter' }
      & ChaptersFragment
    )> } | null };

export type GetAllReviewWinnersQueryVariables = Exact<{ [key: string]: never; }>;


export type GetAllReviewWinnersQuery = { __typename?: 'Query', GetAllReviewWinners: Array<(
    { __typename?: 'Post' }
    & PostsTopItemInfo
  )> };

export type GetReviewWinnerSpotlightsQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type GetReviewWinnerSpotlightsQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post', reviewWinner: (
        { __typename?: 'ReviewWinner' }
        & ReviewWinnerTopPostsPage
      ) | null, spotlight: (
        { __typename?: 'Spotlight' }
        & SpotlightDisplay
      ) | null }
      & PostsBase
    )> } | null };

export type CollectionsPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CollectionsPageQuery = { __typename?: 'Query', collection: { __typename?: 'SingleCollectionOutput', result: (
      { __typename?: 'Collection' }
      & CollectionsPageFragment
    ) | null } | null };

export type updateContinueReadingMutationVariables = Exact<{
  sequenceId: Scalars['String']['input'];
  postId: Scalars['String']['input'];
}>;


export type updateContinueReadingMutation = { __typename?: 'Mutation', updateContinueReading: boolean | null };

export type ProfileShortformQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ProfileShortformQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null } | null };

export type multiCommentRepliesToCommentListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentRepliesToCommentListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiCommentShortformThreadListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentShortformThreadListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    )> } | null };

export type multiCommentShortformTimeBlockQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentShortformTimeBlockQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & ShortformComments
    )> } | null };

export type DisplaySpotlightQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type DisplaySpotlightQueryQuery = { __typename?: 'Query', currentSpotlight: (
    { __typename?: 'Spotlight' }
    & SpotlightDisplay
  ) | null };

export type updateSpotlightSpotlightFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateSpotlightDataInput;
}>;


export type updateSpotlightSpotlightFormMutation = { __typename?: 'Mutation', updateSpotlight: { __typename?: 'SpotlightOutput', data: (
      { __typename?: 'Spotlight' }
      & SpotlightEditQueryFragment
    ) | null } | null };

export type createSpotlightSpotlightFormMutationVariables = Exact<{
  data: CreateSpotlightDataInput;
}>;


export type createSpotlightSpotlightFormMutation = { __typename?: 'Mutation', createSpotlight: { __typename?: 'SpotlightOutput', data: (
      { __typename?: 'Spotlight' }
      & SpotlightEditQueryFragment
    ) | null } | null };

export type multiSpotlightSpotlightHistoryQueryQueryVariables = Exact<{
  selector?: InputMaybe<SpotlightSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSpotlightSpotlightHistoryQueryQuery = { __typename?: 'Query', spotlights: { __typename?: 'MultiSpotlightOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Spotlight' }
      & SpotlightDisplay
    )> } | null };

export type updateSpotlightSpotlightItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateSpotlightDataInput;
}>;


export type updateSpotlightSpotlightItemMutation = { __typename?: 'Mutation', updateSpotlight: { __typename?: 'SpotlightOutput', data: (
      { __typename?: 'Spotlight' }
      & SpotlightDisplay
    ) | null } | null };

export type SpotlightItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SpotlightItemQuery = { __typename?: 'Query', spotlight: { __typename?: 'SingleSpotlightOutput', result: (
      { __typename?: 'Spotlight' }
      & SpotlightEditQueryFragment
    ) | null } | null };

export type SpotlightStartOrContinueReadingQueryQueryVariables = Exact<{
  spotlightId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SpotlightStartOrContinueReadingQueryQuery = { __typename?: 'Query', spotlight: { __typename?: 'SingleSpotlightOutput', result: { __typename?: 'Spotlight', _id: string, sequenceChapters: Array<{ __typename?: 'Chapter', _id: string, posts: Array<(
          { __typename?: 'Post' }
          & PostsList
        )> }> | null } | null } | null };

export type multiSpotlightSpotlightsPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<SpotlightSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSpotlightSpotlightsPageQueryQuery = { __typename?: 'Query', spotlights: { __typename?: 'MultiSpotlightOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Spotlight' }
      & SpotlightDisplay
    )> } | null };

export type publishAndDeDuplicateSpotlightMutationVariables = Exact<{
  spotlightId?: InputMaybe<Scalars['String']['input']>;
}>;


export type publishAndDeDuplicateSpotlightMutation = { __typename?: 'Mutation', publishAndDeDuplicateSpotlight: (
    { __typename?: 'Spotlight' }
    & SpotlightDisplay
  ) | null };

export type multiSubscriptionFollowUserSearchQueryQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSubscriptionFollowUserSearchQueryQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Subscription' }
      & SubscriptionState
    )> } | null };

export type UserFollowingCountQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type UserFollowingCountQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null } | null };

export type SuggestedFeedSubscriptionUsersQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type SuggestedFeedSubscriptionUsersQuery = { __typename?: 'Query', SuggestedFeedSubscriptionUsers: { __typename?: 'SuggestedFeedSubscriptionUsersResult', results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type updateCommentAFSuggestCommentsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentAFSuggestCommentsItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & SuggestAlignmentComment
    ) | null } | null };

export type multiCommentAFSuggestCommentsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentAFSuggestCommentsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & SuggestAlignmentComment
    )> } | null };

export type updatePostAFSuggestPostsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostAFSuggestPostsItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & SuggestAlignmentPost
    ) | null } | null };

export type multiPostAFSuggestPostsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostAFSuggestPostsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & SuggestAlignmentPost
    )> } | null };

export type updateUserAFSuggestUsersItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserAFSuggestUsersItemMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & SunshineUsersList
    ) | null } | null };

export type multiUserAFSuggestUsersListQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserAFSuggestUsersListQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & SuggestAlignmentUser
    )> } | null };

export type AllReactedCommentsQueryVariables = Exact<{
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type AllReactedCommentsQuery = { __typename?: 'Query', CommentsWithReacts: { __typename?: 'CommentsWithReactsResult', results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiLWEventEmailHistoryQueryQueryVariables = Exact<{
  selector?: InputMaybe<LWEventSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLWEventEmailHistoryQueryQuery = { __typename?: 'Query', lWEvents: { __typename?: 'MultiLWEventOutput', totalCount: number | null, results: Array<(
      { __typename?: 'LWEvent' }
      & emailHistoryFragment
    )> } | null };

export type ModGPTDashboardQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type ModGPTDashboardQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithModGPTAnalysis
    )> } | null };

export type multiClientIdModerationAltAccountsQueryQueryVariables = Exact<{
  selector?: InputMaybe<ClientIdSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiClientIdModerationAltAccountsQueryQuery = { __typename?: 'Query', clientIds: { __typename?: 'MultiClientIdOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ClientId' }
      & ModeratorClientIDInfo
    )> } | null };

export type multiUserModerationAltAccountsQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserModerationAltAccountsQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UserAltAccountsFragment
    )> } | null };

export type ModerationAltAccountsQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type ModerationAltAccountsQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UserAltAccountsFragment
    ) | null } | null };

export type ModeratorIPAddressInfoQueryVariables = Exact<{
  ipAddress: Scalars['String']['input'];
}>;


export type ModeratorIPAddressInfoQuery = { __typename?: 'Query', moderatorViewIPAddress: { __typename?: 'ModeratorIPAddressInfo', ip: string, userIds: Array<string> } | null };

export type multiUserModerationDashboardQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserModerationDashboardQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & SunshineUsersList
    )> } | null };

export type updateUserModeratorActionsMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserModeratorActionsMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & SunshineUsersList
    ) | null } | null };

export type createModeratorActionMutationVariables = Exact<{
  data: CreateModeratorActionDataInput;
}>;


export type createModeratorActionMutation = { __typename?: 'Mutation', createModeratorAction: { __typename?: 'ModeratorActionOutput', data: (
      { __typename?: 'ModeratorAction' }
      & ModeratorActionDisplay
    ) | null } | null };

export type multiConversationModeratorMessageCountQueryQueryVariables = Exact<{
  selector?: InputMaybe<ConversationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiConversationModeratorMessageCountQueryQuery = { __typename?: 'Query', conversations: { __typename?: 'MultiConversationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Conversation' }
      & ConversationsMinimumInfo
    )> } | null };

export type multiUserAltAccountInfoQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserAltAccountInfoQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & SunshineUsersList
    )> } | null };

export type updateModeratorActionModeratorActionItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateModeratorActionDataInput;
}>;


export type updateModeratorActionModeratorActionItemMutation = { __typename?: 'Mutation', updateModeratorAction: { __typename?: 'ModeratorActionOutput', data: (
      { __typename?: 'ModeratorAction' }
      & ModeratorActionDisplay
    ) | null } | null };

export type multiUserRecentlyActiveUsersQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserRecentlyActiveUsersQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & SunshineUsersList
    )> } | null };

export type NewCommentModerationWarningQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NewCommentModerationWarningQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type createModeratorActionNewModeratorActionDialogMutationVariables = Exact<{
  data: CreateModeratorActionDataInput;
}>;


export type createModeratorActionNewModeratorActionDialogMutation = { __typename?: 'Mutation', createModeratorAction: { __typename?: 'ModeratorActionOutput', data: (
      { __typename?: 'ModeratorAction' }
      & ModeratorActionDisplay
    ) | null } | null };

export type NewPostModerationWarningQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NewPostModerationWarningQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsList
    ) | null } | null };

export type multiModerationTemplateRejectContentDialogQueryQueryVariables = Exact<{
  selector?: InputMaybe<ModerationTemplateSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiModerationTemplateRejectContentDialogQueryQuery = { __typename?: 'Query', moderationTemplates: { __typename?: 'MultiModerationTemplateOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    )> } | null };

export type createReportReportFormMutationVariables = Exact<{
  data: CreateReportDataInput;
}>;


export type createReportReportFormMutation = { __typename?: 'Mutation', createReport: { __typename?: 'ReportOutput', data: (
      { __typename?: 'Report' }
      & UnclaimedReportsList
    ) | null } | null };

export type updatePostSunshineCuratedSuggestionsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostSunshineCuratedSuggestionsItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & SunshineCurationPostsList
    ) | null } | null };

export type multiPostsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type multiSunshineCurationPostsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSunshineCurationPostsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & SunshineCurationPostsList
    )> } | null };

export type multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQueryQueryVariables = Exact<{
  selector?: InputMaybe<GoogleServiceAccountSessionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQueryQuery = { __typename?: 'Query', googleServiceAccountSessions: { __typename?: 'MultiGoogleServiceAccountSessionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'GoogleServiceAccountSession' }
      & GoogleServiceAccountSessionAdminInfo
    )> } | null };

export type updateCommentSunshineNewCommentsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentSunshineNewCommentsItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type multiCommentSunshineNewCommentsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type multiCommentSunshineNewCommentsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type updatePostSunshineNewPostsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostSunshineNewPostsItemMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type createModeratorActionSunshineNewPostsItemMutationVariables = Exact<{
  data: CreateModeratorActionDataInput;
}>;


export type createModeratorActionSunshineNewPostsItemMutation = { __typename?: 'Mutation', createModeratorAction: { __typename?: 'ModeratorActionOutput', data: { __typename?: 'ModeratorAction', _id: string } | null } | null };

export type multiPostSunshineNewPostsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostSunshineNewPostsListQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & SunshinePostsList
    )> } | null };

export type multiTagRelSunshineNewTagsItemQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagRelSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagRelSunshineNewTagsItemQueryQuery = { __typename?: 'Query', tagRels: { __typename?: 'MultiTagRelOutput', totalCount: number | null, results: Array<(
      { __typename?: 'TagRel' }
      & TagRelFragment
    )> } | null };

export type updateTagSunshineNewTagsItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagDataInput;
}>;


export type updateTagSunshineNewTagsItemMutation = { __typename?: 'Mutation', updateTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & SunshineTagFragment
    ) | null } | null };

export type multiTagSunshineNewTagsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagSunshineNewTagsListQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & SunshineTagFragment
    )> } | null };

export type multiCommentSunshineNewUsersInfoQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentSunshineNewUsersInfoQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiUserSunshineNewUsersListQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserSunshineNewUsersListQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & SunshineUsersList
    )> } | null };

export type SunshineNewUsersProfileInfoQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SunshineNewUsersProfileInfoQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & SunshineUsersList
    ) | null } | null };

export type multiReportSunshineReportedContentListQueryQueryVariables = Exact<{
  selector?: InputMaybe<ReportSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiReportSunshineReportedContentListQueryQuery = { __typename?: 'Query', reports: { __typename?: 'MultiReportOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Report' }
      & UnclaimedReportsList
    )> } | null };

export type updatePostSunshineReportedItem1MutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostSunshineReportedItem1Mutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type updateCommentSunshineReportedItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentSunshineReportedItemMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type updateReportSunshineReportedContentListMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateReportDataInput;
}>;


export type updateReportSunshineReportedContentListMutation = { __typename?: 'Mutation', updateReport: { __typename?: 'ReportOutput', data: (
      { __typename?: 'Report' }
      & UnclaimedReportsList
    ) | null } | null };

export type multiModerationTemplateSunshineSendMessageWithDefaultsQueryQueryVariables = Exact<{
  selector?: InputMaybe<ModerationTemplateSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiModerationTemplateSunshineSendMessageWithDefaultsQueryQuery = { __typename?: 'Query', moderationTemplates: { __typename?: 'MultiModerationTemplateOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ModerationTemplate' }
      & ModerationTemplateFragment
    )> } | null };

export type multiConversationSunshineUserMessagesQueryQueryVariables = Exact<{
  selector?: InputMaybe<ConversationSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiConversationSunshineUserMessagesQueryQuery = { __typename?: 'Query', conversations: { __typename?: 'MultiConversationOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Conversation' }
      & ConversationsList
    )> } | null };

export type multiUserRateLimitUserRateLimitItemQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserRateLimitSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserRateLimitUserRateLimitItemQueryQuery = { __typename?: 'Query', userRateLimits: { __typename?: 'MultiUserRateLimitOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserRateLimit' }
      & UserRateLimitDisplay
    )> } | null };

export type updateUserRateLimitUserRateLimitItem1MutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserRateLimitDataInput;
}>;


export type updateUserRateLimitUserRateLimitItem1Mutation = { __typename?: 'Mutation', updateUserRateLimit: { __typename?: 'UserRateLimitOutput', data: (
      { __typename?: 'UserRateLimit' }
      & UserRateLimitMutationFragment
    ) | null } | null };

export type updateUserRateLimitUserRateLimitItemMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserRateLimitDataInput;
}>;


export type updateUserRateLimitUserRateLimitItemMutation = { __typename?: 'Mutation', updateUserRateLimit: { __typename?: 'UserRateLimitOutput', data: (
      { __typename?: 'UserRateLimit' }
      & UserRateLimitDisplay
    ) | null } | null };

export type createUserRateLimitUserRateLimitItem1MutationVariables = Exact<{
  data: CreateUserRateLimitDataInput;
}>;


export type createUserRateLimitUserRateLimitItem1Mutation = { __typename?: 'Mutation', createUserRateLimit: { __typename?: 'UserRateLimitOutput', data: (
      { __typename?: 'UserRateLimit' }
      & UserRateLimitMutationFragment
    ) | null } | null };

export type createUserRateLimitUserRateLimitItemMutationVariables = Exact<{
  data: CreateUserRateLimitDataInput;
}>;


export type createUserRateLimitUserRateLimitItemMutation = { __typename?: 'Mutation', createUserRateLimit: { __typename?: 'UserRateLimitOutput', data: (
      { __typename?: 'UserRateLimit' }
      & UserRateLimitDisplay
    ) | null } | null };

export type multiCommentUsersReviewInfoCardQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentUsersReviewInfoCardQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type DeletedCommentsModerationLogQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type DeletedCommentsModerationLogQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & DeletedCommentsModerationLog
    )> } | null };

export type UsersBannedFromPostsModerationLogQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type UsersBannedFromPostsModerationLogQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & UsersBannedFromPostsModerationLog
    )> } | null };

export type UsersBannedFromUsersModerationLogQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type UsersBannedFromUsersModerationLogQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersBannedFromUsersModerationLog
    )> } | null };

export type ModeratorActionModerationLogQueryQueryVariables = Exact<{
  selector?: InputMaybe<ModeratorActionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type ModeratorActionModerationLogQueryQuery = { __typename?: 'Query', moderatorActions: { __typename?: 'MultiModeratorActionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'ModeratorAction' }
      & ModeratorActionDisplay
    )> } | null };

export type UserRateLimitModerationLogQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserRateLimitSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type UserRateLimitModerationLogQueryQuery = { __typename?: 'Query', userRateLimits: { __typename?: 'MultiUserRateLimitOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserRateLimit' }
      & UserRateLimitDisplay
    )> } | null };

export type multiCommentRejectedCommentsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentRejectedCommentsListQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    )> } | null };

export type multiSurveyScheduleSurveyAdminPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<SurveyScheduleSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSurveyScheduleSurveyAdminPageQueryQuery = { __typename?: 'Query', surveySchedules: { __typename?: 'MultiSurveyScheduleOutput', totalCount: number | null, results: Array<(
      { __typename?: 'SurveySchedule' }
      & SurveyScheduleEdit
    )> } | null };

export type multiSurveySurveyAdminPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<SurveySelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSurveySurveyAdminPageQueryQuery = { __typename?: 'Query', surveys: { __typename?: 'MultiSurveyOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Survey' }
      & SurveyMinimumInfo
    )> } | null };

export type createSurveySurveyAdminPageMutationVariables = Exact<{
  data: CreateSurveyDataInput;
}>;


export type createSurveySurveyAdminPageMutation = { __typename?: 'Mutation', createSurvey: { __typename?: 'SurveyOutput', data: (
      { __typename?: 'Survey' }
      & SurveyMinimumInfo
    ) | null } | null };

export type SurveyEditPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SurveyEditPageQuery = { __typename?: 'Query', survey: { __typename?: 'SingleSurveyOutput', result: (
      { __typename?: 'Survey' }
      & SurveyMinimumInfo
    ) | null } | null };

export type editSurveyMutationVariables = Exact<{
  surveyId: Scalars['String']['input'];
  name: Scalars['String']['input'];
  questions: Array<SurveyQuestionInfo> | SurveyQuestionInfo;
}>;


export type editSurveyMutation = { __typename?: 'Mutation', editSurvey: (
    { __typename?: 'Survey' }
    & SurveyMinimumInfo
  ) | null };

export type createSurveyResponseSurveyPostsItemMutationVariables = Exact<{
  data: CreateSurveyResponseDataInput;
}>;


export type createSurveyResponseSurveyPostsItemMutation = { __typename?: 'Mutation', createSurveyResponse: { __typename?: 'SurveyResponseOutput', data: (
      { __typename?: 'SurveyResponse' }
      & SurveyResponseMinimumInfo
    ) | null } | null };

export type updateSurveyScheduleSurveyScheduleEditPageMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateSurveyScheduleDataInput;
}>;


export type updateSurveyScheduleSurveyScheduleEditPageMutation = { __typename?: 'Mutation', updateSurveySchedule: { __typename?: 'SurveyScheduleOutput', data: (
      { __typename?: 'SurveySchedule' }
      & SurveyScheduleEdit
    ) | null } | null };

export type createSurveyScheduleSurveyScheduleEditPageMutationVariables = Exact<{
  data: CreateSurveyScheduleDataInput;
}>;


export type createSurveyScheduleSurveyScheduleEditPageMutation = { __typename?: 'Mutation', createSurveySchedule: { __typename?: 'SurveyScheduleOutput', data: (
      { __typename?: 'SurveySchedule' }
      & SurveyScheduleEdit
    ) | null } | null };

export type SurveyScheduleEditPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SurveyScheduleEditPageQuery = { __typename?: 'Query', surveySchedule: { __typename?: 'SingleSurveyScheduleOutput', result: (
      { __typename?: 'SurveySchedule' }
      & SurveyScheduleEdit
    ) | null } | null };

export type addPostsToTagMutationVariables = Exact<{
  tagId?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type addPostsToTagMutation = { __typename?: 'Mutation', addOrUpvoteTag: (
    { __typename?: 'TagRel' }
    & TagRelCreationFragment
  ) | null };

export type AllPostsPageTagRevisionItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type AllPostsPageTagRevisionItemQuery = { __typename?: 'Query', revision: { __typename?: 'SingleRevisionOutput', result: (
      { __typename?: 'Revision' }
      & RevisionHistoryEntry
    ) | null } | null };

export type multiTagAllTagsAlphabeticalQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagAllTagsAlphabeticalQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagPreviewFragment
    )> } | null };

export type AllWikiTagsPageQueryQueryVariables = Exact<{
  slugs: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type AllWikiTagsPageQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & ConceptItemFragment
    )> } | null };

export type multiTagArbitalExplorePageQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type multiTagArbitalExplorePageQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & ExplorePageTagFragment
    )> } | null };

export type multiTagCoreTagsChecklistQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagCoreTagsChecklistQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagFragment
    )> } | null };

export type multiTagCoreTagsSectionQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagCoreTagsSectionQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagDetailsFragment
    )> } | null };

export type EAAllTagsPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EAAllTagsPageQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type multiTagEATagPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagEATagPageQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    )> } | null };

export type EATagPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EATagPageQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type FilterModeQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type FilterModeQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagPreviewFragment
    ) | null } | null };

export type multiTagRelFooterTagListQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagRelSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagRelFooterTagListQueryQuery = { __typename?: 'Query', tagRels: { __typename?: 'MultiTagRelOutput', totalCount: number | null, results: Array<(
      { __typename?: 'TagRel' }
      & TagRelMinimumFragment
    )> } | null };

export type addOrUpvoteTagMutationVariables = Exact<{
  tagId?: InputMaybe<Scalars['String']['input']>;
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type addOrUpvoteTagMutation = { __typename?: 'Mutation', addOrUpvoteTag: (
    { __typename?: 'TagRel' }
    & TagRelMinimumFragment
  ) | null };

export type multiTagLWTagPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagLWTagPageQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    )> } | null };

export type LWTagPageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LWTagPageQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type updateTagNewTagPageMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagDataInput;
}>;


export type updateTagNewTagPageMutation = { __typename?: 'Mutation', updateTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type multiTagNewTagsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagNewTagsListQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & SunshineTagFragment
    )> } | null };

export type getRandomTagQueryVariables = Exact<{ [key: string]: never; }>;


export type getRandomTagQuery = { __typename?: 'Query', RandomTag: { __typename?: 'Tag', slug: string } };

export type multiMultiDocumentRedlinkTagPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<MultiDocumentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiMultiDocumentRedlinkTagPageQueryQuery = { __typename?: 'Query', multiDocuments: { __typename?: 'MultiMultiDocumentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'MultiDocument' }
      & MultiDocumentMinimumInfo
    )> } | null };

export type multiTagRedlinkTagPageQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagRedlinkTagPageQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagBasicInfo
    )> } | null };

export type multiSubscriptionSubscribeButtonQueryQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSubscriptionSubscribeButtonQueryQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Subscription' }
      & SubscriptionState
    )> } | null };

export type createSubscriptionSubscribeButtonMutationVariables = Exact<{
  data: CreateSubscriptionDataInput;
}>;


export type createSubscriptionSubscribeButtonMutation = { __typename?: 'Mutation', createSubscription: { __typename?: 'SubscriptionOutput', data: (
      { __typename?: 'Subscription' }
      & SubscriptionState
    ) | null } | null };

export type multiMultiDocumentSummariesEditFormQueryQueryVariables = Exact<{
  selector?: InputMaybe<MultiDocumentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiMultiDocumentSummariesEditFormQueryQuery = { __typename?: 'Query', multiDocuments: { __typename?: 'MultiMultiDocumentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    )> } | null };

export type reorderSummariesMutationVariables = Exact<{
  parentDocumentId: Scalars['String']['input'];
  parentDocumentCollectionName: Scalars['String']['input'];
  summaryIds: Array<Scalars['String']['input']> | Scalars['String']['input'];
}>;


export type reorderSummariesMutation = { __typename?: 'Mutation', reorderSummaries: boolean | null };

export type updateMultiDocumentSummaryFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateMultiDocumentDataInput;
}>;


export type updateMultiDocumentSummaryFormMutation = { __typename?: 'Mutation', updateMultiDocument: { __typename?: 'MultiDocumentOutput', data: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    ) | null } | null };

export type createMultiDocumentSummaryFormMutationVariables = Exact<{
  data: CreateMultiDocumentDataInput;
}>;


export type createMultiDocumentSummaryFormMutation = { __typename?: 'Mutation', createMultiDocument: { __typename?: 'MultiDocumentOutput', data: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    ) | null } | null };

export type multiRevisionTagCompareRevisionsQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionTagCompareRevisionsQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionHistoryEntry
    )> } | null };

export type TagContributorsListQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagContributorsListQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagFullContributorsList
    ) | null } | null };

export type multiCommentTagDiscussionQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentTagDiscussionQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiCommentTagDiscussionButtonQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentTagDiscussionButtonQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiCommentTagDiscussionSectionQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentTagDiscussionSectionQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type multiRevisionTagEditsByUserQueryQueryVariables = Exact<{
  selector?: InputMaybe<RevisionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiRevisionTagEditsByUserQueryQuery = { __typename?: 'Query', revisions: { __typename?: 'MultiRevisionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Revision' }
      & RevisionTagFragment
    )> } | null };

export type getTagUpdatesQueryVariables = Exact<{
  before: Scalars['Date']['input'];
  after: Scalars['Date']['input'];
}>;


export type getTagUpdatesQuery = { __typename?: 'Query', TagUpdatesInTimeBlock: Array<{ __typename?: 'TagUpdates', revisionIds: Array<string>, commentCount: number, commentIds: Array<string>, lastRevisedAt: string | null, lastCommentedAt: string | null, added: number, removed: number, tag: (
      { __typename?: 'Tag' }
      & TagHistoryFragment
    ), users: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )>, documentDeletions: Array<{ __typename?: 'DocumentDeletion', userId: string | null, documentId: string, netChange: DocumentDeletionNetChange, type: MultiDocumentType | null, createdAt: string, docFields: { __typename?: 'MultiDocument', _id: string, slug: string, tabTitle: string, tabSubtitle: string | null } | null }> }> };

export type updateTagFlagTagFlagEditAndNewFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagFlagDataInput;
}>;


export type updateTagFlagTagFlagEditAndNewFormMutation = { __typename?: 'Mutation', updateTagFlag: { __typename?: 'TagFlagOutput', data: (
      { __typename?: 'TagFlag' }
      & TagFlagFragment
    ) | null } | null };

export type createTagFlagTagFlagEditAndNewFormMutationVariables = Exact<{
  data: CreateTagFlagDataInput;
}>;


export type createTagFlagTagFlagEditAndNewFormMutation = { __typename?: 'Mutation', createTagFlag: { __typename?: 'TagFlagOutput', data: (
      { __typename?: 'TagFlag' }
      & TagFlagFragment
    ) | null } | null };

export type multiTagTagFlagItemQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagTagFlagItemQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    )> } | null };

export type TagFlagItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagFlagItemQuery = { __typename?: 'Query', tagFlag: { __typename?: 'SingleTagFlagOutput', result: (
      { __typename?: 'TagFlag' }
      & TagFlagFragment
    ) | null } | null };

export type updateTagTagFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagDataInput;
}>;


export type updateTagTagFormMutation = { __typename?: 'Mutation', updateTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    ) | null } | null };

export type createTagTagFormMutationVariables = Exact<{
  data: CreateTagDataInput;
}>;


export type createTagTagFormMutation = { __typename?: 'Mutation', createTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    ) | null } | null };

export type multiChapterTagIntroSequenceQueryQueryVariables = Exact<{
  selector?: InputMaybe<ChapterSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiChapterTagIntroSequenceQueryQuery = { __typename?: 'Query', chapters: { __typename?: 'MultiChapterOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Chapter' }
      & ChaptersFragment
    )> } | null };

export type TagMergePageQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagMergePageQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagFragment
    ) | null } | null };

export type mergeTagsMutationVariables = Exact<{
  sourceTagId: Scalars['String']['input'];
  targetTagId: Scalars['String']['input'];
  transferSubtags: Scalars['Boolean']['input'];
  redirectSource: Scalars['Boolean']['input'];
}>;


export type mergeTagsMutation = { __typename?: 'Mutation', mergeTags: boolean | null };

export type promoteLensToMainMutationVariables = Exact<{
  lensId: Scalars['String']['input'];
}>;


export type promoteLensToMainMutation = { __typename?: 'Mutation', promoteLensToMain: boolean | null };

export type multiPostTagPreviewQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostTagPreviewQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type TagSearchHitQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagSearchHitQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagPreviewFragment
    ) | null } | null };

export type multiVoteTagVoteActivityQueryQueryVariables = Exact<{
  selector?: InputMaybe<VoteSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiVoteTagVoteActivityQueryQuery = { __typename?: 'Query', votes: { __typename?: 'MultiVoteOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Vote' }
      & TagVotingActivity
    )> } | null };

export type multiTagFlagTaggingDashboardQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagFlagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagFlagTaggingDashboardQueryQuery = { __typename?: 'Query', tagFlags: { __typename?: 'MultiTagFlagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'TagFlag' }
      & TagFlagFragment
    )> } | null };

export type multiTagTaggingDashboardQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagTaggingDashboardQueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    )> } | null };

export type TaggingDashboardQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TaggingDashboardQuery = { __typename?: 'Query', tagFlag: { __typename?: 'SingleTagFlagOutput', result: (
      { __typename?: 'TagFlag' }
      & TagFlagEditFragment
    ) | null } | null };

export type multiTagRelTagsDetailsItemQueryQueryVariables = Exact<{
  selector?: InputMaybe<TagRelSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagRelTagsDetailsItemQueryQuery = { __typename?: 'Query', tagRels: { __typename?: 'MultiTagRelOutput', totalCount: number | null, results: Array<(
      { __typename?: 'TagRel' }
      & TagRelFragment
    )> } | null };

export type TagsDetailsItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagsDetailsItemQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type GetTagsByCoreTagIdQueryVariables = Exact<{
  coreTagId?: InputMaybe<Scalars['String']['input']>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  searchTagIds?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>> | InputMaybe<Scalars['String']['input']>>;
}>;


export type GetTagsByCoreTagIdQuery = { __typename?: 'Query', TagsByCoreTagId: { __typename?: 'TagWithTotalCount', totalCount: number, tags: Array<(
      { __typename?: 'Tag' }
      & ConceptItemFragment
    )> } };

export type updateMultiDocumentLensFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateMultiDocumentDataInput;
}>;


export type updateMultiDocumentLensFormMutation = { __typename?: 'Mutation', updateMultiDocument: { __typename?: 'MultiDocumentOutput', data: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentEdit
    ) | null } | null };

export type createMultiDocumentLensFormMutationVariables = Exact<{
  data: CreateMultiDocumentDataInput;
}>;


export type createMultiDocumentLensFormMutation = { __typename?: 'Mutation', createMultiDocument: { __typename?: 'MultiDocumentOutput', data: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentEdit
    ) | null } | null };

export type multiUserSidebarMembersBoxQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserSidebarMembersBoxQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type updateTagSidebarSubtagsBoxMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateTagDataInput;
}>;


export type updateTagSidebarSubtagsBoxMutation = { __typename?: 'Mutation', updateTag: { __typename?: 'TagOutput', data: (
      { __typename?: 'Tag' }
      & TagBasicInfo
    ) | null } | null };

export type SidebarSubtagsBoxQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SidebarSubtagsBoxQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagSubtagFragment
    ) | null } | null };

export type multiUserSubforumMembersDialogQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserSubforumMembersDialogQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type updateUserTagRelSubforumSubforumTabMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserTagRelDataInput;
}>;


export type updateUserTagRelSubforumSubforumTabMutation = { __typename?: 'Mutation', updateUserTagRel: { __typename?: 'UserTagRelOutput', data: (
      { __typename?: 'UserTagRel' }
      & UserTagRelDetails
    ) | null } | null };

export type UserUpdateSubforumMembershipMutationVariables = Exact<{
  tagId: Scalars['String']['input'];
  member: Scalars['Boolean']['input'];
}>;


export type UserUpdateSubforumMembershipMutation = { __typename?: 'Mutation', UserUpdateSubforumMembership: (
    { __typename?: 'User' }
    & UsersCurrent
  ) | null };

export type SubforumWikiTabQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SubforumWikiTabQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagEditFragment
    ) | null } | null };

export type multiUserTagRelTagSubforumPage2QueryQueryVariables = Exact<{
  selector?: InputMaybe<UserTagRelSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserTagRelTagSubforumPage2QueryQuery = { __typename?: 'Query', userTagRels: { __typename?: 'MultiUserTagRelOutput', totalCount: number | null, results: Array<(
      { __typename?: 'UserTagRel' }
      & UserTagRelDetails
    )> } | null };

export type multiTagTagSubforumPage2QueryQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiTagTagSubforumPage2QueryQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Tag' }
      & TagWithFlagsFragment
    )> } | null };

export type createUserTagRelTagSubforumPage2MutationVariables = Exact<{
  data: CreateUserTagRelDataInput;
}>;


export type createUserTagRelTagSubforumPage2Mutation = { __typename?: 'Mutation', createUserTagRel: { __typename?: 'UserTagRelOutput', data: (
      { __typename?: 'UserTagRel' }
      & UserTagRelDetails
    ) | null } | null };

export type tagBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagFragment
    )> } | null };

export type tagBasicInfoBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagBasicInfoBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagBasicInfo
    )> } | null };

export type allTagsPageBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type allTagsPageBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & AllTagsPageFragment
    )> } | null };

export type tagPageBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagPageBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPageFragment
    )> } | null };

export type tagPageWithRevisionBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagPageWithRevisionBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPageWithRevisionFragment
    )> } | null };

export type tagEditBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagEditBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagEditFragment
    )> } | null };

export type tagHistoryBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagHistoryBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagHistoryFragment
    )> } | null };

export type tagPageWithArbitalContentBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagPageWithArbitalContentBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPageWithArbitalContentFragment
    )> } | null };

export type tagPageRevisionWithArbitalContentBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type tagPageRevisionWithArbitalContentBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPageRevisionWithArbitalContentFragment
    )> } | null };

export type tagPageWithArbitalContentAndLensRevisionBySlugQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
  contributorsLimit?: InputMaybe<Scalars['Int']['input']>;
  lensSlug?: InputMaybe<Scalars['String']['input']>;
}>;


export type tagPageWithArbitalContentAndLensRevisionBySlugQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPageWithArbitalContentAndLensRevisionFragment
    )> } | null };

export type getTagOrLensPreviewQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type getTagOrLensPreviewQuery = { __typename?: 'Query', TagPreview: { __typename?: 'TagPreviewWithSummaries', tag: (
      { __typename?: 'Tag' }
      & TagPreviewFragment
    ), lens: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    ) | null, summaries: Array<(
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    )> } | null };

export type getTagOrLensSectionPreviewQueryVariables = Exact<{
  slug: Scalars['String']['input'];
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type getTagOrLensSectionPreviewQuery = { __typename?: 'Query', TagPreview: { __typename?: 'TagPreviewWithSummaries', tag: (
      { __typename?: 'Tag' }
      & TagSectionPreviewFragment
    ), lens: (
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    ) | null, summaries: Array<(
      { __typename?: 'MultiDocument' }
      & MultiDocumentContentDisplay
    )> } | null };

export type getTagPreviewQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type getTagPreviewQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagPreviewFragment
    )> } | null };

export type getTagSectionPreviewQueryVariables = Exact<{
  selector?: InputMaybe<TagSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  hash?: InputMaybe<Scalars['String']['input']>;
}>;


export type getTagSectionPreviewQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<(
      { __typename?: 'Tag' }
      & TagSectionPreviewFragment
    )> } | null };

export type LocalgroupPageTitleQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type LocalgroupPageTitleQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsBase
    ) | null } | null };

export type PostsPageHeaderTitleQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostsPageHeaderTitleQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsBase
    ) | null } | null };

export type SequencesPageTitleQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type SequencesPageTitleQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageTitleFragment
    ) | null } | null };

export type multiUserUserPageTitleQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserUserPageTitleQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type SingleCommentForFeedbackQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SingleCommentForFeedbackQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & UltraFeedComment
    ) | null } | null };

export type multiCommentUltraFeedPostDialogQueryQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiCommentUltraFeedPostDialogQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment' }
      & CommentsList
    )> } | null };

export type UltraFeedPostDialogQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type UltraFeedPostDialogQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & UltraFeedPostFragment
    ) | null } | null };

export type UltraFeedTargetCommentQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type UltraFeedTargetCommentQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentWithRepliesFragment
    ) | null } | null };

export type LocalPostQueryQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type LocalPostQueryQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & UltraFeedPostFragment
    ) | null } | null };

export type UserRecentPostsForCompactCardQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type UserRecentPostsForCompactCardQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type UltraFeedThreadItemQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type UltraFeedThreadItemQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null } | null };

export type createUltraFeedEventMutationVariables = Exact<{
  data: CreateUltraFeedEventDataInput;
}>;


export type createUltraFeedEventMutation = { __typename?: 'Mutation', createUltraFeedEvent: { __typename?: 'UltraFeedEventOutput', data: { __typename?: 'UltraFeedEvent', _id: string } | null } | null };

export type updateUltraFeedEventMutationVariables = Exact<{
  selector: Scalars['String']['input'];
  data: UpdateUltraFeedEventDataInput;
}>;


export type updateUltraFeedEventMutation = { __typename?: 'Mutation', updateUltraFeedEvent: { __typename?: 'UltraFeedEventOutput', data: { __typename?: 'UltraFeedEvent', _id: string } | null } | null };

export type connectCrossposterMutationVariables = Exact<{
  token?: InputMaybe<Scalars['String']['input']>;
}>;


export type connectCrossposterMutation = { __typename?: 'Mutation', connectCrossposter: string | null };

export type updateUserEditProfileFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserEditProfileFormMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type EditProfileFormQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EditProfileFormQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersProfileEdit
    ) | null } | null };

export type EditProfileFormGetUserBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type EditProfileFormGetUserBySlugQuery = { __typename?: 'Query', GetUserBySlug: (
    { __typename?: 'User' }
    & UsersProfileEdit
  ) | null };

export type useEmailTokenMutationVariables = Exact<{
  token?: InputMaybe<Scalars['String']['input']>;
}>;


export type useEmailTokenMutation = { __typename?: 'Mutation', useEmailToken: any | null };

export type sendEventTriggeredDMMutationVariables = Exact<{
  eventType: Scalars['String']['input'];
}>;


export type sendEventTriggeredDMMutation = { __typename?: 'Mutation', sendEventTriggeredDM: boolean };

export type multiPostFriendlyUsersProfileQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostFriendlyUsersProfileQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsMinimumInfo
    )> } | null };

export type multiLocalgroupFriendlyUsersProfileQueryQueryVariables = Exact<{
  selector?: InputMaybe<LocalgroupSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiLocalgroupFriendlyUsersProfileQueryQuery = { __typename?: 'Query', localgroups: { __typename?: 'MultiLocalgroupOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Localgroup' }
      & localGroupsHomeFragment
    )> } | null };

export type multiUserFriendlyUsersProfileQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserFriendlyUsersProfileQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User', profileTags: Array<(
        { __typename?: 'Tag' }
        & TagPreviewFragment
      )>, organizerOfGroups: Array<(
        { __typename?: 'Localgroup' }
        & localGroupsBase
      )> }
      & UsersProfile
    )> } | null };

export type multiPostLWUserTooltipContentQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiPostLWUserTooltipContentQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsList
    )> } | null };

export type TopKarmaUsersQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type TopKarmaUsersQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersMinimumInfo
    )> } | null };

export type AirtableLeaderboardsQueryVariables = Exact<{ [key: string]: never; }>;


export type AirtableLeaderboardsQuery = { __typename?: 'Query', AirtableLeaderboards: Array<{ __typename?: 'AirtableLeaderboardResult', name: string, leaderboardAmount: number | null }> };

export type getNetKarmaChangesForAuthorsOverPeriodQueryVariables = Exact<{
  days: Scalars['Int']['input'];
  limit: Scalars['Int']['input'];
}>;


export type getNetKarmaChangesForAuthorsOverPeriodQuery = { __typename?: 'Query', NetKarmaChangesForAuthorsOverPeriod: Array<{ __typename?: 'NetKarmaChangesForAuthorsOverPeriod', userId: string | null, netKarma: number | null }> };

export type loginMutationVariables = Exact<{
  username?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
}>;


export type loginMutation = { __typename?: 'Mutation', login: { __typename?: 'LoginReturnData', token: string | null } | null };

export type signupMutationVariables = Exact<{
  email?: InputMaybe<Scalars['String']['input']>;
  username?: InputMaybe<Scalars['String']['input']>;
  password?: InputMaybe<Scalars['String']['input']>;
  subscribeToCurated?: InputMaybe<Scalars['Boolean']['input']>;
  reCaptchaToken?: InputMaybe<Scalars['String']['input']>;
  abTestKey?: InputMaybe<Scalars['String']['input']>;
}>;


export type signupMutation = { __typename?: 'Mutation', signup: { __typename?: 'LoginReturnData', token: string | null } | null };

export type resetPasswordMutationVariables = Exact<{
  email?: InputMaybe<Scalars['String']['input']>;
}>;


export type resetPasswordMutation = { __typename?: 'Mutation', resetPassword: string | null };

export type usePasswordResetEmailTokenMutationVariables = Exact<{
  token?: InputMaybe<Scalars['String']['input']>;
  args?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type usePasswordResetEmailTokenMutation = { __typename?: 'Mutation', useEmailToken: any | null };

export type multiSubscriptionSubscriptionsListQueryQueryVariables = Exact<{
  selector?: InputMaybe<SubscriptionSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiSubscriptionSubscriptionsListQueryQuery = { __typename?: 'Query', subscriptions: { __typename?: 'MultiSubscriptionOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Subscription' }
      & SubscriptionState
    )> } | null };

export type UserContentFeedPostsQueryVariables = Exact<{
  userId: Scalars['String']['input'];
  limit: Scalars['Int']['input'];
  sortedBy: Scalars['String']['input'];
}>;


export type UserContentFeedPostsQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsListWithVotes
    )> } | null };

export type UserContentFeedCommentsQueryVariables = Exact<{
  userId: Scalars['String']['input'];
  limit: Scalars['Int']['input'];
  sortBy: Scalars['String']['input'];
}>;


export type UserContentFeedCommentsQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Comment', post: (
        { __typename?: 'Post' }
        & PostsListWithVotes
      ) | null, topLevelComment: (
        { __typename?: 'Comment' }
        & CommentsListWithTopLevelComment
      ) | null }
      & CommentsList
    )> } | null };

export type UserContentFeedThreadQueryVariables = Exact<{
  topLevelCommentId: Scalars['String']['input'];
  limit?: InputMaybe<Scalars['Int']['input']>;
}>;


export type UserContentFeedThreadQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & UltraFeedComment
    )> } | null };

export type UsersNameWrapperQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type UsersNameWrapperQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type multiUserUsersProfileQueryQueryVariables = Exact<{
  selector?: InputMaybe<UserSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
}>;


export type multiUserUsersProfileQueryQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', totalCount: number | null, results: Array<(
      { __typename?: 'User' }
      & UsersProfile
    )> } | null };

export type updateUserDeactivateAccountSectionMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserDeactivateAccountSectionMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type updateUserDeleteAccountSectionMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserDeleteAccountSectionMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type UsersAccountManagementGetUserBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type UsersAccountManagementGetUserBySlugQuery = { __typename?: 'Query', GetUserBySlug: (
    { __typename?: 'User' }
    & UsersEdit
  ) | null };

export type updateUserUsersEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserUsersEditFormMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersEdit
    ) | null } | null };

export type UsersEditFormGetUserBySlugQueryVariables = Exact<{
  slug: Scalars['String']['input'];
}>;


export type UsersEditFormGetUserBySlugQuery = { __typename?: 'Query', GetUserBySlug: (
    { __typename?: 'User' }
    & UsersEdit
  ) | null };

export type KarmaChangeNotifierQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type KarmaChangeNotifierQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UserKarmaChanges
    ) | null } | null };

export type SubscribedUserQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedUserQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type SubscribedPostQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedPostQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type SubscribedCommentQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedCommentQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type SubscribedLocalgroupQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedLocalgroupQuery = { __typename?: 'Query', localgroup: { __typename?: 'SingleLocalgroupOutput', result: (
      { __typename?: 'Localgroup' }
      & localGroupsBase
    ) | null } | null };

export type SubscribedTagQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedTagQuery = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagPreviewFragment
    ) | null } | null };

export type SubscribedSequenceQueryVariables = Exact<{
  documentId: Scalars['String']['input'];
}>;


export type SubscribedSequenceQuery = { __typename?: 'Query', sequence: { __typename?: 'SingleSequenceOutput', result: (
      { __typename?: 'Sequence' }
      & SequencesPageTitleFragment
    ) | null } | null };

export type updateUserReactionsPaletteMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateUserDataInput;
}>;


export type updateUserReactionsPaletteMutation = { __typename?: 'Mutation', updateUser: { __typename?: 'UserOutput', data: (
      { __typename?: 'User' }
      & UsersCurrent
    ) | null } | null };

export type performVoteCommentMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteCommentMutation = { __typename?: 'Mutation', performVoteComment: { __typename?: 'VoteResultComment', showVotingPatternWarning: boolean, document: (
      { __typename?: 'Comment' }
      & WithVoteComment
    ) } | null };

export type performVotePostMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVotePostMutation = { __typename?: 'Mutation', performVotePost: { __typename?: 'VoteResultPost', showVotingPatternWarning: boolean, document: (
      { __typename?: 'Post' }
      & WithVotePost
    ) } | null };

export type performVoteTagRelMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteTagRelMutation = { __typename?: 'Mutation', performVoteTagRel: { __typename?: 'VoteResultTagRel', showVotingPatternWarning: boolean, document: (
      { __typename?: 'TagRel' }
      & WithVoteTagRel
    ) } | null };

export type performVoteRevisionMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteRevisionMutation = { __typename?: 'Mutation', performVoteRevision: { __typename?: 'VoteResultRevision', showVotingPatternWarning: boolean, document: (
      { __typename?: 'Revision' }
      & WithVoteRevision
    ) } | null };

export type performVoteElectionCandidateMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteElectionCandidateMutation = { __typename?: 'Mutation', performVoteElectionCandidate: { __typename?: 'VoteResultElectionCandidate', showVotingPatternWarning: boolean, document: (
      { __typename?: 'ElectionCandidate' }
      & WithVoteElectionCandidate
    ) } | null };

export type performVoteTagMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteTagMutation = { __typename?: 'Mutation', performVoteTag: { __typename?: 'VoteResultTag', showVotingPatternWarning: boolean, document: (
      { __typename?: 'Tag' }
      & WithVoteTag
    ) } | null };

export type performVoteMultiDocumentMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteMultiDocumentMutation = { __typename?: 'Mutation', performVoteMultiDocument: { __typename?: 'VoteResultMultiDocument', showVotingPatternWarning: boolean, document: (
      { __typename?: 'MultiDocument' }
      & WithVoteMultiDocument
    ) } | null };

export type performVoteMessageMutationVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  voteType?: InputMaybe<Scalars['String']['input']>;
  extendedVote?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type performVoteMessageMutation = { __typename?: 'Mutation', performVoteMessage: { __typename?: 'VoteResultMessage', showVotingPatternWarning: boolean, document: (
      { __typename?: 'Message' }
      & WithVoteMessage
    ) } | null };

export type emailstestsQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type emailstestsQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsRevision
    ) | null } | null };

export type updateCommentCommentsNewFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdateCommentDataInput;
}>;


export type updateCommentCommentsNewFormMutation = { __typename?: 'Mutation', updateComment: { __typename?: 'CommentOutput', data: (
      { __typename?: 'Comment' }
      & SuggestAlignmentComment
    ) | null } | null };

export type updatePostPostsEditFormMutationVariables = Exact<{
  selector: SelectorInput;
  data: UpdatePostDataInput;
}>;


export type updatePostPostsEditFormMutation = { __typename?: 'Mutation', updatePost: { __typename?: 'PostOutput', data: (
      { __typename?: 'Post' }
      & SuggestAlignmentPost
    ) | null } | null };

export type AutomatedContentEvaluationsFragment = { __typename?: 'AutomatedContentEvaluation', _id: string, score: number | null, aiChoice: string | null, aiReasoning: string | null, aiCoT: string | null, sentenceScores: Array<{ __typename?: 'SentenceScore', sentence: string, score: number }> | null };

export type BookmarksMinimumInfoFragment = { __typename?: 'Bookmark', _id: string, active: boolean };

export type BookmarksWithDocumentFragment = (
  { __typename?: 'Bookmark', post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null }
  & BookmarksMinimumInfoFragment
);

export type BookmarksFeedItemFragment = (
  { __typename?: 'Bookmark', collectionName: string, lastUpdated: string, post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null, comment: (
    { __typename?: 'Comment' }
    & UltraFeedComment
  ) | null }
  & BookmarksMinimumInfoFragment
);

export type BookPageFragment = { __typename?: 'Book', _id: string, createdAt: string, title: string | null, number: number | null, subtitle: string | null, tocTitle: string | null, sequenceIds: Array<string>, postIds: Array<string>, collectionId: string, displaySequencesAsGrid: boolean | null, hideProgressBar: boolean | null, showChapters: boolean | null, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, sequences: Array<(
    { __typename?: 'Sequence' }
    & SequencesPageWithChaptersFragment
  )>, posts: Array<(
    { __typename?: 'Post' }
    & PostsListWithVotes
  )> };

export type BookEdit = (
  { __typename?: 'Book', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & BookPageFragment
);

export type ChaptersFragment = { __typename?: 'Chapter', _id: string, createdAt: string, title: string | null, subtitle: string | null, number: number | null, sequenceId: string | null, postIds: Array<string>, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, posts: Array<(
    { __typename?: 'Post' }
    & PostsListWithVotes
  )> };

export type ChaptersEdit = (
  { __typename?: 'Chapter', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & ChaptersFragment
);

export type CkEditorUserSessionInfo = { __typename?: 'CkEditorUserSession', _id: string, userId: string | null, documentId: string | null, endedAt: string | null, endedBy: string | null };

export type ModeratorClientIDInfo = { __typename?: 'ClientId', _id: string, clientId: string | null, createdAt: string | null, firstSeenReferrer: string | null, firstSeenLandingPage: string | null, users: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> | null };

export type CollectionContinueReadingFragment = { __typename?: 'Collection', _id: string, title: string, slug: string, gridImageId: string | null };

export type CollectionsPageFragment = { __typename?: 'Collection', _id: string, createdAt: string, slug: string, userId: string, title: string, firstPageLink: string, gridImageId: string | null, hideStartReadingButton: boolean | null, noindex: boolean, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, books: Array<(
    { __typename?: 'Book' }
    & BookPageFragment
  )> };

export type CollectionsEditFragment = (
  { __typename?: 'Collection', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & CollectionsPageFragment
);

export type CollectionsBestOfFragment = { __typename?: 'Collection', _id: string, createdAt: string, slug: string, userId: string, title: string, gridImageId: string | null, noindex: boolean, postsCount: number, readPostsCount: number, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null };

export type CommentsList = { __typename?: 'Comment', _id: string, postId: string | null, tagId: string | null, relevantTagIds: Array<string>, tagCommentType: TagCommentType, parentCommentId: string | null, topLevelCommentId: string | null, descendentCount: number, title: string | null, postedAt: string, lastEditedAt: string | null, repliesBlockedUntil: string | null, userId: string | null, draft: boolean, deleted: boolean, deletedPublic: boolean, deletedByUserId: string | null, deletedReason: string | null, hideAuthor: boolean, authorIsUnreviewed: boolean, currentUserVote: string | null, currentUserExtendedVote: any | null, baseScore: number | null, extendedScore: any | null, score: number, voteCount: number, emojiReactors: any | null, af: boolean, afDate: string | null, moveToAlignmentUserId: string | null, afBaseScore: number | null, afExtendedScore: any | null, suggestForAlignmentUserIds: Array<string>, reviewForAlignmentUserId: string | null, needsReview: boolean | null, answer: boolean, parentAnswerId: string | null, retracted: boolean, postVersion: string | null, reviewedByUserId: string | null, shortform: boolean | null, shortformFrontpage: boolean, lastSubthreadActivity: string | null, moderatorHat: boolean, hideModeratorHat: boolean | null, nominatedForReview: string | null, reviewingForReview: string | null, promoted: boolean | null, directChildrenCount: number, votingSystem: string, isPinnedOnProfile: boolean, debateResponse: boolean | null, rejected: boolean, rejectedReason: string | null, originalDialogueId: string | null, forumEventId: string | null, forumEventMetadata: any | null, tag: { __typename?: 'Tag', _id: string, slug: string } | null, relevantTags: Array<(
    { __typename?: 'Tag' }
    & TagPreviewFragment
  )>, contents: { __typename?: 'Revision', _id: string, html: string | null, plaintextMainText: string, wordCount: number } | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, promotedByUser: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type CommentsListWithTopLevelComment = (
  { __typename?: 'Comment', topLevelComment: (
    { __typename?: 'Comment' }
    & CommentsList
  ) | null }
  & CommentsList
);

export type UltraFeedComment = (
  { __typename?: 'Comment', post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null }
  & CommentsList
);

export type ShortformComments = (
  { __typename?: 'Comment', post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null, relevantTags: Array<(
    { __typename?: 'Tag' }
    & TagPreviewFragment
  )> }
  & CommentsList
);

export type FrontpageShortformComments = (
  { __typename?: 'Comment', latestChildren: Array<{ __typename?: 'Comment', _id: string, postedAt: string, user: { __typename?: 'User', _id: string, displayName: string } | null }> }
  & ShortformComments
);

export type DraftComments = (
  { __typename?: 'Comment', post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null, parentComment: { __typename?: 'Comment', _id: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null }
  & CommentsList
);

export type CommentWithRepliesFragment = (
  { __typename?: 'Comment', lastSubthreadActivity: string | null, latestChildren: Array<(
    { __typename?: 'Comment' }
    & CommentsList
  )>, tag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsBase
  ) | null }
  & CommentsList
);

export type CommentEdit = (
  { __typename?: 'Comment', relevantTagIds: Array<string>, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & CommentsList
);

export type DeletedCommentsMetaData = { __typename?: 'Comment', _id: string, deleted: boolean, deletedDate: string | null, deletedReason: string | null, deletedPublic: boolean, deletedByUser: { __typename?: 'User', _id: string, displayName: string } | null };

export type DeletedCommentsModerationLog = (
  { __typename?: 'Comment', user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, post: { __typename?: 'Post', title: string, slug: string, _id: string } | null }
  & DeletedCommentsMetaData
);

export type CommentsListWithParentMetadata = (
  { __typename?: 'Comment', post: (
    { __typename?: 'Post', isRead: boolean | null }
    & PostsMinimumInfo
  ) | null, tag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null }
  & CommentsList
);

export type StickySubforumCommentFragment = (
  { __typename?: 'Comment', tag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null }
  & CommentWithRepliesFragment
);

export type WithVoteComment = { __typename: 'Comment', _id: string, currentUserVote: string | null, currentUserExtendedVote: any | null, baseScore: number | null, extendedScore: any | null, score: number, afBaseScore: number | null, afExtendedScore: any | null, voteCount: number };

export type CommentsListWithModGPTAnalysis = (
  { __typename?: 'Comment', modGPTAnalysis: string | null, post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null }
  & CommentsList
);

export type CommentsForAutocomplete = { __typename?: 'Comment', _id: string, postId: string | null, baseScore: number | null, extendedScore: any | null, createdAt: string | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, contents: { __typename?: 'Revision', markdown: string | null } | null, post: (
    { __typename?: 'Post' }
    & PostsForAutocomplete
  ) | null };

export type CommentsForAutocompleteWithParents = (
  { __typename?: 'Comment', parentComment: (
    { __typename?: 'Comment', parentComment: (
      { __typename?: 'Comment', parentComment: (
        { __typename?: 'Comment', parentComment: (
          { __typename?: 'Comment', parentComment: (
            { __typename?: 'Comment', parentComment: (
              { __typename?: 'Comment', parentComment: (
                { __typename?: 'Comment', parentComment: (
                  { __typename?: 'Comment', parentComment: (
                    { __typename?: 'Comment', parentComment: (
                      { __typename?: 'Comment' }
                      & CommentsForAutocomplete
                    ) | null }
                    & CommentsForAutocomplete
                  ) | null }
                  & CommentsForAutocomplete
                ) | null }
                & CommentsForAutocomplete
              ) | null }
              & CommentsForAutocomplete
            ) | null }
            & CommentsForAutocomplete
          ) | null }
          & CommentsForAutocomplete
        ) | null }
        & CommentsForAutocomplete
      ) | null }
      & CommentsForAutocomplete
    ) | null }
    & CommentsForAutocomplete
  ) | null }
  & CommentsForAutocomplete
);

export type SuggestAlignmentComment = (
  { __typename?: 'Comment', suggestForAlignmentUserIds: Array<string>, post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null, suggestForAlignmentUsers: Array<{ __typename?: 'User', _id: string, displayName: string }> }
  & CommentsList
);

export type ConversationsMinimumInfo = { __typename?: 'Conversation', _id: string, createdAt: string | null, latestActivity: string | null, title: string | null, participantIds: Array<string> | null, archivedByIds: Array<string>, messageCount: number, moderator: boolean | null };

export type ConversationsList = (
  { __typename?: 'Conversation', participants: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> | null, latestMessage: (
    { __typename?: 'Message' }
    & messageListFragment
  ) | null }
  & ConversationsMinimumInfo
);

export type ConversationsListWithReadStatus = (
  { __typename?: 'Conversation', hasUnreadMessages: boolean | null }
  & ConversationsList
);

export type CurationNoticesFragment = { __typename?: 'CurationNotice', _id: string, createdAt: string, userId: string, commentId: string | null, postId: string, deleted: boolean, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, comment: (
    { __typename?: 'Comment' }
    & CommentsList
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null };

export type DigestPostsMinimumInfo = { __typename?: 'DigestPost', _id: string, digestId: string, postId: string, emailDigestStatus: string | null, onsiteDigestStatus: string | null };

export type DigestsMinimumInfo = { __typename?: 'Digest', _id: string, num: number, startDate: string, endDate: string | null, publishedDate: string | null, onsiteImageId: string | null, onsitePrimaryColor: string | null };

export type ElectionCandidateBasicInfo = { __typename?: 'ElectionCandidate', _id: string, electionName: string, name: string, logoSrc: string, href: string, fundraiserLink: string | null, gwwcLink: string | null, gwwcId: string | null, description: string, tagId: string, postCount: number, baseScore: number, score: number, extendedScore: any | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null, tag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null };

export type WithVoteElectionCandidate = { __typename: 'ElectionCandidate', _id: string, score: number, baseScore: number, extendedScore: any | null, afBaseScore: number | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type ElicitQuestionFragment = { __typename?: 'ElicitQuestion', _id: string, title: string, notes: string | null, resolution: string | null, resolvesBy: string | null };

export type FeaturedResourcesFragment = { __typename?: 'FeaturedResource', _id: string, title: string, body: string | null, ctaText: string, ctaUrl: string, expiresAt: string };

export type FieldChangeFragment = { __typename?: 'FieldChange', _id: string, createdAt: string, userId: string | null, changeGroup: string | null, documentId: string | null, fieldName: string | null, oldValue: any | null, newValue: any | null };

export type ForumEventsMinimumInfo = { __typename?: 'ForumEvent', _id: string, title: string, startDate: string, endDate: string | null, darkColor: string, lightColor: string, bannerTextColor: string, contrastColor: string | null, tagId: string | null, postId: string | null, commentId: string | null, bannerImageId: string | null, eventFormat: ForumEventFormat, customComponent: ForumEventCustomComponent | null, commentPrompt: string | null, isGlobal: boolean, pollAgreeWording: string | null, pollDisagreeWording: string | null, maxStickersPerUser: number };

export type ForumEventsDisplay = (
  { __typename?: 'ForumEvent', publicData: any | null, voteCount: number, post: (
    { __typename?: 'Post' }
    & PostsMinimumInfo
  ) | null, tag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, frontpageDescription: { __typename?: 'Revision', _id: string, html: string | null } | null, frontpageDescriptionMobile: { __typename?: 'Revision', _id: string, html: string | null } | null, postPageDescription: { __typename?: 'Revision', _id: string, html: string | null } | null, pollQuestion: { __typename?: 'Revision', _id: string, html: string | null, plaintextMainText: string } | null }
  & ForumEventsMinimumInfo
);

export type ForumEventsEdit = (
  { __typename?: 'ForumEvent', frontpageDescription: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, frontpageDescriptionMobile: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, postPageDescription: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, pollQuestion: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & ForumEventsMinimumInfo
);

export type GoogleServiceAccountSessionInfo = { __typename?: 'GoogleServiceAccountSession', _id: string, email: string | null };

export type GoogleServiceAccountSessionAdminInfo = { __typename?: 'GoogleServiceAccountSession', _id: string, email: string | null, estimatedExpiry: string | null };

export type JargonTerms = { __typename?: 'JargonTerm', _id: string, postId: string, term: string, humansAndOrAIEdited: string | null, approved: boolean, deleted: boolean, altTerms: Array<string>, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null };

export type JargonTermsPost = { __typename?: 'JargonTerm', _id: string, term: string, humansAndOrAIEdited: string | null, approved: boolean, deleted: boolean, altTerms: Array<string>, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null };

export type LlmConversationsFragment = { __typename?: 'LlmConversation', _id: string, userId: string | null, title: string | null, createdAt: string, lastUpdatedAt: string | null, deleted: boolean | null };

export type LlmConversationsViewingPageFragment = (
  { __typename?: 'LlmConversation', totalCharacterCount: number | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null }
  & LlmConversationsFragment
);

export type LlmConversationsWithMessagesFragment = (
  { __typename?: 'LlmConversation', messages: Array<(
    { __typename?: 'LlmMessage' }
    & LlmMessagesFragment
  )> | null }
  & LlmConversationsFragment
);

export type LlmMessagesFragment = { __typename?: 'LlmMessage', _id: string, userId: string | null, conversationId: string | null, role: string | null, content: string | null, createdAt: string };

export type localGroupsBase = { __typename?: 'Localgroup', _id: string, createdAt: string, organizerIds: Array<string>, lastActivity: string, name: string, nameInAnotherLanguage: string | null, isOnline: boolean, location: string | null, googleLocation: any | null, mongoLocation: any | null, types: Array<string>, categories: Array<string> | null, contactInfo: string | null, facebookLink: string | null, facebookPageLink: string | null, meetupLink: string | null, slackLink: string | null, website: string | null, bannerImageId: string | null, inactive: boolean, deleted: boolean, organizers: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> };

export type localGroupsHomeFragment = (
  { __typename?: 'Localgroup', contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null }
  & localGroupsBase
);

export type localGroupsEdit = (
  { __typename?: 'Localgroup', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & localGroupsBase
);

export type localGroupsIsOnline = { __typename?: 'Localgroup', _id: string, name: string, isOnline: boolean };

export type newEventFragment = { __typename?: 'LWEvent', _id: string, createdAt: string | null, userId: string | null, name: string | null, important: boolean | null, properties: any | null, intercom: boolean | null };

export type lastEventFragment = { __typename?: 'LWEvent', _id: string, createdAt: string | null, documentId: string | null, userId: string | null, name: string | null, important: boolean | null, properties: any | null, intercom: boolean | null };

export type emailHistoryFragment = { __typename?: 'LWEvent', _id: string, createdAt: string | null, userId: string | null, name: string | null, properties: any | null };

export type messageListFragment = { __typename?: 'Message', _id: string, createdAt: string | null, conversationId: string | null, voteCount: number, baseScore: number, score: number, extendedScore: any | null, currentUserVote: string | null, currentUserExtendedVote: any | null, user: (
    { __typename?: 'User', profileImageId: string | null }
    & UsersMinimumInfo
  ) | null, contents: { __typename?: 'Revision', html: string | null, plaintextMainText: string } | null };

export type WithVoteMessage = { __typename: 'Message', _id: string, score: number, baseScore: number, extendedScore: any | null, afBaseScore: number | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type ModerationTemplateFragment = { __typename?: 'ModerationTemplate', _id: string, name: string, collectionName: ModerationTemplateType, order: number, deleted: boolean, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null };

export type ModeratorActionDisplay = { __typename?: 'ModeratorAction', _id: string, userId: string, type: ModeratorActionType, active: boolean, createdAt: string, endedAt: string | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type MultiDocumentMinimumInfo = { __typename?: 'MultiDocument', _id: string, parentDocumentId: string, collectionName: MultiDocumentCollectionName, fieldName: MultiDocumentFieldName, userId: string, slug: string, oldSlugs: Array<string>, title: string | null, tabTitle: string, tabSubtitle: string | null, preview: string | null, index: number, deleted: boolean, createdAt: string, legacyData: any | null, baseScore: number, extendedScore: any | null, score: number, afBaseScore: number | null, afExtendedScore: any | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type MultiDocumentContentDisplay = (
  { __typename?: 'MultiDocument', tableOfContents: any | null, textLastUpdatedAt: string | null, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & MultiDocumentMinimumInfo
);

export type MultiDocumentEdit = (
  { __typename?: 'MultiDocument', textLastUpdatedAt: string | null, arbitalLinkedPages: (
    { __typename?: 'ArbitalLinkedPages' }
    & ArbitalLinkedPagesFragment
  ) | null, summaries: Array<(
    { __typename?: 'MultiDocument' }
    & MultiDocumentContentDisplay
  )> }
  & MultiDocumentContentDisplay
);

export type MultiDocumentParentDocument = (
  { __typename?: 'MultiDocument', parentTag: (
    { __typename?: 'Tag' }
    & TagHistoryFragment
  ) | null }
  & MultiDocumentEdit
);

export type MultiDocumentWithContributors = (
  { __typename?: 'MultiDocument', contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', currentAttributionCharCount: number | null, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } | null }
  & MultiDocumentEdit
);

export type MultiDocumentRevision = (
  { __typename?: 'MultiDocument', tableOfContents: any | null, contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & MultiDocumentMinimumInfo
);

export type MultiDocumentWithContributorsRevision = (
  { __typename?: 'MultiDocument', textLastUpdatedAt: string | null, contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', currentAttributionCharCount: number | null, contributionScore: number, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } | null, arbitalLinkedPages: (
    { __typename?: 'ArbitalLinkedPages' }
    & ArbitalLinkedPagesFragment
  ) | null }
  & MultiDocumentRevision
);

export type WithVoteMultiDocument = (
  { __typename?: 'MultiDocument' }
  & MultiDocumentMinimumInfo
);

export type NotificationsList = { __typename?: 'Notification', _id: string, documentId: string | null, documentType: string | null, deleted: boolean | null, userId: string | null, createdAt: string | null, link: string | null, message: string | null, type: string | null, viewed: boolean | null, extraData: any | null };

export type PetrovDayActionInfo = { __typename?: 'PetrovDayAction', _id: string, createdAt: string, userId: string | null, actionType: string, data: any | null };

export type PodcastEpisodeCreateFragment = { __typename?: 'PodcastEpisode', _id: string, schemaVersion: number, createdAt: string, legacyData: any | null, podcastId: string, title: string, episodeLink: string, externalEpisodeId: string };

export type PodcastEpisodeFull = { __typename?: 'PodcastEpisode', _id: string, podcastId: string, title: string, episodeLink: string, externalEpisodeId: string };

export type PodcastSelect = { __typename?: 'Podcast', _id: string, title: string };

export type PostsMinimumInfo = { __typename?: 'Post', _id: string, slug: string, title: string, draft: boolean | null, shortform: boolean, hideCommentKarma: boolean, af: boolean, userId: string | null, coauthorUserIds: Array<string>, rejected: boolean, collabEditorDialogue: boolean };

export type PostsTopItemInfo = (
  { __typename?: 'Post', isRead: boolean | null, user: { __typename?: 'User', _id: string, displayName: string } | null, reviewWinner: (
    { __typename?: 'ReviewWinner' }
    & ReviewWinnerTopPostsPage
  ) | null }
  & PostsMinimumInfo
);

export type PostsBase = (
  { __typename?: 'Post', url: string | null, postedAt: string, sticky: boolean, metaSticky: boolean, stickyPriority: number, status: number, frontpageDate: string | null, meta: boolean, deletedDraft: boolean, postCategory: PostCategory, tagRelevance: any | null, shareWithUsers: Array<string> | null, sharingSettings: any | null, linkSharingKey: string | null, contents_latest: string | null, commentCount: number, voteCount: number, baseScore: number, extendedScore: any | null, emojiReactors: any | null, unlisted: boolean, score: number, lastVisitedAt: string | null, isFuture: boolean, isRead: boolean | null, lastCommentedAt: string, lastCommentPromotedAt: string | null, canonicalCollectionSlug: string | null, curatedDate: string | null, commentsLocked: boolean | null, commentsLockedToAccountsCreatedAfter: string | null, debate: boolean, question: boolean, hiddenRelatedQuestion: boolean, originalPostRelationSourceId: string | null, userId: string | null, location: string | null, googleLocation: any | null, onlineEvent: boolean, globalEvent: boolean, startTime: string | null, endTime: string | null, localStartTime: string | null, localEndTime: string | null, eventRegistrationLink: string | null, joinEventLink: string | null, facebookLink: string | null, meetupLink: string | null, website: string | null, contactInfo: string | null, isEvent: boolean, eventImageId: string | null, eventType: string | null, types: Array<string> | null, groupId: string | null, reviewedByUserId: string | null, suggestForCuratedUserIds: Array<string> | null, suggestForCuratedUsernames: string | null, reviewForCuratedUserId: string | null, authorIsUnreviewed: boolean, afDate: string | null, suggestForAlignmentUserIds: Array<string>, reviewForAlignmentUserId: string | null, afBaseScore: number | null, afExtendedScore: any | null, afCommentCount: number, afLastCommentedAt: string | null, afSticky: boolean, hideAuthor: boolean, moderationStyle: string | null, ignoreRateLimits: boolean | null, submitToFrontpage: boolean, shortform: boolean, onlyVisibleToLoggedIn: boolean, onlyVisibleToEstablishedAccounts: boolean, reviewCount: number, reviewVoteCount: number, positiveReviewVoteCount: number, manifoldReviewMarketId: string | null, annualReviewMarketProbability: number | null, annualReviewMarketIsResolved: boolean | null, annualReviewMarketYear: number | null, annualReviewMarketUrl: string | null, rsvpCounts: any, podcastEpisodeId: string | null, forceAllowType3Audio: boolean, nominationCount2019: number, reviewCount2019: number, votingSystem: string | null, disableRecommendation: boolean, group: { __typename?: 'Localgroup', _id: string, name: string, organizerIds: Array<string> } | null }
  & PostsMinimumInfo
);

export type PostsWithVotes = (
  { __typename?: 'Post', currentUserVote: string | null, currentUserExtendedVote: any | null }
  & PostsBase
);

export type PostPodcastEpisode = { __typename?: 'Post', podcastEpisode: { __typename?: 'PodcastEpisode', _id: string, title: string, episodeLink: string, externalEpisodeId: string, podcast: { __typename?: 'Podcast', _id: string, title: string, applePodcastLink: string | null, spotifyPodcastLink: string | null } } | null };

export type PostsListWithVotes = (
  { __typename?: 'Post', currentUserVote: string | null, currentUserExtendedVote: any | null }
  & PostsList
  & PostPodcastEpisode
);

export type PostsListWithVotesAndSequence = (
  { __typename?: 'Post', canonicalSequence: (
    { __typename?: 'Sequence' }
    & SequencesPageFragment
  ) | null }
  & PostsListWithVotes
);

export type UltraFeedPostFragment = (
  { __typename?: 'Post', autoFrontpage: string | null, votingSystem: string | null, contents: { __typename?: 'Revision', _id: string, html: string | null, htmlHighlight: string, wordCount: number, plaintextDescription: string, version: string } | null }
  & PostsDetails
  & PostsListWithVotes
);

export type PostsReviewVotingList = (
  { __typename?: 'Post', reviewVoteScoreAllKarma: number, reviewVotesAllKarma: Array<number>, reviewVoteScoreHighKarma: number, reviewVotesHighKarma: Array<number>, reviewVoteScoreAF: number, reviewVotesAF: Array<number>, currentUserReviewVote: { __typename?: 'ReviewVote', _id: string, qualitativeScore: number, quadraticScore: number } | null }
  & PostsListWithVotes
);

export type PostsModerationGuidelines = (
  { __typename?: 'Post', frontpageDate: string | null, moderationStyle: string | null, user: { __typename?: 'User', _id: string, displayName: string, moderationStyle: string | null } | null, moderationGuidelines: { __typename?: 'Revision', _id: string, html: string | null, originalContents: { __typename?: 'ContentType', type: string, data: any } } | null }
  & PostsMinimumInfo
);

export type PostsAuthors = { __typename?: 'Post', user: (
    { __typename?: 'User', profileImageId: string | null, moderationStyle: string | null, bannedUserIds: Array<string> | null, moderatorAssistance: boolean | null, groups: Array<string> | null, banned: string | null, allCommentingDisabled: boolean | null }
    & UsersMinimumInfo
  ) | null, coauthors: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> | null };

export type PostsListBase = (
  { __typename?: 'Post', readTimeMinutes: number, rejectedReason: string | null, feedId: string | null, totalDialogueResponseCount: number, unreadDebateResponseCount: number, dialogTooltipPreview: string | null, disableSidenotes: boolean, customHighlight: { __typename?: 'Revision', _id: string, html: string | null, plaintextDescription: string } | null, lastPromotedComment: { __typename?: 'Comment', _id: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null, bestAnswer: (
    { __typename?: 'Comment' }
    & CommentsList
  ) | null, tags: Array<(
    { __typename?: 'Tag' }
    & TagBasicInfo
  )>, socialPreviewData: { __typename?: 'SocialPreviewType', _id: string, imageUrl: string } }
  & PostsBase
  & PostsAuthors
);

export type PostsList = (
  { __typename?: 'Post', deletedDraft: boolean, bannedUserIds: Array<string> | null, contents: { __typename?: 'Revision', _id: string, htmlHighlight: string, plaintextDescription: string, wordCount: number, version: string } | null, fmCrosspost: { __typename?: 'CrosspostOutput', isCrosspost: boolean, hostedHere: boolean | null, foreignPostId: string | null } | null }
  & PostsListBase
);

export type SunshineCurationPostsList = (
  { __typename?: 'Post', curationNotices: Array<(
    { __typename?: 'CurationNotice' }
    & CurationNoticesFragment
  )> | null }
  & PostsList
);

export type PostsListTag = (
  { __typename?: 'Post', tagRel: (
    { __typename?: 'TagRel' }
    & WithVoteTagRel
  ) | null }
  & PostsList
);

export type PostsListTagWithVotes = (
  { __typename?: 'Post', tagRel: (
    { __typename?: 'TagRel' }
    & WithVoteTagRel
  ) | null }
  & PostsListWithVotes
);

export type PostsDetails = (
  { __typename?: 'Post', canonicalSource: string | null, noIndex: boolean, viewCount: number | null, tagRelevance: any | null, commentSortOrder: string | null, sideCommentVisibility: string | null, collectionTitle: string | null, canonicalPrevPostSlug: string | null, canonicalNextPostSlug: string | null, canonicalSequenceId: string | null, canonicalBookId: string | null, bannedUserIds: Array<string> | null, moderationStyle: string | null, currentUserVote: string | null, currentUserExtendedVote: any | null, feedLink: string | null, rsvps: Array<any> | null, activateRSVPs: boolean | null, tags: Array<(
    { __typename?: 'Tag' }
    & TagPreviewFragment
  )>, socialPreviewData: { __typename?: 'SocialPreviewType', _id: string, text: string | null, imageUrl: string }, canonicalSequence: { __typename?: 'Sequence', _id: string, title: string } | null, canonicalBook: { __typename?: 'Book', _id: string, title: string | null } | null, canonicalCollection: { __typename?: 'Collection', _id: string, title: string } | null, feed: (
    { __typename?: 'RSSFeed' }
    & RSSFeedMinimumInfo
  ) | null, sourcePostRelations: Array<{ __typename?: 'PostRelation', _id: string, sourcePostId: string, order: number | null, sourcePost: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null }>, targetPostRelations: Array<{ __typename?: 'PostRelation', _id: string, sourcePostId: string, targetPostId: string, order: number | null, targetPost: (
      { __typename?: 'Post' }
      & PostsListWithVotes
    ) | null }>, fmCrosspost: { __typename?: 'CrosspostOutput', isCrosspost: boolean, hostedHere: boolean | null, foreignPostId: string | null } | null }
  & PostsListBase
);

export type PostsExpandedHighlight = { __typename?: 'Post', _id: string, contents: { __typename?: 'Revision', _id: string, html: string | null, wordCount: number } | null };

export type PostsPlaintextDescription = { __typename?: 'Post', _id: string, contents: { __typename?: 'Revision', _id: string, plaintextDescription: string } | null };

export type PostsRevision = (
  { __typename?: 'Post', version: string | null, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, revisions: Array<(
    { __typename?: 'Revision' }
    & RevisionMetadata
  )> | null }
  & PostsDetails
);

export type PostsWithNavigationAndRevision = (
  { __typename?: 'Post', tableOfContentsRevision: any | null, customHighlight: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, reviewWinner: (
    { __typename?: 'ReviewWinner' }
    & ReviewWinnerAll
  ) | null, glossary: Array<(
    { __typename?: 'JargonTerm' }
    & JargonTermsPost
  )> }
  & PostsRevision
  & PostSequenceNavigation
  & PostPodcastEpisode
);

export type PostsWithNavigation = (
  { __typename?: 'Post', tableOfContents: any | null, reviewWinner: (
    { __typename?: 'ReviewWinner' }
    & ReviewWinnerAll
  ) | null, glossary: Array<(
    { __typename?: 'JargonTerm' }
    & JargonTermsPost
  )> }
  & PostsPage
  & PostSequenceNavigation
  & PostPodcastEpisode
);

export type PostSequenceNavigation = { __typename?: 'Post', sequence: (
    { __typename?: 'Sequence' }
    & SequencesPageFragment
  ) | null, prevPost: (
    { __typename?: 'Post', sequence: { __typename?: 'Sequence', _id: string } | null }
    & PostsListWithVotes
  ) | null, nextPost: (
    { __typename?: 'Post', sequence: { __typename?: 'Sequence', _id: string } | null }
    & PostsListWithVotes
  ) | null };

export type PostsPage = (
  { __typename?: 'Post', version: string | null, myEditorAccess: string, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null }
  & PostsDetails
);

export type PostsEdit = (
  { __typename?: 'Post', myEditorAccess: string, version: string | null, coauthorUserIds: Array<string>, readTimeMinutesOverride: number | null, hideFromRecentDiscussions: boolean, hideFromPopularComments: boolean | null, tableOfContents: any | null, subforumTagId: string | null, socialPreviewImageId: string | null, generateDraftJargon: boolean | null, fmCrosspost: { __typename?: 'CrosspostOutput', isCrosspost: boolean, hostedHere: boolean | null, foreignPostId: string | null } | null, moderationGuidelines: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, customHighlight: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, socialPreview: { __typename?: 'SocialPreviewOutput', imageId: string | null, text: string | null } | null, socialPreviewData: { __typename?: 'SocialPreviewType', _id: string, imageId: string | null, text: string | null }, user: (
    { __typename?: 'User', moderationStyle: string | null, bannedUserIds: Array<string> | null, moderatorAssistance: boolean | null }
    & UsersMinimumInfo
  ) | null, usersSharedWith: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> | null, coauthors: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> | null }
  & PostsDetails
  & PostSideComments
);

export type PostsEditQueryFragment = (
  { __typename?: 'Post', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & PostsEdit
);

export type PostsEditMutationFragment = (
  { __typename?: 'Post', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & PostsEdit
);

export type PostsRevisionsList = { __typename?: 'Post', _id: string, revisions: Array<(
    { __typename?: 'Revision' }
    & RevisionMetadata
  )> | null };

export type PostsRecentDiscussion = (
  { __typename?: 'Post', recentComments: Array<(
    { __typename?: 'Comment' }
    & CommentsList
  )> | null }
  & PostsListWithVotes
);

export type ShortformRecentDiscussion = (
  { __typename?: 'Post', recentComments: Array<(
    { __typename?: 'Comment' }
    & CommentsListWithTopLevelComment
  )> | null }
  & PostsListWithVotes
);

export type UsersBannedFromPostsModerationLog = { __typename?: 'Post', title: string, slug: string, _id: string, bannedUserIds: Array<string> | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type SunshinePostsList = (
  { __typename?: 'Post', currentUserVote: string | null, currentUserExtendedVote: any | null, rejectedReason: string | null, autoFrontpage: string | null, fmCrosspost: { __typename?: 'CrosspostOutput', isCrosspost: boolean, hostedHere: boolean | null, foreignPostId: string | null } | null, contents: { __typename?: 'Revision', _id: string, html: string | null, htmlHighlight: string, wordCount: number, version: string } | null, automatedContentEvaluations: (
    { __typename?: 'AutomatedContentEvaluation' }
    & AutomatedContentEvaluationsFragment
  ) | null, moderationGuidelines: { __typename?: 'Revision', _id: string, html: string | null } | null, user: (
    { __typename?: 'User', profileImageId: string | null, moderationStyle: string | null, bannedUserIds: Array<string> | null, moderatorAssistance: boolean | null, needsReview: boolean | null, biography: (
      { __typename?: 'Revision' }
      & RevisionDisplay
    ) | null, moderationGuidelines: { __typename?: 'Revision', _id: string, html: string | null } | null, moderatorActions: Array<(
      { __typename?: 'ModeratorAction' }
      & ModeratorActionDisplay
    )> | null }
    & UsersMinimumInfo
  ) | null, frontpageClassification: { __typename?: 'FrontpageClassification', isFrontpage: boolean, probability: number } | null }
  & PostsListBase
);

export type WithVotePost = { __typename: 'Post', _id: string, currentUserVote: string | null, currentUserExtendedVote: any | null, baseScore: number, extendedScore: any | null, score: number, afBaseScore: number | null, afExtendedScore: any | null, voteCount: number };

export type HighlightWithHash = { __typename?: 'Post', _id: string, contents: { __typename?: 'Revision', _id: string, htmlHighlightStartingAtHash: string } | null };

export type PostWithDialogueMessage = { __typename?: 'Post', _id: string, dialogueMessageContents: string | null };

export type PostSideComments = { __typename?: 'Post', _id: string, sideComments: any | null, sideCommentsCache: (
    { __typename?: 'SideCommentCache' }
    & SideCommentCacheMinimumInfo
  ) | null };

export type PostWithGeneratedSummary = { __typename?: 'Post', _id: string, languageModelSummary: string | null };

export type PostsBestOfList = (
  { __typename?: 'Post', firstVideoAttribsForPreview: any | null, podcastEpisode: { __typename?: 'PodcastEpisode', _id: string, title: string, episodeLink: string, externalEpisodeId: string, podcast: { __typename?: 'Podcast', _id: string, title: string, applePodcastLink: string | null, spotifyPodcastLink: string | null } } | null, socialPreviewData: { __typename?: 'SocialPreviewType', _id: string, text: string | null, imageUrl: string } }
  & PostsListWithVotes
);

export type PostsRSSFeed = (
  { __typename?: 'Post', scoreExceeded2Date: string | null, scoreExceeded30Date: string | null, scoreExceeded45Date: string | null, scoreExceeded75Date: string | null, scoreExceeded125Date: string | null, scoreExceeded200Date: string | null, metaDate: string | null }
  & PostsPage
);

export type PostsOriginalContents = { __typename?: 'Post', _id: string, contents: { __typename?: 'Revision', _id: string, originalContents: { __typename?: 'ContentType', type: string, data: any } } | null };

export type PostsHTML = { __typename?: 'Post', _id: string, contents: (
    { __typename?: 'Revision' }
    & RevisionHTML
  ) | null };

export type PostsForAutocomplete = { __typename?: 'Post', _id: string, title: string, userId: string | null, baseScore: number, extendedScore: any | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, contents: { __typename?: 'Revision', markdown: string | null } | null };

export type PostsTwitterAdmin = (
  { __typename?: 'Post', user: (
    { __typename?: 'User' }
    & UsersSocialMediaInfo
  ) | null, coauthors: Array<(
    { __typename?: 'User' }
    & UsersSocialMediaInfo
  )> | null }
  & PostsListWithVotes
);

export type SuggestAlignmentPost = (
  { __typename?: 'Post', suggestForAlignmentUsers: Array<{ __typename?: 'User', _id: string, displayName: string }> }
  & PostsList
);

export type UnclaimedReportsList = { __typename?: 'Report', _id: string, userId: string, commentId: string | null, postId: string | null, closedAt: string | null, createdAt: string, claimedUserId: string | null, link: string, description: string | null, reportedAsSpam: boolean | null, markedAsSpam: boolean | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, comment: (
    { __typename?: 'Comment', post: (
      { __typename?: 'Post' }
      & PostsMinimumInfo
    ) | null, tag: (
      { __typename?: 'Tag' }
      & TagBasicInfo
    ) | null }
    & CommentsList
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsList
  ) | null, reportedUser: (
    { __typename?: 'User' }
    & SunshineUsersList
  ) | null, claimedUser: { __typename?: 'User', _id: string, displayName: string, username: string | null, slug: string } | null };

export type reviewVoteFragment = { __typename?: 'ReviewVote', _id: string, createdAt: string, userId: string, postId: string, qualitativeScore: number, quadraticScore: number, comment: string | null, year: string, dummy: boolean, reactions: Array<string> | null };

export type reviewAdminDashboard = { __typename?: 'ReviewVote', _id: string, createdAt: string, userId: string, user: { __typename?: 'User', _id: string, displayName: string, karma: number } | null };

export type ReviewWinnerArtImages = { __typename?: 'ReviewWinnerArt', _id: string, postId: string, splashArtImagePrompt: string, splashArtImageUrl: string, activeSplashArtCoordinates: (
    { __typename?: 'SplashArtCoordinate' }
    & SplashArtCoordinatesEdit
  ) | null };

export type ReviewWinnerAll = { __typename?: 'ReviewWinner', _id: string, category: string, curatedOrder: number | null, postId: string, reviewYear: number, reviewRanking: number, competitorCount: number | null, reviewWinnerArt: (
    { __typename?: 'ReviewWinnerArt' }
    & ReviewWinnerArtImages
  ) | null };

export type ReviewWinnerTopPostsPage = { __typename?: 'ReviewWinner', _id: string, category: string, curatedOrder: number | null, reviewYear: number, reviewRanking: number, reviewWinnerArt: { __typename?: 'ReviewWinnerArt', splashArtImageUrl: string, activeSplashArtCoordinates: (
      { __typename?: 'SplashArtCoordinate' }
      & SplashArtCoordinatesEdit
    ) | null } | null };

export type ReviewWinnerAnnouncement = { __typename?: 'ReviewWinner', _id: string, category: string, curatedOrder: number | null, reviewYear: number, reviewRanking: number, competitorCount: number | null, postId: string, post: { __typename?: 'Post', _id: string, title: string, slug: string } | null };

export type RevisionDisplay = { __typename?: 'Revision', _id: string, version: string, html: string | null, wordCount: number, htmlHighlight: string, plaintextDescription: string };

export type RevisionHTML = { __typename?: 'Revision', _id: string, html: string | null };

export type RevisionEdit = (
  { __typename?: 'Revision', updateType: string | null, editedAt: string, userId: string | null, commitMessage: string | null, markdown: string | null, ckEditorMarkup: string | null, originalContents: { __typename?: 'ContentType', type: string, data: any } }
  & RevisionDisplay
);

export type RevisionMetadata = { __typename?: 'Revision', _id: string, version: string, editedAt: string, commitMessage: string | null, userId: string | null, score: number, baseScore: number, extendedScore: any | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type RevisionMetadataWithChangeMetrics = (
  { __typename?: 'Revision', changeMetrics: any, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null }
  & RevisionMetadata
);

export type RevisionHistoryEntry = (
  { __typename?: 'Revision', documentId: string | null, collectionName: string | null, changeMetrics: any, legacyData: any | null, skipAttributions: boolean, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null }
  & RevisionMetadata
);

export type RevisionHistorySummaryEdit = (
  { __typename?: 'Revision', summary: (
    { __typename?: 'MultiDocument', parentTag: { __typename?: 'Tag', _id: string, name: string } | null, parentLens: { __typename?: 'MultiDocument', _id: string, title: string | null, tabTitle: string, tabSubtitle: string | null } | null }
    & MultiDocumentMinimumInfo
  ) | null }
  & RevisionHistoryEntry
);

export type RevisionTagFragment = (
  { __typename?: 'Revision', tag: (
    { __typename?: 'Tag' }
    & TagHistoryFragment
  ) | null, lens: (
    { __typename?: 'MultiDocument' }
    & MultiDocumentParentDocument
  ) | null }
  & RevisionHistoryEntry
);

export type RecentDiscussionRevisionTagFragment = (
  { __typename?: 'Revision', tag: (
    { __typename?: 'Tag' }
    & TagRecentDiscussion
  ) | null }
  & RevisionHistoryEntry
);

export type WithVoteRevision = { __typename: 'Revision', _id: string, currentUserVote: string | null, currentUserExtendedVote: any | null, baseScore: number, extendedScore: any | null, score: number, voteCount: number };

export type RSSFeedMinimumInfo = { __typename?: 'RSSFeed', _id: string, userId: string, createdAt: string, ownedByUser: boolean, displayFullContent: boolean, nickname: string, url: string, importAsDraft: boolean, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type newRSSFeedFragment = { __typename?: 'RSSFeed', _id: string, userId: string, createdAt: string, ownedByUser: boolean, displayFullContent: boolean, nickname: string, url: string, status: string | null, importAsDraft: boolean };

export type SequencesPageTitleFragment = { __typename?: 'Sequence', _id: string, title: string, canonicalCollectionSlug: string | null, canonicalCollection: { __typename?: 'Collection', _id: string, title: string } | null };

export type SequencesPageFragment = (
  { __typename?: 'Sequence', createdAt: string, userId: string, gridImageId: string | null, bannerImageId: string | null, canonicalCollectionSlug: string | null, draft: boolean, isDeleted: boolean, hidden: boolean, hideFromAuthorPage: boolean, noindex: boolean, curatedOrder: number | null, userProfileOrder: number | null, af: boolean, postsCount: number, readPostsCount: number, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, contents: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null }
  & SequencesPageTitleFragment
);

export type SequenceContinueReadingFragment = { __typename?: 'Sequence', _id: string, title: string, gridImageId: string | null, canonicalCollectionSlug: string | null };

export type SequencesPageWithChaptersFragment = (
  { __typename?: 'Sequence', chapters: Array<(
    { __typename?: 'Chapter' }
    & ChaptersFragment
  )> }
  & SequencesPageFragment
);

export type SequencesEdit = (
  { __typename?: 'Sequence', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & SequencesPageFragment
);

export type SideCommentCacheMinimumInfo = { __typename?: 'SideCommentCache', _id: string, postId: string | null, annotatedHtml: string | null, commentsByBlock: any | null, version: number | null, createdAt: string };

export type SplashArtCoordinates = { __typename?: 'SplashArtCoordinate', _id: string, reviewWinnerArtId: string | null, leftXPct: number, leftYPct: number, leftHeightPct: number, leftWidthPct: number, leftFlipped: boolean, middleXPct: number, middleYPct: number, middleHeightPct: number, middleWidthPct: number, middleFlipped: boolean, rightXPct: number, rightYPct: number, rightHeightPct: number, rightWidthPct: number, rightFlipped: boolean };

export type SplashArtCoordinatesEdit = (
  { __typename?: 'SplashArtCoordinate', createdAt: string }
  & SplashArtCoordinates
);

export type SpotlightMinimumInfo = { __typename?: 'Spotlight', _id: string, documentId: string, documentType: SpotlightDocumentType, spotlightImageId: string | null, spotlightDarkImageId: string | null, spotlightSplashImageUrl: string | null, draft: boolean, deletedDraft: boolean, position: number, lastPromotedAt: string, customTitle: string | null, customSubtitle: string | null, subtitleUrl: string | null, headerTitle: string | null, headerTitleLeftColor: string | null, headerTitleRightColor: string | null, duration: number, showAuthor: boolean, imageFade: boolean, imageFadeColor: string | null };

export type SpotlightHeaderEventSubtitle = (
  { __typename?: 'Spotlight', post: { __typename?: 'Post', _id: string, slug: string } | null, sequence: { __typename?: 'Sequence', _id: string } | null, tag: { __typename?: 'Tag', _id: string, slug: string } | null }
  & SpotlightMinimumInfo
);

export type SpotlightDisplay = (
  { __typename?: 'Spotlight', post: { __typename?: 'Post', _id: string, slug: string, title: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null, reviews: Array<{ __typename?: 'Comment', _id: string }> | null } | null, sequence: { __typename?: 'Sequence', _id: string, title: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null, tag: { __typename?: 'Tag', _id: string, name: string, slug: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null, description: { __typename?: 'Revision', html: string | null } | null }
  & SpotlightMinimumInfo
);

export type SpotlightEditQueryFragment = (
  { __typename?: 'Spotlight', description: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & SpotlightMinimumInfo
);

export type SubscriptionState = { __typename?: 'Subscription', _id: string, userId: string | null, createdAt: string, state: string | null, documentId: string | null, collectionName: string | null, deleted: boolean | null, type: string | null };

export type MembersOfGroupFragment = { __typename?: 'Subscription', user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type SurveyQuestionMinimumInfo = { __typename?: 'SurveyQuestion', _id: string, question: string, format: SurveyQuestionFormat, order: number };

export type SurveyResponseMinimumInfo = { __typename?: 'SurveyResponse', _id: string, surveyId: string | null, surveyScheduleId: string | null, userId: string | null, clientId: string | null, response: any | null };

export type SurveyScheduleMinimumInfo = { __typename?: 'SurveySchedule', _id: string, survey: (
    { __typename?: 'Survey' }
    & SurveyMinimumInfo
  ) | null };

export type SurveyScheduleEdit = (
  { __typename?: 'SurveySchedule', surveyId: string, name: string | null, impressionsLimit: number | null, maxVisitorPercentage: number | null, minKarma: number | null, maxKarma: number | null, target: SurveyScheduleTarget | null, startDate: string | null, endDate: string | null, deactivated: boolean | null, createdAt: string }
  & SurveyScheduleMinimumInfo
);

export type SurveyMinimumInfo = { __typename?: 'Survey', _id: string, name: string, createdAt: string, questions: Array<(
    { __typename?: 'SurveyQuestion' }
    & SurveyQuestionMinimumInfo
  )> };

export type TagFlagFragment = { __typename?: 'TagFlag', _id: string, createdAt: string, name: string, slug: string, order: number | null, deleted: boolean, contents: { __typename?: 'Revision', html: string | null, htmlHighlight: string, plaintextDescription: string } | null };

export type TagFlagEditFragment = (
  { __typename?: 'TagFlag', contents: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & TagFlagFragment
);

export type TagRelBasicInfo = { __typename?: 'TagRel', _id: string, score: number, baseScore: number, extendedScore: any | null, afBaseScore: number | null, voteCount: number, tagId: string, postId: string, autoApplied: boolean };

export type TagRelFragment = (
  { __typename?: 'TagRel', currentUserVote: string | null, currentUserExtendedVote: any | null, currentUserCanVote: boolean, tag: (
    { __typename?: 'Tag' }
    & TagPreviewFragment
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsList
  ) | null }
  & TagRelBasicInfo
);

export type TagRelHistoryFragment = (
  { __typename?: 'TagRel', createdAt: string, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsList
  ) | null }
  & TagRelBasicInfo
);

export type TagRelCreationFragment = (
  { __typename?: 'TagRel', currentUserVote: string | null, currentUserExtendedVote: any | null, tag: (
    { __typename?: 'Tag' }
    & TagPreviewFragment
  ) | null, post: (
    { __typename?: 'Post', tagRelevance: any | null, tagRel: (
      { __typename?: 'TagRel' }
      & WithVoteTagRel
    ) | null }
    & PostsList
  ) | null }
  & TagRelBasicInfo
);

export type TagRelMinimumFragment = (
  { __typename?: 'TagRel', currentUserVote: string | null, currentUserExtendedVote: any | null, currentUserCanVote: boolean, tag: (
    { __typename?: 'Tag' }
    & TagPreviewFragment
  ) | null }
  & TagRelBasicInfo
);

export type WithVoteTagRel = { __typename: 'TagRel', _id: string, score: number, baseScore: number, extendedScore: any | null, afBaseScore: number | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type TagBasicInfo = { __typename?: 'Tag', _id: string, userId: string | null, name: string, shortName: string | null, slug: string, core: boolean, postCount: number, adminOnly: boolean, canEditUserIds: Array<string> | null, suggestedAsFilter: boolean, needsReview: boolean, descriptionTruncationCount: number, createdAt: string, wikiOnly: boolean, deleted: boolean, isSubforum: boolean, noindex: boolean, isArbitalImport: boolean | null, isPlaceholderPage: boolean, baseScore: number, extendedScore: any | null, score: number, afBaseScore: number | null, afExtendedScore: any | null, voteCount: number, currentUserVote: string | null, currentUserExtendedVote: any | null };

export type TagDetailsFragment = (
  { __typename?: 'Tag', subtitle: string | null, oldSlugs: Array<string>, isRead: boolean | null, defaultOrder: number, reviewedByUserId: string | null, wikiGrade: number, subforumModeratorIds: Array<string>, bannerImageId: string | null, squareImageId: string | null, lesswrongWikiImportSlug: string | null, lesswrongWikiImportRevision: string | null, subforumModerators: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )>, moderationGuidelines: { __typename?: 'Revision', _id: string, html: string | null } | null, sequence: (
    { __typename?: 'Sequence' }
    & SequencesPageFragment
  ) | null }
  & TagBasicInfo
);

export type TagFragment = (
  { __typename?: 'Tag', canVoteOnRels: Array<TagRelVoteGroup> | null, parentTag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, subTags: Array<(
    { __typename?: 'Tag' }
    & TagBasicInfo
  )>, description: { __typename?: 'Revision', _id: string, html: string | null, htmlHighlight: string, plaintextDescription: string, version: string, editedAt: string } | null }
  & TagDetailsFragment
);

export type TagHistoryFragment = (
  { __typename?: 'Tag', textLastUpdatedAt: string | null, tableOfContents: any | null, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, lensesIncludingDeleted: Array<(
    { __typename?: 'MultiDocument' }
    & MultiDocumentContentDisplay
  )> }
  & TagFragment
);

export type TagCreationHistoryFragment = (
  { __typename?: 'Tag', user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null, description: { __typename?: 'Revision', html: string | null } | null }
  & TagFragment
);

export type TagRevisionFragment = (
  { __typename?: 'Tag', isRead: boolean | null, parentTag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, subTags: Array<(
    { __typename?: 'Tag' }
    & TagBasicInfo
  )>, description: { __typename?: 'Revision', _id: string, version: string, html: string | null, htmlHighlight: string, plaintextDescription: string, editedAt: string, user: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null }
  & TagDetailsFragment
);

export type TagPreviewFragment = (
  { __typename?: 'Tag', isRead: boolean | null, canVoteOnRels: Array<TagRelVoteGroup> | null, isArbitalImport: boolean | null, parentTag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, subTags: Array<(
    { __typename?: 'Tag' }
    & TagBasicInfo
  )>, description: { __typename?: 'Revision', _id: string, htmlHighlight: string } | null }
  & TagBasicInfo
);

export type TagSectionPreviewFragment = (
  { __typename?: 'Tag', isRead: boolean | null, canVoteOnRels: Array<TagRelVoteGroup> | null, parentTag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, subTags: Array<(
    { __typename?: 'Tag' }
    & TagBasicInfo
  )>, description: { __typename?: 'Revision', _id: string, htmlHighlightStartingAtHash: string } | null }
  & TagBasicInfo
);

export type TagSubforumFragment = (
  { __typename?: 'Tag', subforumModeratorIds: Array<string>, tableOfContents: any | null, subforumWelcomeText: { __typename?: 'Revision', _id: string, html: string | null } | null }
  & TagPreviewFragment
);

export type TagSubtagFragment = { __typename?: 'Tag', _id: string, subforumModeratorIds: Array<string>, subTags: Array<(
    { __typename?: 'Tag' }
    & TagPreviewFragment
  )> };

export type TagSubforumSidebarFragment = (
  { __typename?: 'Tag' }
  & TagBasicInfo
);

export type TagWithFlagsFragment = (
  { __typename?: 'Tag', tagFlagsIds: Array<string>, tagFlags: Array<(
    { __typename?: 'TagFlag' }
    & TagFlagFragment
  )> }
  & TagFragment
);

export type TagWithFlagsAndRevisionFragment = (
  { __typename?: 'Tag', tagFlagsIds: Array<string>, tagFlags: Array<(
    { __typename?: 'TagFlag' }
    & TagFlagFragment
  )> }
  & TagRevisionFragment
);

export type ArbitalLinkedPagesFragment = { __typename?: 'ArbitalLinkedPages', faster: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, slower: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, moreTechnical: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, lessTechnical: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, requirements: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, teaches: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, parents: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }>, children: Array<{ __typename?: 'ArbitalLinkedPage', _id: string, name: string, slug: string }> };

export type TagPageArbitalContentFragment = { __typename?: 'Tag', lenses: Array<(
    { __typename?: 'MultiDocument' }
    & MultiDocumentWithContributors
  )>, arbitalLinkedPages: (
    { __typename?: 'ArbitalLinkedPages' }
    & ArbitalLinkedPagesFragment
  ) | null };

export type TagPageFragment = (
  { __typename?: 'Tag', tableOfContents: any | null, postsDefaultSortOrder: string | null, canVoteOnRels: Array<TagRelVoteGroup> | null, forceAllowType3Audio: boolean, textLastUpdatedAt: string | null, subforumIntroPost: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null, subforumWelcomeText: { __typename?: 'Revision', _id: string, html: string | null } | null, contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', contributionScore: number, currentAttributionCharCount: number | null, numCommits: number, voteCount: number, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } }
  & TagWithFlagsFragment
);

export type TagPageWithArbitalContentFragment = (
  { __typename?: 'Tag' }
  & TagPageFragment
  & TagPageArbitalContentFragment
);

export type AllTagsPageFragment = (
  { __typename?: 'Tag', tableOfContents: any | null }
  & TagWithFlagsFragment
);

export type TagPageWithRevisionFragment = (
  { __typename?: 'Tag', tableOfContents: any | null, textLastUpdatedAt: string | null, postsDefaultSortOrder: string | null, canVoteOnRels: Array<TagRelVoteGroup> | null, forceAllowType3Audio: boolean, subforumIntroPost: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null, subforumWelcomeText: { __typename?: 'Revision', _id: string, html: string | null } | null, contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', contributionScore: number, currentAttributionCharCount: number | null, numCommits: number, voteCount: number, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } }
  & TagWithFlagsAndRevisionFragment
);

export type TagPageRevisionWithArbitalContentFragment = (
  { __typename?: 'Tag' }
  & TagPageWithRevisionFragment
  & TagPageArbitalContentFragment
);

export type TagFullContributorsList = { __typename?: 'Tag', contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', contributionScore: number, currentAttributionCharCount: number | null, numCommits: number, voteCount: number, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } };

export type TagEditFragment = (
  { __typename?: 'Tag', isPostType: boolean, parentTagId: string | null, subforumIntroPostId: string | null, tagFlagsIds: Array<string>, postsDefaultSortOrder: string | null, introSequenceId: string | null, canVoteOnRels: Array<TagRelVoteGroup> | null, autoTagModel: string | null, autoTagPrompt: string | null, parentTag: (
    { __typename?: 'Tag' }
    & TagBasicInfo
  ) | null, description: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, subforumWelcomeText: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, moderationGuidelines: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & TagDetailsFragment
);

export type TagRecentDiscussion = (
  { __typename?: 'Tag', lastVisitedAt: string | null, recentComments: Array<(
    { __typename?: 'Comment' }
    & CommentsList
  )> }
  & TagFragment
);

export type SunshineTagFragment = (
  { __typename?: 'Tag', user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null }
  & TagFragment
);

export type UserOnboardingTag = { __typename?: 'Tag', _id: string, name: string, slug: string, bannerImageId: string | null, squareImageId: string | null };

export type TagName = { __typename?: 'Tag', _id: string, name: string, slug: string };

export type ExplorePageTagFragment = (
  { __typename?: 'Tag', legacyData: any | null, contributors: { __typename?: 'TagContributorsList', totalCount: number, contributors: Array<{ __typename?: 'TagContributor', contributionScore: number, currentAttributionCharCount: number | null, numCommits: number, voteCount: number, user: (
        { __typename?: 'User' }
        & UsersMinimumInfo
      ) | null }> } }
  & TagFragment
);

export type ConceptItemFragment = { __typename?: 'Tag', _id: string, core: boolean, name: string, slug: string, oldSlugs: Array<string>, postCount: number, baseScore: number, wikiOnly: boolean, isArbitalImport: boolean | null, coreTagId: string | null, maxScore: number | null, description: { __typename?: 'Revision', _id: string, wordCount: number } | null, usersWhoLiked: Array<{ __typename?: 'UserLikingTag', userId: string, displayName: string }> };

export type TagPageWithArbitalContentAndLensRevisionFragment = (
  { __typename?: 'Tag', arbitalLinkedPages: (
    { __typename?: 'ArbitalLinkedPages' }
    & ArbitalLinkedPagesFragment
  ) | null, lenses: Array<(
    { __typename?: 'MultiDocument' }
    & MultiDocumentWithContributorsRevision
  )> }
  & TagPageFragment
);

export type WithVoteTag = (
  { __typename?: 'Tag' }
  & TagBasicInfo
);

export type UserEAGDetailsMinimumInfo = { __typename?: 'UserEAGDetail', _id: string, userId: string | null, createdAt: string, lastUpdated: string | null, careerStage: Array<string> | null, countryOrRegion: string | null, nearestCity: string | null, willingnessToRelocate: any | null, experiencedIn: Array<string> | null, interestedIn: Array<string> | null };

export type UserJobAdsMinimumInfo = { __typename?: 'UserJobAd', _id: string, userId: string | null, createdAt: string, lastUpdated: string | null, jobName: string | null, adState: string | null, reminderSetAt: string | null };

export type UserMostValuablePostInfo = { __typename?: 'UserMostValuablePost', _id: string, userId: string | null, postId: string | null, deleted: boolean | null };

export type UserRateLimitMutationFragment = { __typename?: 'UserRateLimit', _id: string, schemaVersion: number, createdAt: string, legacyData: any | null, userId: string, type: UserRateLimitType, intervalUnit: UserRateLimitIntervalUnit, intervalLength: number, actionsPerInterval: number, endedAt: string };

export type UserRateLimitDisplay = { __typename?: 'UserRateLimit', _id: string, userId: string, type: UserRateLimitType, actionsPerInterval: number, intervalUnit: UserRateLimitIntervalUnit, intervalLength: number, createdAt: string, endedAt: string, user: (
    { __typename?: 'User' }
    & UsersMinimumInfo
  ) | null };

export type UserTagRelDetails = { __typename?: 'UserTagRel', _id: string, userId: string, tagId: string, subforumShowUnreadInSidebar: boolean | null, subforumEmailNotifications: boolean | null, subforumHideIntroPost: boolean | null };

export type UsersMinimumInfo = { __typename?: 'User', _id: string, slug: string, createdAt: string, username: string | null, displayName: string, profileImageId: string | null, karma: number, afKarma: number, deleted: boolean, isAdmin: boolean, htmlBio: string, jobTitle: string | null, organization: string | null, postCount: number, commentCount: number, sequenceCount: number, afPostCount: number, afCommentCount: number, spamRiskScore: number, tagRevisionCount: number, reviewedByUserId: string | null };

export type UsersProfile = (
  { __typename?: 'User', fullName: string | null, previousDisplayName: string | null, oldSlugs: Array<string>, groups: Array<string> | null, jobTitle: string | null, organization: string | null, careerStage: Array<string> | null, profileTagIds: Array<string>, organizerOfGroupIds: Array<string>, programParticipation: Array<string> | null, website: string | null, linkedinProfileURL: string | null, facebookProfileURL: string | null, blueskyProfileURL: string | null, twitterProfileURL: string | null, githubProfileURL: string | null, afSequenceCount: number, afSequenceDraftCount: number, sequenceDraftCount: number, moderationStyle: string | null, bannedUserIds: Array<string> | null, location: string | null, googleLocation: any | null, mapLocation: any | null, mapLocationSet: boolean | null, mapMarkerText: string | null, htmlMapMarkerText: string | null, mongoLocation: any | null, shortformFeedId: string | null, petrovPressedButtonDate: string | null, petrovOptOut: boolean, sortDraftsBy: string | null, email: string | null, emails: Array<any> | null, banned: string | null, noindex: boolean, paymentEmail: string | null, paymentInfo: string | null, goodHeartTokens: number | null, postingDisabled: boolean | null, allCommentingDisabled: boolean | null, commentingOnOtherUsersDisabled: boolean | null, conversationsDisabled: boolean | null, biography: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, howOthersCanHelpMe: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, howICanHelpOthers: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, moderationGuidelines: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null }
  & UsersMinimumInfo
);

export type UsersCurrent = (
  { __typename?: 'User', oldSlugs: Array<string>, groups: Array<string> | null, jobTitle: string | null, organization: string | null, careerStage: Array<string> | null, profileTagIds: Array<string>, organizerOfGroupIds: Array<string>, moderationStyle: string | null, bannedUserIds: Array<string> | null, location: string | null, googleLocation: any | null, mapLocation: any | null, mapLocationSet: boolean | null, mapMarkerText: string | null, mongoLocation: any | null, shortformFeedId: string | null, sortDraftsBy: string | null, email: string | null, emails: Array<any> | null, banned: string | null, paymentEmail: string | null, paymentInfo: string | null, postingDisabled: boolean | null, allCommentingDisabled: boolean | null, commentingOnOtherUsersDisabled: boolean | null, conversationsDisabled: boolean | null, usernameUnset: boolean | null, taggingDashboardCollapsed: boolean | null, beta: boolean | null, acceptedTos: boolean | null, pageUrl: string | null, isReviewed: boolean | null, nullifyVotes: boolean | null, hideIntercom: boolean, hideNavigationSidebar: boolean | null, hideCommunitySection: boolean, hasContinueReading: boolean | null, hidePostsRecommendations: boolean, currentFrontpageFilter: string | null, frontpageSelectedTab: string | null, frontpageFilterSettings: any | null, hideFrontpageFilterSettingsDesktop: boolean | null, allPostsTimeframe: string | null, allPostsSorting: string | null, allPostsFilter: string | null, allPostsShowLowKarma: boolean | null, allPostsIncludeEvents: boolean | null, allPostsHideCommunity: boolean | null, allPostsOpenSettings: boolean | null, draftsListSorting: string | null, draftsListShowArchived: boolean | null, draftsListShowShared: boolean | null, lastNotificationsCheck: string | null, bannedPersonalUserIds: Array<string> | null, noKibitz: boolean | null, showHideKarmaOption: boolean | null, markDownPostEditor: boolean, hideElicitPredictions: boolean | null, hideAFNonMemberInitialWarning: boolean | null, commentSorting: string | null, htmlMapMarkerText: string | null, nearbyEventsNotifications: boolean, nearbyEventsNotificationsLocation: any | null, nearbyEventsNotificationsRadius: number | null, nearbyPeopleNotificationThreshold: number | null, hideFrontpageMap: boolean | null, emailSubscribedToCurated: boolean | null, subscribedToDigest: boolean | null, subscribedToNewsletter: boolean | null, unsubscribeFromAll: boolean | null, whenConfirmationEmailSent: string | null, hideSubscribePoke: boolean | null, hideMeetupsPoke: boolean | null, hideHomeRHS: boolean | null, noCollapseCommentsFrontpage: boolean, noCollapseCommentsPosts: boolean, noSingleLineComments: boolean, showCommunityInRecentDiscussion: boolean, karmaChangeNotifierSettings: any | null, karmaChangeLastOpened: string | null, viewUnreviewedComments: boolean | null, recommendationSettings: any | null, theme: any | null, hasAnyBookmarks: boolean | null, auto_subscribe_to_my_posts: boolean, auto_subscribe_to_my_comments: boolean, autoSubscribeAsOrganizer: boolean, noExpandUnreadCommentsReview: boolean, hideFrontpageBookAd: boolean | null, abTestKey: string | null, abTestOverrides: any | null, reactPaletteStyle: ReactPaletteStyle | null, petrovPressedButtonDate: string | null, petrovLaunchCodeDate: string | null, petrovOptOut: boolean, lastUsedTimezone: string | null, acknowledgedNewUserGuidelines: boolean | null, notificationSubforumUnread: any | null, notificationRepliesToMyComments: any | null, subforumPreferredLayout: SubforumPreferredLayout | null, hideJobAdUntil: string | null, criticismTipsDismissed: boolean | null, allowDatadogSessionReplay: boolean, hideFrontpageBook2020Ad: boolean | null, showDialoguesList: boolean | null, showMyDialogues: boolean | null, showMatches: boolean | null, showRecommendedPartners: boolean | null, hideActiveDialogueUsers: boolean | null, hideSunshineSidebar: boolean | null, optedOutOfSurveys: boolean | null, postGlossariesPinned: boolean | null, generateJargonForDrafts: boolean | null, generateJargonForPublishedPosts: boolean | null, moderationGuidelines: (
    { __typename?: 'Revision' }
    & RevisionDisplay
  ) | null, expandedFrontpageSections: { __typename?: 'ExpandedFrontpageSectionsSettingsOutput', community: boolean | null, recommendations: boolean | null, quickTakes: boolean | null, quickTakesCommunity: boolean | null, popularComments: boolean | null } | null, hiddenPostsMetadata: Array<{ __typename?: 'PostMetadataOutput', postId: string }> | null }
  & UsersMinimumInfo
);

export type UsersCurrentCommentRateLimit = { __typename?: 'User', _id: string, rateLimitNextAbleToComment: any | null };

export type UsersCurrentPostRateLimit = { __typename?: 'User', _id: string, rateLimitNextAbleToPost: any | null };

export type UserKarmaChanges = { __typename?: 'User', _id: string, karmaChanges: { __typename?: 'KarmaChanges', totalChange: number, updateFrequency: string, startDate: string | null, endDate: string | null, nextBatchDate: string | null, posts: Array<{ __typename?: 'PostKarmaChange', _id: string, scoreChange: number, postId: string, title: string | null, slug: string, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, comments: Array<{ __typename?: 'CommentKarmaChange', _id: string, scoreChange: number, commentId: string | null, description: string | null, postId: string | null, postTitle: string | null, postSlug: string | null, tagSlug: string | null, tagName: string | null, tagCommentType: TagCommentType | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, tagRevisions: Array<{ __typename?: 'RevisionsKarmaChange', _id: string, scoreChange: number, tagId: string | null, tagSlug: string | null, tagName: string | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, todaysKarmaChanges: { __typename?: 'KarmaChangesSimple', posts: Array<{ __typename?: 'PostKarmaChange', _id: string, scoreChange: number, postId: string, title: string | null, slug: string, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, comments: Array<{ __typename?: 'CommentKarmaChange', _id: string, scoreChange: number, commentId: string | null, description: string | null, postId: string | null, postTitle: string | null, postSlug: string | null, tagSlug: string | null, tagName: string | null, tagCommentType: TagCommentType | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, tagRevisions: Array<{ __typename?: 'RevisionsKarmaChange', _id: string, scoreChange: number, tagId: string | null, tagSlug: string | null, tagName: string | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }> } | null, thisWeeksKarmaChanges: { __typename?: 'KarmaChangesSimple', posts: Array<{ __typename?: 'PostKarmaChange', _id: string, scoreChange: number, postId: string, title: string | null, slug: string, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, comments: Array<{ __typename?: 'CommentKarmaChange', _id: string, scoreChange: number, commentId: string | null, description: string | null, postId: string | null, postTitle: string | null, postSlug: string | null, tagSlug: string | null, tagName: string | null, tagCommentType: TagCommentType | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }>, tagRevisions: Array<{ __typename?: 'RevisionsKarmaChange', _id: string, scoreChange: number, tagId: string | null, tagSlug: string | null, tagName: string | null, eaAddedReacts: any | null, collectionName: string, addedReacts: Array<{ __typename?: 'ReactionChange', reactionType: string, userId: string | null }> | null }> } | null } | null };

export type UsersBannedFromUsersModerationLog = { __typename?: 'User', _id: string, slug: string, displayName: string, bannedUserIds: Array<string> | null, bannedPersonalUserIds: Array<string> | null };

export type SunshineUsersList = (
  { __typename?: 'User', karma: number, htmlBio: string, website: string | null, createdAt: string, email: string | null, emails: Array<any> | null, commentCount: number, maxCommentCount: number, postCount: number, maxPostCount: number, voteCount: number | null, smallUpvoteCount: number | null, bigUpvoteCount: number | null, smallDownvoteCount: number | null, bigDownvoteCount: number | null, banned: string | null, reviewedByUserId: string | null, reviewedAt: string | null, signUpReCaptchaRating: number | null, mapLocation: any | null, needsReview: boolean | null, sunshineNotes: string | null, sunshineFlagged: boolean | null, postingDisabled: boolean | null, allCommentingDisabled: boolean | null, commentingOnOtherUsersDisabled: boolean | null, conversationsDisabled: boolean | null, snoozedUntilContentCount: number | null, nullifyVotes: boolean | null, deleteContent: boolean | null, usersContactedBeforeReview: Array<string> | null, altAccountsDetected: boolean | null, voteReceivedCount: number | null, smallUpvoteReceivedCount: number | null, bigUpvoteReceivedCount: number | null, smallDownvoteReceivedCount: number | null, bigDownvoteReceivedCount: number | null, recentKarmaInfo: any | null, lastNotificationsCheck: string | null, moderatorActions: Array<(
    { __typename?: 'ModeratorAction' }
    & ModeratorActionDisplay
  )> | null, associatedClientIds: Array<{ __typename?: 'ClientId', clientId: string | null, firstSeenReferrer: string | null, firstSeenLandingPage: string | null, userIds: Array<string> | null }> | null }
  & UsersMinimumInfo
);

export type UserAltAccountsFragment = (
  { __typename?: 'User', IPs: Array<string> | null }
  & SunshineUsersList
);

export type UsersMapEntry = { __typename?: 'User', _id: string, displayName: string, username: string | null, fullName: string | null, slug: string, mapLocationSet: boolean | null, htmlMapMarkerText: string | null, mapLocationLatLng: { __typename?: 'LatLng', lat: number, lng: number } | null };

export type UsersEdit = (
  { __typename?: 'User', markDownPostEditor: boolean, hideElicitPredictions: boolean | null, hideAFNonMemberInitialWarning: boolean | null, hideIntercom: boolean, commentSorting: string | null, currentFrontpageFilter: string | null, noCollapseCommentsPosts: boolean, noCollapseCommentsFrontpage: boolean, noSingleLineComments: boolean, hideCommunitySection: boolean, showCommunityInRecentDiscussion: boolean, hidePostsRecommendations: boolean, beta: boolean | null, theme: any | null, email: string | null, whenConfirmationEmailSent: string | null, emailSubscribedToCurated: boolean | null, subscribedToDigest: boolean | null, subscribedToNewsletter: boolean | null, unsubscribeFromAll: boolean | null, hasAuth0Id: boolean | null, moderatorAssistance: boolean | null, collapseModerationGuidelines: boolean | null, bannedUserIds: Array<string> | null, bannedPersonalUserIds: Array<string> | null, noKibitz: boolean | null, showHideKarmaOption: boolean | null, nullifyVotes: boolean | null, deleteContent: boolean | null, banned: string | null, username: string | null, displayName: string, fullName: string | null, mongoLocation: any | null, googleLocation: any | null, location: string | null, mapLocation: any | null, hideFromPeopleDirectory: boolean, allowDatadogSessionReplay: boolean, reviewedByUserId: string | null, reviewForAlignmentForumUserId: string | null, groups: Array<string> | null, afApplicationText: string | null, afSubmittedApplication: boolean | null, karmaChangeLastOpened: string | null, karmaChangeNotifierSettings: any | null, notificationShortformContent: any | null, notificationCommentsOnSubscribedPost: any | null, notificationRepliesToMyComments: any | null, notificationRepliesToSubscribedComments: any | null, notificationSubscribedUserPost: any | null, notificationSubscribedUserComment: any | null, notificationSubscribedTagPost: any | null, notificationSubscribedSequencePost: any | null, notificationPostsInGroups: any | null, notificationPrivateMessage: any | null, notificationSharedWithMe: any | null, notificationAlignmentSubmissionApproved: any | null, notificationEventInRadius: any | null, notificationRSVPs: any | null, notificationCommentsOnDraft: any | null, notificationPostsNominatedReview: any | null, notificationGroupAdministration: any | null, notificationSubforumUnread: any | null, notificationNewMention: any | null, notificationNewDialogueChecks: any | null, notificationYourTurnMatchForm: any | null, notificationDialogueMessages: any | null, notificationPublishedDialogueMessages: any | null, hideFrontpageMap: boolean | null, hideTaggingProgressBar: boolean | null, hideFrontpageBookAd: boolean | null, hideFrontpageBook2020Ad: boolean | null, deleted: boolean, permanentDeletionRequestedAt: string | null, twitterProfileURLAdmin: string | null, biography: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, moderationGuidelines: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null }
  & UsersProfile
  & UsersCurrent
);

export type UsersWithReviewInfo = (
  { __typename?: 'User', reviewVoteCount: number | null, email: string | null }
  & UsersMinimumInfo
);

export type UsersProfileEdit = { __typename?: 'User', _id: string, slug: string, displayName: string, jobTitle: string | null, organization: string | null, careerStage: Array<string> | null, profileImageId: string | null, profileTagIds: Array<string>, organizerOfGroupIds: Array<string>, programParticipation: Array<string> | null, mapLocation: any | null, website: string | null, linkedinProfileURL: string | null, facebookProfileURL: string | null, blueskyProfileURL: string | null, twitterProfileURL: string | null, githubProfileURL: string | null, biography: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, howOthersCanHelpMe: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, howICanHelpOthers: (
    { __typename?: 'Revision' }
    & RevisionEdit
  ) | null, organizerOfGroups: Array<(
    { __typename?: 'Localgroup' }
    & localGroupsBase
  )> };

export type UsersCrosspostInfo = { __typename?: 'User', _id: string, username: string | null, slug: string, fmCrosspostUserId: string | null };

export type UserOnboardingAuthor = { __typename?: 'User', _id: string, displayName: string, profileImageId: string | null, karma: number, jobTitle: string | null, organization: string | null };

export type UsersSocialMediaInfo = (
  { __typename?: 'User', twitterProfileURLAdmin: string | null }
  & UsersProfile
);

export type SuggestAlignmentUser = (
  { __typename?: 'User', afKarma: number, afPostCount: number, afCommentCount: number, reviewForAlignmentForumUserId: string | null, groups: Array<string> | null, afApplicationText: string | null, afSubmittedApplication: boolean | null }
  & UsersMinimumInfo
);

export type TagRelVotes = { __typename?: 'Vote', _id: string, userId: string | null, voteType: VoteType, power: number | null, documentId: string, votedAt: string | null, isUnvote: boolean, tagRel: (
    { __typename?: 'TagRel' }
    & WithVoteTagRel
  ) | null };

export type TagVotingActivity = (
  { __typename?: 'Vote', tagRel: (
    { __typename?: 'TagRel' }
    & TagRelFragment
  ) | null }
  & TagRelVotes
);

export type UserVotes = { __typename?: 'Vote', _id: string, userId: string | null, voteType: VoteType, power: number | null, cancelled: boolean, documentId: string, votedAt: string | null, isUnvote: boolean, collectionName: string };

export type UserVotesWithDocument = (
  { __typename?: 'Vote', comment: (
    { __typename?: 'Comment' }
    & CommentsListWithParentMetadata
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null }
  & UserVotes
);

export type getCurrentUserQueryVariables = Exact<{ [key: string]: never; }>;


export type getCurrentUserQuery = { __typename?: 'Query', currentUser: (
    { __typename?: 'User' }
    & UsersCurrent
  ) | null };

export type createLWEventwithNewEventsMutationVariables = Exact<{
  data: CreateLWEventDataInput;
}>;


export type createLWEventwithNewEventsMutation = { __typename?: 'Mutation', createLWEvent: { __typename?: 'LWEventOutput', data: (
      { __typename?: 'LWEvent' }
      & newEventFragment
    ) | null } | null };

export type Lightcone2024FundraiserStripeAmountsQueryVariables = Exact<{ [key: string]: never; }>;


export type Lightcone2024FundraiserStripeAmountsQuery = { __typename?: 'Query', Lightcone2024FundraiserStripeAmounts: Array<number> | null };

export type SubscribedPostAndCommentsFeed = { __typename?: 'SubscribedPostAndComments', _id: string, expandCommentIds: Array<string> | null, postIsFromSubscribedUser: boolean, post: (
    { __typename?: 'Post' }
    & PostsList
  ), comments: Array<(
    { __typename?: 'Comment' }
    & CommentsList
  )> | null };

export type FeedPostFragment = { __typename?: 'FeedPost', _id: string, postMetaInfo: any | null, post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) };

export type FeedCommentThreadFragment = { __typename?: 'FeedCommentThread', _id: string, commentMetaInfos: any | null, isOnReadPost: boolean | null, postSources: Array<string> | null, post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null, comments: Array<(
    { __typename?: 'Comment' }
    & UltraFeedComment
  )> };

export type FeedSpotlightFragment = { __typename?: 'FeedSpotlightItem', _id: string, spotlight: (
    { __typename?: 'Spotlight' }
    & SpotlightDisplay
  ) | null, post: (
    { __typename?: 'Post' }
    & PostsListWithVotes
  ) | null, spotlightMetaInfo: { __typename?: 'FeedSpotlightMetaInfo', sources: Array<string>, servedEventId: string } | null };

export type FeedSubscriptionSuggestionsFragment = { __typename?: 'FeedSubscriptionSuggestions', _id: string, suggestedUsers: Array<(
    { __typename?: 'User' }
    & UsersMinimumInfo
  )> };

export type multiPostsForAutocompleteQueryQueryVariables = Exact<{
  input?: InputMaybe<MultiPostInput>;
}>;


export type multiPostsForAutocompleteQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post' }
      & PostsForAutocomplete
    )> } | null };

export type multiCommentsForAutocompleteQueryQueryVariables = Exact<{
  input?: InputMaybe<MultiCommentInput>;
}>;


export type multiCommentsForAutocompleteQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & CommentsForAutocomplete
    )> } | null };

export type multiCommentsForAutocompleteWithParentsQueryQueryVariables = Exact<{
  input?: InputMaybe<MultiCommentInput>;
}>;


export type multiCommentsForAutocompleteWithParentsQueryQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<(
      { __typename?: 'Comment' }
      & CommentsForAutocompleteWithParents
    )> } | null };

export type EmailComment2QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EmailComment2Query = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: (
      { __typename?: 'Comment' }
      & CommentsListWithParentMetadata
    ) | null } | null };

export type EmailComment1QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EmailComment1Query = { __typename?: 'Query', tag: { __typename?: 'SingleTagOutput', result: (
      { __typename?: 'Tag' }
      & TagPreviewFragment
    ) | null } | null };

export type EmailCommentQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EmailCommentQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type EmailFooterRecommendationsQueryQueryVariables = Exact<{
  count?: InputMaybe<Scalars['Int']['input']>;
  algorithm?: InputMaybe<Scalars['JSON']['input']>;
}>;


export type EmailFooterRecommendationsQueryQuery = { __typename?: 'Query', Recommendations: Array<(
    { __typename?: 'Post' }
    & PostsListWithVotesAndSequence
  )> | null };

export type EmailUsernameByIDQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EmailUsernameByIDQuery = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type EventUpdatedEmailQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type EventUpdatedEmailQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsBase
    ) | null } | null };

export type NewDialogueMessagesEmail1QueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type NewDialogueMessagesEmail1Query = { __typename?: 'Query', user: { __typename?: 'SingleUserOutput', result: (
      { __typename?: 'User' }
      & UsersMinimumInfo
    ) | null } | null };

export type NewDialogueMessagesEmailQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type NewDialogueMessagesEmailQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsRevision
    ) | null } | null };

export type PostNominatedEmailQueryVariables = Exact<{
  documentId?: InputMaybe<Scalars['String']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostNominatedEmailQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsRevision
    ) | null } | null };

export type multiPostPostsEmailQueryQueryVariables = Exact<{
  selector?: InputMaybe<PostSelector>;
  limit?: InputMaybe<Scalars['Int']['input']>;
  enableTotal?: InputMaybe<Scalars['Boolean']['input']>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type multiPostPostsEmailQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', totalCount: number | null, results: Array<(
      { __typename?: 'Post' }
      & PostsRevision
      & PostPodcastEpisode
    )> } | null };

export type getCrosspostPostsWithNavigationQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
}>;


export type getCrosspostPostsWithNavigationQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsWithNavigation
    ) | null } | null };

export type getCrosspostPostsWithNavigationAndRevisionQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
  version?: InputMaybe<Scalars['String']['input']>;
  sequenceId?: InputMaybe<Scalars['String']['input']>;
}>;


export type getCrosspostPostsWithNavigationAndRevisionQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsWithNavigationAndRevision
    ) | null } | null };

export type getCrosspostPostsListQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
}>;


export type getCrosspostPostsListQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsList
    ) | null } | null };

export type getCrosspostSunshinePostsListQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
}>;


export type getCrosspostSunshinePostsListQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & SunshinePostsList
    ) | null } | null };

export type getCrosspostPostsPageQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
}>;


export type getCrosspostPostsPageQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type PostMetadataQueryVariables = Exact<{
  postId?: InputMaybe<Scalars['String']['input']>;
}>;


export type PostMetadataQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: { __typename?: 'Post', _id: string, title: string, slug: string, isEvent: boolean, groupId: string | null, canonicalSource: string | null, coauthorUserIds: Array<string>, shortform: boolean, eventImageId: string | null, noIndex: boolean, rejected: boolean, baseScore: number, createdAt: string | null, socialPreviewData: { __typename?: 'SocialPreviewType', _id: string, imageUrl: string, text: string | null }, customHighlight: { __typename?: 'Revision', plaintextDescription: string } | null, contents: { __typename?: 'Revision', plaintextDescription: string } | null, user: { __typename?: 'User', _id: string, displayName: string } | null, coauthors: Array<{ __typename?: 'User', _id: string, displayName: string }> | null } | null } | null };

export type CommentPermalinkMetadataQueryVariables = Exact<{
  commentId?: InputMaybe<Scalars['String']['input']>;
}>;


export type CommentPermalinkMetadataQuery = { __typename?: 'Query', comment: { __typename?: 'SingleCommentOutput', result: { __typename?: 'Comment', _id: string, deleted: boolean, user: { __typename?: 'User', displayName: string } | null, contents: { __typename?: 'Revision', plaintextMainText: string } | null } | null } | null };

export type TagMetadataQueryVariables = Exact<{
  tagSlug?: InputMaybe<Scalars['String']['input']>;
}>;


export type TagMetadataQuery = { __typename?: 'Query', tags: { __typename?: 'MultiTagOutput', results: Array<{ __typename?: 'Tag', _id: string, name: string, noindex: boolean, description: { __typename?: 'Revision', _id: string, plaintextDescription: string } | null }> } | null };

export type UserMetadataQueryVariables = Exact<{
  slug?: InputMaybe<Scalars['String']['input']>;
}>;


export type UserMetadataQuery = { __typename?: 'Query', users: { __typename?: 'MultiUserOutput', results: Array<{ __typename?: 'User', _id: string, displayName: string, username: string | null, slug: string, profileImageId: string | null, postCount: number, commentCount: number, karma: number, noindex: boolean }> } | null };

export type singleDraftPostForLLMQueryQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
  version?: InputMaybe<Scalars['String']['input']>;
}>;


export type singleDraftPostForLLMQueryQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsEditQueryFragment
    ) | null } | null };

export type singlePublishedPostForLLMQueryQueryVariables = Exact<{
  input?: InputMaybe<SinglePostInput>;
}>;


export type singlePublishedPostForLLMQueryQuery = { __typename?: 'Query', post: { __typename?: 'SinglePostOutput', result: (
      { __typename?: 'Post' }
      & PostsPage
    ) | null } | null };

export type multiPostsForLLMQueryQueryVariables = Exact<{
  input?: InputMaybe<MultiPostInput>;
}>;


export type multiPostsForLLMQueryQuery = { __typename?: 'Query', posts: { __typename?: 'MultiPostOutput', results: Array<(
      { __typename?: 'Post' }
      & PostsPage
    )> } | null };

export type GetReviewWinnersQueryVariables = Exact<{ [key: string]: never; }>;


export type GetReviewWinnersQuery = { __typename?: 'Query', GetAllReviewWinners: Array<(
    { __typename?: 'Post' }
    & PostsTopItemInfo
  )> };

export type CommentsForEmbeddingsQueryVariables = Exact<{
  selector?: InputMaybe<CommentSelector>;
}>;


export type CommentsForEmbeddingsQuery = { __typename?: 'Query', comments: { __typename?: 'MultiCommentOutput', results: Array<{ __typename?: 'Comment', _id: string, postedAt: string, contents: { __typename?: 'Revision', _id: string, html: string | null } | null, user: { __typename?: 'User', _id: string, displayName: string, username: string | null, fullName: string | null } | null, post: { __typename?: 'Post', _id: string, title: string } | null }> } | null };

export const BookmarksMinimumInfoFragmentDoc = _o1(_1,[_12]) as unknown as DocumentNode<BookmarksMinimumInfoFragment, unknown>;
export const PostsMinimumInfoDoc = _o1(_1,[_26]) as unknown as DocumentNode<PostsMinimumInfo, unknown>;
export const PostsBaseDoc = _o1(_1,[_78,_26]) as unknown as DocumentNode<PostsBase, unknown>;
export const UsersMinimumInfoDoc = _o1(_1,[_96]) as unknown as DocumentNode<UsersMinimumInfo, unknown>;
export const PostsAuthorsDoc = _o1(_1,[_108,_96]) as unknown as DocumentNode<PostsAuthors, unknown>;
export const TagBasicInfoDoc = _o1(_1,[_119]) as unknown as DocumentNode<TagBasicInfo, unknown>;
export const TagPreviewFragmentDoc = _o1(_1,[_130,_119]) as unknown as DocumentNode<TagPreviewFragment, unknown>;
export const CommentsListDoc = _o1(_1,[_158,_119,_130,_96]) as unknown as DocumentNode<CommentsList, unknown>;
export const PostsListBaseDoc = _o1(_1,[_169,_26,_96,_119,_130,_78,_108,_158]) as unknown as DocumentNode<PostsListBase, unknown>;
export const PostsListDoc = _o1(_1,[_175,_26,_78,_96,_108,_119,_130,_158,_169]) as unknown as DocumentNode<PostsList, unknown>;
export const PostPodcastEpisodeDoc = _o1(_1,[_180]) as unknown as DocumentNode<PostPodcastEpisode, unknown>;
export const PostsListWithVotesDoc = _o1(_1,[_184,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180]) as unknown as DocumentNode<PostsListWithVotes, unknown>;
export const BookmarksWithDocumentFragmentDoc = _o1(_1,[_191,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_12,_184]) as unknown as DocumentNode<BookmarksWithDocumentFragment, unknown>;
export const UltraFeedCommentDoc = _o1(_1,[_193,_119,_130,_96,_26,_78,_108,_158,_169,_175,_180,_184]) as unknown as DocumentNode<UltraFeedComment, unknown>;
export const BookmarksFeedItemFragmentDoc = _o1(_1,[_200,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_12,_193]) as unknown as DocumentNode<BookmarksFeedItemFragment, unknown>;
export const RevisionDisplayDoc = _o1(_1,[_203]) as unknown as DocumentNode<RevisionDisplay, unknown>;
export const SequencesPageTitleFragmentDoc = _o1(_1,[_208]) as unknown as DocumentNode<SequencesPageTitleFragment, unknown>;
export const SequencesPageFragmentDoc = _o1(_1,[_219,_208,_96,_203]) as unknown as DocumentNode<SequencesPageFragment, unknown>;
export const ChaptersFragmentDoc = _o1(_1,[_229,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_203,_184]) as unknown as DocumentNode<ChaptersFragment, unknown>;
export const SequencesPageWithChaptersFragmentDoc = _o1(_1,[_235,_208,_96,_203,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_219,_229]) as unknown as DocumentNode<SequencesPageWithChaptersFragment, unknown>;
export const BookPageFragmentDoc = _o1(_1,[_239,_208,_96,_203,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235]) as unknown as DocumentNode<BookPageFragment, unknown>;
export const RevisionEditDoc = _o1(_1,[_249,_203]) as unknown as DocumentNode<RevisionEdit, unknown>;
export const BookEditDoc = _o1(_1,[_254,_203,_208,_96,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_249]) as unknown as DocumentNode<BookEdit, unknown>;
export const ChaptersEditDoc = _o1(_1,[_256,_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229,_249]) as unknown as DocumentNode<ChaptersEdit, unknown>;
export const CkEditorUserSessionInfoDoc = _o1(_1,[_o2(_2,_o3(_3,"CkEditorUserSessionInfo"),_o4(_5,_o3(_3,"CkEditorUserSession")),_o5(_7,[_10,_23,_258,_259,_o4(_8,_o3(_3,"endedBy"))]))]) as unknown as DocumentNode<CkEditorUserSessionInfo, unknown>;
export const ModeratorClientIDInfoDoc = _o1(_1,[_266,_96]) as unknown as DocumentNode<ModeratorClientIDInfo, unknown>;
export const CollectionContinueReadingFragmentDoc = _o1(_1,[_269]) as unknown as DocumentNode<CollectionContinueReadingFragment, unknown>;
export const CollectionsPageFragmentDoc = _o1(_1,[_272,_203,_208,_96,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239]) as unknown as DocumentNode<CollectionsPageFragment, unknown>;
export const CollectionsEditFragmentDoc = _o1(_1,[_275,_96,_203,_208,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_272,_249]) as unknown as DocumentNode<CollectionsEditFragment, unknown>;
export const CollectionsBestOfFragmentDoc = _o1(_1,[_277,_96,_203]) as unknown as DocumentNode<CollectionsBestOfFragment, unknown>;
export const ShortformCommentsDoc = _o1(_1,[_281,_119,_130,_96,_158,_26]) as unknown as DocumentNode<ShortformComments, unknown>;
export const FrontpageShortformCommentsDoc = _o1(_1,[_287,_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<FrontpageShortformComments, unknown>;
export const DraftCommentsDoc = _o1(_1,[_290,_119,_130,_96,_158,_26]) as unknown as DocumentNode<DraftComments, unknown>;
export const CommentEditDoc = _o1(_1,[_292,_119,_130,_96,_203,_158,_249]) as unknown as DocumentNode<CommentEdit, unknown>;
export const DeletedCommentsMetaDataDoc = _o1(_1,[_294]) as unknown as DocumentNode<DeletedCommentsMetaData, unknown>;
export const DeletedCommentsModerationLogDoc = _o1(_1,[_297,_294,_96]) as unknown as DocumentNode<DeletedCommentsModerationLog, unknown>;
export const CommentWithRepliesFragmentDoc = _o1(_1,[_301,_119,_130,_96,_26,_158,_78]) as unknown as DocumentNode<CommentWithRepliesFragment, unknown>;
export const StickySubforumCommentFragmentDoc = _o1(_1,[_304,_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<StickySubforumCommentFragment, unknown>;
export const WithVoteCommentDoc = _o1(_1,[_308]) as unknown as DocumentNode<WithVoteComment, unknown>;
export const CommentsListWithModGPTAnalysisDoc = _o1(_1,[_310,_119,_130,_96,_158,_26]) as unknown as DocumentNode<CommentsListWithModGPTAnalysis, unknown>;
export const PostsForAutocompleteDoc = _o1(_1,[_313,_96]) as unknown as DocumentNode<PostsForAutocomplete, unknown>;
export const CommentsForAutocompleteDoc = _o1(_1,[_316,_96,_313]) as unknown as DocumentNode<CommentsForAutocomplete, unknown>;
export const CommentsForAutocompleteWithParentsDoc = _o1(_1,[_320,_96,_313,_316]) as unknown as DocumentNode<CommentsForAutocompleteWithParents, unknown>;
export const SuggestAlignmentCommentDoc = _o1(_1,[_323,_119,_130,_96,_158,_26]) as unknown as DocumentNode<SuggestAlignmentComment, unknown>;
export const ConversationsMinimumInfoDoc = _o1(_1,[_328]) as unknown as DocumentNode<ConversationsMinimumInfo, unknown>;
export const messageListFragmentDoc = _o1(_1,[_333,_96]) as unknown as DocumentNode<messageListFragment, unknown>;
export const ConversationsListDoc = _o1(_1,[_337,_96,_328,_333]) as unknown as DocumentNode<ConversationsList, unknown>;
export const ConversationsListWithReadStatusDoc = _o1(_1,[_340,_328,_96,_333,_337]) as unknown as DocumentNode<ConversationsListWithReadStatus, unknown>;
export const DigestPostsMinimumInfoDoc = _o1(_1,[_345]) as unknown as DocumentNode<DigestPostsMinimumInfo, unknown>;
export const DigestsMinimumInfoDoc = _o1(_1,[_352]) as unknown as DocumentNode<DigestsMinimumInfo, unknown>;
export const ElectionCandidateBasicInfoDoc = _o1(_1,[_o2(_2,_o3(_3,"ElectionCandidateBasicInfo"),_353,_o5(_7,[_10,_o4(_8,_354),_74,_o4(_8,_o3(_3,"logoSrc")),_o4(_8,_o3(_3,"href")),_o4(_8,_o3(_3,"fundraiserLink")),_o4(_8,_o3(_3,"gwwcLink")),_o4(_8,_o3(_3,"gwwcId")),_355,_136,_299,_94,_40,_43,_41,_39,_117,_118])),_119]) as unknown as DocumentNode<ElectionCandidateBasicInfo, unknown>;
export const WithVoteElectionCandidateDoc = _o1(_1,[_358]) as unknown as DocumentNode<WithVoteElectionCandidate, unknown>;
export const ElicitQuestionFragmentDoc = _o1(_1,[_363]) as unknown as DocumentNode<ElicitQuestionFragment, unknown>;
export const FeaturedResourcesFragmentDoc = _o1(_1,[_365]) as unknown as DocumentNode<FeaturedResourcesFragment, unknown>;
export const FieldChangeFragmentDoc = _o1(_1,[_369]) as unknown as DocumentNode<FieldChangeFragment, unknown>;
export const ForumEventsMinimumInfoDoc = _o1(_1,[_374]) as unknown as DocumentNode<ForumEventsMinimumInfo, unknown>;
export const ForumEventsDisplayDoc = _o1(_1,[_382,_374,_26,_119]) as unknown as DocumentNode<ForumEventsDisplay, unknown>;
export const ForumEventsEditDoc = _o1(_1,[_384,_203,_374,_249]) as unknown as DocumentNode<ForumEventsEdit, unknown>;
export const GoogleServiceAccountSessionInfoDoc = _o1(_1,[_o2(_2,_o3(_3,"GoogleServiceAccountSessionInfo"),_385,_o5(_7,[_10,_387]))]) as unknown as DocumentNode<GoogleServiceAccountSessionInfo, unknown>;
export const GoogleServiceAccountSessionAdminInfoDoc = _o1(_1,[_389]) as unknown as DocumentNode<GoogleServiceAccountSessionAdminInfo, unknown>;
export const JargonTermsDoc = _o1(_1,[_396,_203,_249]) as unknown as DocumentNode<JargonTerms, unknown>;
export const LlmConversationsFragmentDoc = _o1(_1,[_399]) as unknown as DocumentNode<LlmConversationsFragment, unknown>;
export const LlmConversationsViewingPageFragmentDoc = _o1(_1,[_402,_399,_96]) as unknown as DocumentNode<LlmConversationsViewingPageFragment, unknown>;
export const LlmMessagesFragmentDoc = _o1(_1,[_405]) as unknown as DocumentNode<LlmMessagesFragment, unknown>;
export const LlmConversationsWithMessagesFragmentDoc = _o1(_1,[_408,_399,_405]) as unknown as DocumentNode<LlmConversationsWithMessagesFragment, unknown>;
export const localGroupsBaseDoc = _o1(_1,[_413,_96]) as unknown as DocumentNode<localGroupsBase, unknown>;
export const localGroupsHomeFragmentDoc = _o1(_1,[_416,_96,_413,_203]) as unknown as DocumentNode<localGroupsHomeFragment, unknown>;
export const localGroupsEditDoc = _o1(_1,[_418,_96,_203,_413,_249]) as unknown as DocumentNode<localGroupsEdit, unknown>;
export const localGroupsIsOnlineDoc = _o1(_1,[_420]) as unknown as DocumentNode<localGroupsIsOnline, unknown>;
export const newEventFragmentDoc = _o1(_1,[_426]) as unknown as DocumentNode<newEventFragment, unknown>;
export const lastEventFragmentDoc = _o1(_1,[_428]) as unknown as DocumentNode<lastEventFragment, unknown>;
export const emailHistoryFragmentDoc = _o1(_1,[_430]) as unknown as DocumentNode<emailHistoryFragment, unknown>;
export const WithVoteMessageDoc = _o1(_1,[_432]) as unknown as DocumentNode<WithVoteMessage, unknown>;
export const ModerationTemplateFragmentDoc = _o1(_1,[_435,_203,_249]) as unknown as DocumentNode<ModerationTemplateFragment, unknown>;
export const MultiDocumentMinimumInfoDoc = _o1(_1,[_443]) as unknown as DocumentNode<MultiDocumentMinimumInfo, unknown>;
export const WithVoteMultiDocumentDoc = _o1(_1,[_447,_443]) as unknown as DocumentNode<WithVoteMultiDocument, unknown>;
export const NotificationsListDoc = _o1(_1,[_451]) as unknown as DocumentNode<NotificationsList, unknown>;
export const PetrovDayActionInfoDoc = _o1(_1,[_453]) as unknown as DocumentNode<PetrovDayActionInfo, unknown>;
export const PodcastEpisodeCreateFragmentDoc = _o1(_1,[_458]) as unknown as DocumentNode<PodcastEpisodeCreateFragment, unknown>;
export const PodcastEpisodeFullDoc = _o1(_1,[_460]) as unknown as DocumentNode<PodcastEpisodeFull, unknown>;
export const PodcastSelectDoc = _o1(_1,[_462]) as unknown as DocumentNode<PodcastSelect, unknown>;
export const SplashArtCoordinatesDoc = _o1(_1,[_466]) as unknown as DocumentNode<SplashArtCoordinates, unknown>;
export const SplashArtCoordinatesEditDoc = _o1(_1,[_469,_466]) as unknown as DocumentNode<SplashArtCoordinatesEdit, unknown>;
export const ReviewWinnerTopPostsPageDoc = _o1(_1,[_479,_466,_469]) as unknown as DocumentNode<ReviewWinnerTopPostsPage, unknown>;
export const PostsTopItemInfoDoc = _o1(_1,[_483,_466,_469,_26,_479]) as unknown as DocumentNode<PostsTopItemInfo, unknown>;
export const PostsWithVotesDoc = _o1(_1,[_o2(_2,_o3(_3,"PostsWithVotes"),_14,_o5(_7,[_160,_117,_118])),_26,_78]) as unknown as DocumentNode<PostsWithVotes, unknown>;
export const PostsListWithVotesAndSequenceDoc = _o1(_1,[_487,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_208,_203,_184,_219]) as unknown as DocumentNode<PostsListWithVotesAndSequence, unknown>;
export const RSSFeedMinimumInfoDoc = _o1(_1,[_494,_96]) as unknown as DocumentNode<RSSFeedMinimumInfo, unknown>;
export const PostsDetailsDoc = _o1(_1,[_502,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_494,_184]) as unknown as DocumentNode<PostsDetails, unknown>;
export const UltraFeedPostFragmentDoc = _o1(_1,[_506,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<UltraFeedPostFragment, unknown>;
export const PostsReviewVotingListDoc = _o1(_1,[_512,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<PostsReviewVotingList, unknown>;
export const PostsModerationGuidelinesDoc = _o1(_1,[_515,_26]) as unknown as DocumentNode<PostsModerationGuidelines, unknown>;
export const CurationNoticesFragmentDoc = _o1(_1,[_517,_119,_130,_96,_203,_158,_26,_249]) as unknown as DocumentNode<CurationNoticesFragment, unknown>;
export const SunshineCurationPostsListDoc = _o1(_1,[_521,_26,_78,_96,_108,_119,_130,_158,_169,_203,_249,_175,_517]) as unknown as DocumentNode<SunshineCurationPostsList, unknown>;
export const WithVoteTagRelDoc = _o1(_1,[_524]) as unknown as DocumentNode<WithVoteTagRel, unknown>;
export const PostsListTagDoc = _o1(_1,[_o2(_2,_o3(_3,"PostsListTag"),_14,_o5(_7,[_182,_531])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_524]) as unknown as DocumentNode<PostsListTag, unknown>;
export const PostsListTagWithVotesDoc = _o1(_1,[_533,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_524]) as unknown as DocumentNode<PostsListTagWithVotes, unknown>;
export const PostsExpandedHighlightDoc = _o1(_1,[_535]) as unknown as DocumentNode<PostsExpandedHighlight, unknown>;
export const PostsPlaintextDescriptionDoc = _o1(_1,[_538]) as unknown as DocumentNode<PostsPlaintextDescription, unknown>;
export const RevisionMetadataDoc = _o1(_1,[_540]) as unknown as DocumentNode<RevisionMetadata, unknown>;
export const PostsRevisionDoc = _o1(_1,[_548,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540]) as unknown as DocumentNode<PostsRevision, unknown>;
export const PostSequenceNavigationDoc = _o1(_1,[_558,_208,_96,_203,_26,_78,_108,_119,_130,_158,_169,_175,_180,_219,_184]) as unknown as DocumentNode<PostSequenceNavigation, unknown>;
export const ReviewWinnerArtImagesDoc = _o1(_1,[_560,_466,_469]) as unknown as DocumentNode<ReviewWinnerArtImages, unknown>;
export const ReviewWinnerAllDoc = _o1(_1,[_564,_466,_469,_560]) as unknown as DocumentNode<ReviewWinnerAll, unknown>;
export const JargonTermsPostDoc = _o1(_1,[_566,_203]) as unknown as DocumentNode<JargonTermsPost, unknown>;
export const PostsWithNavigationAndRevisionDoc = _o1(_1,[_572,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_208,_219,_466,_469,_560,_548,_558,_564,_566]) as unknown as DocumentNode<PostsWithNavigationAndRevision, unknown>;
export const PostsPageDoc = _o1(_1,[_575,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203]) as unknown as DocumentNode<PostsPage, unknown>;
export const PostsWithNavigationDoc = _o1(_1,[_580,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_208,_219,_466,_469,_560,_575,_558,_564,_566]) as unknown as DocumentNode<PostsWithNavigation, unknown>;
export const SideCommentCacheMinimumInfoDoc = _o1(_1,[_582]) as unknown as DocumentNode<SideCommentCacheMinimumInfo, unknown>;
export const PostSideCommentsDoc = _o1(_1,[_584,_582]) as unknown as DocumentNode<PostSideComments, unknown>;
export const PostsEditDoc = _o1(_1,[_589,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_582,_203,_502,_584,_249]) as unknown as DocumentNode<PostsEdit, unknown>;
export const PostsEditQueryFragmentDoc = _o1(_1,[_593,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<PostsEditQueryFragment, unknown>;
export const PostsEditMutationFragmentDoc = _o1(_1,[_595,_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<PostsEditMutationFragment, unknown>;
export const PostsRevisionsListDoc = _o1(_1,[_597,_540]) as unknown as DocumentNode<PostsRevisionsList, unknown>;
export const PostsRecentDiscussionDoc = _o1(_1,[_608,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<PostsRecentDiscussion, unknown>;
export const CommentsListWithTopLevelCommentDoc = _o1(_1,[_611,_119,_130,_96,_158]) as unknown as DocumentNode<CommentsListWithTopLevelComment, unknown>;
export const ShortformRecentDiscussionDoc = _o1(_1,[_614,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_611]) as unknown as DocumentNode<ShortformRecentDiscussion, unknown>;
export const UsersBannedFromPostsModerationLogDoc = _o1(_1,[_616,_96]) as unknown as DocumentNode<UsersBannedFromPostsModerationLog, unknown>;
export const AutomatedContentEvaluationsFragmentDoc = _o1(_1,[_618]) as unknown as DocumentNode<AutomatedContentEvaluationsFragment, unknown>;
export const ModeratorActionDisplayDoc = _o1(_1,[_620,_96]) as unknown as DocumentNode<ModeratorActionDisplay, unknown>;
export const SunshinePostsListDoc = _o1(_1,[_628,_26,_78,_96,_108,_119,_130,_158,_169,_618,_203,_620]) as unknown as DocumentNode<SunshinePostsList, unknown>;
export const WithVotePostDoc = _o1(_1,[_630]) as unknown as DocumentNode<WithVotePost, unknown>;
export const HighlightWithHashDoc = _o1(_1,[_636]) as unknown as DocumentNode<HighlightWithHash, unknown>;
export const PostWithDialogueMessageDoc = _o1(_1,[_640]) as unknown as DocumentNode<PostWithDialogueMessage, unknown>;
export const PostWithGeneratedSummaryDoc = _o1(_1,[_642]) as unknown as DocumentNode<PostWithGeneratedSummary, unknown>;
export const PostsBestOfListDoc = _o1(_1,[_644,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<PostsBestOfList, unknown>;
export const PostsRSSFeedDoc = _o1(_1,[_o2(_2,_o3(_3,"PostsRSSFeed"),_14,_o5(_7,[_577,_o4(_8,_o3(_3,"scoreExceeded2Date")),_o4(_8,_o3(_3,"scoreExceeded30Date")),_o4(_8,_o3(_3,"scoreExceeded45Date")),_o4(_8,_o3(_3,"scoreExceeded75Date")),_o4(_8,_o3(_3,"scoreExceeded125Date")),_o4(_8,_o3(_3,"scoreExceeded200Date")),_o4(_8,_o3(_3,"metaDate"))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<PostsRSSFeed, unknown>;
export const PostsOriginalContentsDoc = _o1(_1,[_o2(_2,_o3(_3,"PostsOriginalContents"),_14,_o5(_7,[_10,_o6(_8,_146,_o5(_7,[_10,_247]))]))]) as unknown as DocumentNode<PostsOriginalContents, unknown>;
export const RevisionHTMLDoc = _o1(_1,[_646]) as unknown as DocumentNode<RevisionHTML, unknown>;
export const PostsHTMLDoc = _o1(_1,[_o2(_2,_o3(_3,"PostsHTML"),_14,_o5(_7,[_10,_o6(_8,_146,_o5(_7,[_o4(_28,_645)]))])),_646]) as unknown as DocumentNode<PostsHTML, unknown>;
export const UsersProfileDoc = _o1(_1,[_675,_96,_203]) as unknown as DocumentNode<UsersProfile, unknown>;
export const UsersSocialMediaInfoDoc = _o1(_1,[_679,_96,_203,_675]) as unknown as DocumentNode<UsersSocialMediaInfo, unknown>;
export const PostsTwitterAdminDoc = _o1(_1,[_682,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_203,_675,_184,_679]) as unknown as DocumentNode<PostsTwitterAdmin, unknown>;
export const SuggestAlignmentPostDoc = _o1(_1,[_684,_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<SuggestAlignmentPost, unknown>;
export const SunshineUsersListDoc = _o1(_1,[_690,_96,_620]) as unknown as DocumentNode<SunshineUsersList, unknown>;
export const UnclaimedReportsListDoc = _o1(_1,[_696,_119,_130,_96,_26,_78,_108,_158,_169,_620,_175,_690]) as unknown as DocumentNode<UnclaimedReportsList, unknown>;
export const reviewVoteFragmentDoc = _o1(_1,[_701]) as unknown as DocumentNode<reviewVoteFragment, unknown>;
export const reviewAdminDashboardDoc = _o1(_1,[_703]) as unknown as DocumentNode<reviewAdminDashboard, unknown>;
export const ReviewWinnerAnnouncementDoc = _o1(_1,[_705]) as unknown as DocumentNode<ReviewWinnerAnnouncement, unknown>;
export const RevisionMetadataWithChangeMetricsDoc = _o1(_1,[_708,_540,_96]) as unknown as DocumentNode<RevisionMetadataWithChangeMetrics, unknown>;
export const RevisionHistoryEntryDoc = _o1(_1,[_710,_540,_96]) as unknown as DocumentNode<RevisionHistoryEntry, unknown>;
export const RevisionHistorySummaryEditDoc = _o1(_1,[_713,_540,_96,_710,_443]) as unknown as DocumentNode<RevisionHistorySummaryEdit, unknown>;
export const TagDetailsFragmentDoc = _o1(_1,[_717,_208,_96,_203,_119,_219]) as unknown as DocumentNode<TagDetailsFragment, unknown>;
export const TagFragmentDoc = _o1(_1,[_720,_119,_96,_208,_203,_219,_717]) as unknown as DocumentNode<TagFragment, unknown>;
export const MultiDocumentContentDisplayDoc = _o1(_1,[_723,_203,_443,_249]) as unknown as DocumentNode<MultiDocumentContentDisplay, unknown>;
export const TagHistoryFragmentDoc = _o1(_1,[_728,_119,_96,_208,_203,_219,_717,_443,_249,_720,_723]) as unknown as DocumentNode<TagHistoryFragment, unknown>;
export const ArbitalLinkedPagesFragmentDoc = _o1(_1,[_731]) as unknown as DocumentNode<ArbitalLinkedPagesFragment, unknown>;
export const MultiDocumentEditDoc = _o1(_1,[_735,_443,_203,_249,_723,_731]) as unknown as DocumentNode<MultiDocumentEdit, unknown>;
export const MultiDocumentParentDocumentDoc = _o1(_1,[_739,_443,_203,_249,_723,_731,_119,_96,_208,_219,_717,_720,_735,_728]) as unknown as DocumentNode<MultiDocumentParentDocument, unknown>;
export const RevisionTagFragmentDoc = _o1(_1,[_744,_540,_96,_119,_208,_203,_219,_717,_720,_443,_249,_723,_731,_735,_728,_710,_739]) as unknown as DocumentNode<RevisionTagFragment, unknown>;
export const TagRecentDiscussionDoc = _o1(_1,[_748,_119,_96,_208,_203,_219,_717,_130,_720,_158]) as unknown as DocumentNode<TagRecentDiscussion, unknown>;
export const RecentDiscussionRevisionTagFragmentDoc = _o1(_1,[_751,_540,_96,_119,_208,_203,_219,_717,_720,_130,_158,_710,_748]) as unknown as DocumentNode<RecentDiscussionRevisionTagFragment, unknown>;
export const WithVoteRevisionDoc = _o1(_1,[_753]) as unknown as DocumentNode<WithVoteRevision, unknown>;
export const newRSSFeedFragmentDoc = _o1(_1,[_755]) as unknown as DocumentNode<newRSSFeedFragment, unknown>;
export const SequenceContinueReadingFragmentDoc = _o1(_1,[_757]) as unknown as DocumentNode<SequenceContinueReadingFragment, unknown>;
export const SequencesEditDoc = _o1(_1,[_759,_208,_96,_203,_219,_249]) as unknown as DocumentNode<SequencesEdit, unknown>;
export const SpotlightMinimumInfoDoc = _o1(_1,[_762]) as unknown as DocumentNode<SpotlightMinimumInfo, unknown>;
export const SpotlightHeaderEventSubtitleDoc = _o1(_1,[_765,_762]) as unknown as DocumentNode<SpotlightHeaderEventSubtitle, unknown>;
export const SpotlightEditQueryFragmentDoc = _o1(_1,[_768,_203,_762,_249]) as unknown as DocumentNode<SpotlightEditQueryFragment, unknown>;
export const SubscriptionStateDoc = _o1(_1,[_771]) as unknown as DocumentNode<SubscriptionState, unknown>;
export const MembersOfGroupFragmentDoc = _o1(_1,[_773,_96]) as unknown as DocumentNode<MembersOfGroupFragment, unknown>;
export const SurveyResponseMinimumInfoDoc = _o1(_1,[_778]) as unknown as DocumentNode<SurveyResponseMinimumInfo, unknown>;
export const SurveyQuestionMinimumInfoDoc = _o1(_1,[_780]) as unknown as DocumentNode<SurveyQuestionMinimumInfo, unknown>;
export const SurveyMinimumInfoDoc = _o1(_1,[_783,_780]) as unknown as DocumentNode<SurveyMinimumInfo, unknown>;
export const SurveyScheduleMinimumInfoDoc = _o1(_1,[_788,_780,_783]) as unknown as DocumentNode<SurveyScheduleMinimumInfo, unknown>;
export const SurveyScheduleEditDoc = _o1(_1,[_791,_780,_783,_788]) as unknown as DocumentNode<SurveyScheduleEdit, unknown>;
export const TagFlagFragmentDoc = _o1(_1,[_794]) as unknown as DocumentNode<TagFlagFragment, unknown>;
export const TagFlagEditFragmentDoc = _o1(_1,[_797,_203,_794,_249]) as unknown as DocumentNode<TagFlagEditFragment, unknown>;
export const TagRelBasicInfoDoc = _o1(_1,[_799]) as unknown as DocumentNode<TagRelBasicInfo, unknown>;
export const TagRelHistoryFragmentDoc = _o1(_1,[_802,_26,_78,_96,_108,_119,_130,_158,_169,_799,_175]) as unknown as DocumentNode<TagRelHistoryFragment, unknown>;
export const TagRelCreationFragmentDoc = _o1(_1,[_805,_119,_26,_78,_96,_108,_130,_158,_169,_799,_175,_524]) as unknown as DocumentNode<TagRelCreationFragment, unknown>;
export const TagRelMinimumFragmentDoc = _o1(_1,[_808,_119,_799,_130]) as unknown as DocumentNode<TagRelMinimumFragment, unknown>;
export const TagCreationHistoryFragmentDoc = _o1(_1,[_812,_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<TagCreationHistoryFragment, unknown>;
export const TagSectionPreviewFragmentDoc = _o1(_1,[_814,_119]) as unknown as DocumentNode<TagSectionPreviewFragment, unknown>;
export const TagSubforumFragmentDoc = _o1(_1,[_o2(_2,_o3(_3,"TagSubforumFragment"),_110,_o5(_7,[_141,_715,_579,_816])),_119,_130]) as unknown as DocumentNode<TagSubforumFragment, unknown>;
export const TagSubtagFragmentDoc = _o1(_1,[_818,_119,_130]) as unknown as DocumentNode<TagSubtagFragment, unknown>;
export const TagSubforumSidebarFragmentDoc = _o1(_1,[_820,_119]) as unknown as DocumentNode<TagSubforumSidebarFragment, unknown>;
export const TagWithFlagsFragmentDoc = _o1(_1,[_826,_119,_96,_208,_203,_219,_717,_720,_794]) as unknown as DocumentNode<TagWithFlagsFragment, unknown>;
export const TagPageFragmentDoc = _o1(_1,[_840,_119,_96,_208,_203,_219,_717,_720,_794,_26,_78,_108,_130,_158,_169,_175,_180,_826,_184]) as unknown as DocumentNode<TagPageFragment, unknown>;
export const MultiDocumentWithContributorsDoc = _o1(_1,[_842,_443,_203,_249,_723,_731,_735,_96]) as unknown as DocumentNode<MultiDocumentWithContributors, unknown>;
export const TagPageArbitalContentFragmentDoc = _o1(_1,[_845,_443,_203,_249,_723,_731,_735,_96,_842]) as unknown as DocumentNode<TagPageArbitalContentFragment, unknown>;
export const TagPageWithArbitalContentFragmentDoc = _o1(_1,[_849,_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_443,_249,_723,_731,_735,_842,_840,_845]) as unknown as DocumentNode<TagPageWithArbitalContentFragment, unknown>;
export const AllTagsPageFragmentDoc = _o1(_1,[_851,_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<AllTagsPageFragment, unknown>;
export const TagRevisionFragmentDoc = _o1(_1,[_853,_119,_96,_208,_203,_219,_717]) as unknown as DocumentNode<TagRevisionFragment, unknown>;
export const TagWithFlagsAndRevisionFragmentDoc = _o1(_1,[_855,_119,_96,_208,_203,_219,_717,_853,_794]) as unknown as DocumentNode<TagWithFlagsAndRevisionFragment, unknown>;
export const TagPageWithRevisionFragmentDoc = _o1(_1,[_858,_119,_96,_208,_203,_219,_717,_853,_794,_26,_78,_108,_130,_158,_169,_175,_180,_855,_184]) as unknown as DocumentNode<TagPageWithRevisionFragment, unknown>;
export const TagPageRevisionWithArbitalContentFragmentDoc = _o1(_1,[_861,_119,_96,_208,_203,_219,_717,_853,_794,_855,_26,_78,_108,_130,_158,_169,_175,_180,_184,_443,_249,_723,_731,_735,_842,_858,_845]) as unknown as DocumentNode<TagPageRevisionWithArbitalContentFragment, unknown>;
export const TagFullContributorsListDoc = _o1(_1,[_863,_96]) as unknown as DocumentNode<TagFullContributorsList, unknown>;
export const TagEditFragmentDoc = _o1(_1,[_865,_119,_96,_208,_203,_219,_717,_249]) as unknown as DocumentNode<TagEditFragment, unknown>;
export const SunshineTagFragmentDoc = _o1(_1,[_867,_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<SunshineTagFragment, unknown>;
export const UserOnboardingTagDoc = _o1(_1,[_869]) as unknown as DocumentNode<UserOnboardingTag, unknown>;
export const TagNameDoc = _o1(_1,[_871]) as unknown as DocumentNode<TagName, unknown>;
export const ExplorePageTagFragmentDoc = _o1(_1,[_873,_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<ExplorePageTagFragment, unknown>;
export const ConceptItemFragmentDoc = _o1(_1,[_876]) as unknown as DocumentNode<ConceptItemFragment, unknown>;
export const MultiDocumentRevisionDoc = _o1(_1,[_878,_203,_443,_249]) as unknown as DocumentNode<MultiDocumentRevision, unknown>;
export const MultiDocumentWithContributorsRevisionDoc = _o1(_1,[_880,_443,_203,_249,_878,_96,_731]) as unknown as DocumentNode<MultiDocumentWithContributorsRevision, unknown>;
export const TagPageWithArbitalContentAndLensRevisionFragmentDoc = _o1(_1,[_884,_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_443,_249,_878,_731,_840,_880]) as unknown as DocumentNode<TagPageWithArbitalContentAndLensRevisionFragment, unknown>;
export const WithVoteTagDoc = _o1(_1,[_886,_119]) as unknown as DocumentNode<WithVoteTag, unknown>;
export const UserEAGDetailsMinimumInfoDoc = _o1(_1,[_888]) as unknown as DocumentNode<UserEAGDetailsMinimumInfo, unknown>;
export const UserJobAdsMinimumInfoDoc = _o1(_1,[_890]) as unknown as DocumentNode<UserJobAdsMinimumInfo, unknown>;
export const UserMostValuablePostInfoDoc = _o1(_1,[_892]) as unknown as DocumentNode<UserMostValuablePostInfo, unknown>;
export const UserRateLimitMutationFragmentDoc = _o1(_1,[_898]) as unknown as DocumentNode<UserRateLimitMutationFragment, unknown>;
export const UserRateLimitDisplayDoc = _o1(_1,[_900,_96]) as unknown as DocumentNode<UserRateLimitDisplay, unknown>;
export const UserTagRelDetailsDoc = _o1(_1,[_902]) as unknown as DocumentNode<UserTagRelDetails, unknown>;
export const UsersCurrentCommentRateLimitDoc = _o1(_1,[_907]) as unknown as DocumentNode<UsersCurrentCommentRateLimit, unknown>;
export const UsersCurrentPostRateLimitDoc = _o1(_1,[_911]) as unknown as DocumentNode<UsersCurrentPostRateLimit, unknown>;
export const UserKarmaChangesDoc = _o1(_1,[_926]) as unknown as DocumentNode<UserKarmaChanges, unknown>;
export const UsersBannedFromUsersModerationLogDoc = _o1(_1,[_929]) as unknown as DocumentNode<UsersBannedFromUsersModerationLog, unknown>;
export const UserAltAccountsFragmentDoc = _o1(_1,[_931,_96,_620,_690]) as unknown as DocumentNode<UserAltAccountsFragment, unknown>;
export const UsersMapEntryDoc = _o1(_1,[_935]) as unknown as DocumentNode<UsersMapEntry, unknown>;
export const UsersCurrentDoc = _o1(_1,[_968,_96,_203]) as unknown as DocumentNode<UsersCurrent, unknown>;
export const UsersEditDoc = _o1(_1,[_975,_96,_203,_675,_968,_249]) as unknown as DocumentNode<UsersEdit, unknown>;
export const UsersWithReviewInfoDoc = _o1(_1,[_o2(_2,_o3(_3,"UsersWithReviewInfo"),_80,_o5(_7,[_99,_72,_387])),_96]) as unknown as DocumentNode<UsersWithReviewInfo, unknown>;
export const UsersProfileEditDoc = _o1(_1,[_979,_203,_96,_249,_413]) as unknown as DocumentNode<UsersProfileEdit, unknown>;
export const UsersCrosspostInfoDoc = _o1(_1,[_981]) as unknown as DocumentNode<UsersCrosspostInfo, unknown>;
export const UserOnboardingAuthorDoc = _o1(_1,[_983]) as unknown as DocumentNode<UserOnboardingAuthor, unknown>;
export const SuggestAlignmentUserDoc = _o1(_1,[_985,_96]) as unknown as DocumentNode<SuggestAlignmentUser, unknown>;
export const TagRelVotesDoc = _o1(_1,[_993,_524]) as unknown as DocumentNode<TagRelVotes, unknown>;
export const TagRelFragmentDoc = _o1(_1,[_995,_119,_26,_78,_96,_108,_130,_158,_169,_799,_175]) as unknown as DocumentNode<TagRelFragment, unknown>;
export const TagVotingActivityDoc = _o1(_1,[_998,_524,_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_993,_995]) as unknown as DocumentNode<TagVotingActivity, unknown>;
export const UserVotesDoc = _o1(_1,[_1000]) as unknown as DocumentNode<UserVotes, unknown>;
export const CommentsListWithParentMetadataDoc = _o1(_1,[_1002,_119,_130,_96,_158,_26]) as unknown as DocumentNode<CommentsListWithParentMetadata, unknown>;
export const UserVotesWithDocumentDoc = _o1(_1,[_1006,_119,_130,_96,_158,_26,_78,_108,_169,_175,_180,_1000,_1002,_184]) as unknown as DocumentNode<UserVotesWithDocument, unknown>;
export const SubscribedPostAndCommentsFeedDoc = _o1(_1,[_1008,_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<SubscribedPostAndCommentsFeed, unknown>;
export const FeedPostFragmentDoc = _o1(_1,[_1010,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<FeedPostFragment, unknown>;
export const FeedCommentThreadFragmentDoc = _o1(_1,[_1012,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_193]) as unknown as DocumentNode<FeedCommentThreadFragment, unknown>;
export const SpotlightDisplayDoc = _o1(_1,[_1014,_762,_96]) as unknown as DocumentNode<SpotlightDisplay, unknown>;
export const FeedSpotlightFragmentDoc = _o1(_1,[_1019,_762,_96,_26,_78,_108,_119,_130,_158,_169,_175,_180,_1014,_184]) as unknown as DocumentNode<FeedSpotlightFragment, unknown>;
export const FeedSubscriptionSuggestionsFragmentDoc = _o1(_1,[_1021,_96]) as unknown as DocumentNode<FeedSubscriptionSuggestionsFragment, unknown>;
export const LocalgroupMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LocalgroupMetadata"),[_o12(_1024,_1025,_1026)],_o5(_7,[_o7(_8,_1027,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_9,_1025)]))],_o5(_7,[_o6(_8,_1031,_o5(_7,[_10,_74,_215,_1033]))]))]))]) as unknown as DocumentNode<LocalgroupMetadataQuery, LocalgroupMetadataQueryVariables>;
export const multiModeratorCommentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiModeratorCommentsQuery"),[_o12(_1024,_1035,_1039)],_o5(_7,[_o7(_8,_917,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"default"),_o13(_1029,[_o8(_1030,_1034,_1035)]))]))],_o5(_7,[_1041]))])),_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<multiModeratorCommentsQueryQuery, multiModeratorCommentsQueryQueryVariables>;
export const SequenceMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SequenceMetadata"),[_1042],_o5(_7,[_o7(_8,_550,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_9,_551)]))],_o5(_7,[_o6(_8,_1031,_206)]))]))]) as unknown as DocumentNode<SequenceMetadataQuery, SequenceMetadataQueryVariables>;
export const updateUserLayoutDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserLayout"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserLayoutMutation, updateUserLayoutMutationVariables>;
export const AdminMetadataQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"AdminMetadataQuery"),_o5(_7,[_o4(_8,_o3(_3,"AdminMetadata"))]))]) as unknown as DocumentNode<AdminMetadataQueryQuery, AdminMetadataQueryQueryVariables>;
export const SearchSynonymsDocument = _o1(_1,[_o15(_1022,_1023,_1054,_o5(_7,[_o4(_8,_1054)]))]) as unknown as DocumentNode<SearchSynonymsQuery, SearchSynonymsQueryVariables>;
export const UpdateSearchSynonymsDocument = _o1(_1,[_o11(_1022,_1043,_1055,[_o12(_1024,_1057,_1039)],_o5(_7,[_o10(_8,_1055,[_o8(_526,_1056,_1057)])]))]) as unknown as DocumentNode<UpdateSearchSynonymsMutation, UpdateSearchSynonymsMutationVariables>;
export const updateCurationNoticeCurationNoticesFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCurationNoticeCurationNoticesForm"),_1058,_1060),_96,_119,_130,_158,_26,_203,_249,_517]) as unknown as DocumentNode<updateCurationNoticeCurationNoticesFormMutation, updateCurationNoticeCurationNoticesFormMutationVariables>;
export const createCurationNoticeCurationNoticesFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createCurationNoticeCurationNoticesForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateCurationNoticeDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createCurationNotice"),_1061,_1059)])),_96,_119,_130,_158,_26,_203,_249,_517]) as unknown as DocumentNode<createCurationNoticeCurationNoticesFormMutation, createCurationNoticeCurationNoticesFormMutationVariables>;
export const updatePostCurationNoticesItem1Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostCurationNoticesItem1"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostCurationNoticesItem1Mutation, updatePostCurationNoticesItem1MutationVariables>;
export const updateCurationNoticeCurationNoticesItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCurationNoticeCurationNoticesItem"),_1058,_1060),_96,_119,_130,_158,_26,_203,_249,_517]) as unknown as DocumentNode<updateCurationNoticeCurationNoticesItemMutation, updateCurationNoticeCurationNoticesItemMutationVariables>;
export const createCommentCurationNoticesItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createCommentCurationNoticesItem"),_1065,_1068),_119,_130,_96,_158]) as unknown as DocumentNode<createCommentCurationNoticesItemMutation, createCommentCurationNoticesItemMutationVariables>;
export const multiCurationNoticeCurationPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCurationNoticeCurationPageQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"CurationNoticeSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_519,_1077,_o5(_7,[_o6(_8,_1040,_520),_835]))])),_96,_119,_130,_158,_26,_203,_249,_517]) as unknown as DocumentNode<multiCurationNoticeCurationPageQueryQuery, multiCurationNoticeCurationPageQueryQueryVariables>;
export const randomUserDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"randomUser"),[_o12(_1024,_1079,_1038)],_o5(_7,[_o7(_8,_o3(_3,"GetRandomUser"),[_o8(_526,_1078,_1079)],_106)])),_96]) as unknown as DocumentNode<randomUserQuery, randomUserQueryVariables>;
export const CrossedKarmaThresholdDocument = _o1(_1,[_o11(_1022,_1023,_1080,_1083,_o5(_7,[_o7(_8,_1080,_1084,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_680)]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_203,_675,_679,_682]) as unknown as DocumentNode<CrossedKarmaThresholdQuery, CrossedKarmaThresholdQueryVariables>;
export const MigrationsDashboardQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"MigrationsDashboardQuery"),_o5(_7,[_o6(_8,_o3(_3,"MigrationsDashboard"),_o5(_7,[_o6(_8,_o3(_3,"migrations"),_o5(_7,[_74,_o4(_8,_o3(_3,"dateWritten")),_o6(_8,_o3(_3,"runs"),_o5(_7,[_74,_o4(_8,_o3(_3,"started")),_o4(_8,_o3(_3,"finished")),_o4(_8,_o3(_3,"succeeded"))])),_o4(_8,_o3(_3,"lastRun"))]))]))]))]) as unknown as DocumentNode<MigrationsDashboardQueryQuery, MigrationsDashboardQueryQueryVariables>;
export const multiCommentAFUnreviewedCommentCountQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentAFUnreviewedCommentCountQuery"),_1086,_1088),_119,_130,_96,_158,_26,_323]) as unknown as DocumentNode<multiCommentAFUnreviewedCommentCountQueryQuery, multiCommentAFUnreviewedCommentCountQueryQueryVariables>;
export const alignmentPostDocument = _o1(_1,[_o11(_1022,_1043,_1089,[_1090,_1091],_o5(_7,[_o7(_8,_1089,[_905,_606],_692)])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<alignmentPostMutation, alignmentPostMutationVariables>;
export const multiUserAuthorAnalyticsPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserAuthorAnalyticsPageQuery"),_1092,_1094),_96]) as unknown as DocumentNode<multiUserAuthorAnalyticsPageQueryQuery, multiUserAuthorAnalyticsPageQueryQueryVariables>;
export const PostsAnalyticsPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsAnalyticsPage"),_1097,_1105),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<PostsAnalyticsPageQuery, PostsAnalyticsPageQueryVariables>;
export const multiBookmarkBookmarksFeedQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiBookmarkBookmarksFeedQuery"),_1106,_o5(_7,[_o7(_8,_1107,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_194)])),_835]))])),_12,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_193,_200]) as unknown as DocumentNode<multiBookmarkBookmarksFeedQueryQuery, multiBookmarkBookmarksFeedQueryQueryVariables>;
export const multiBookmarkBookmarksListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiBookmarkBookmarksListQuery"),_1106,_o5(_7,[_o7(_8,_1107,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_185)])),_835]))])),_12,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_191]) as unknown as DocumentNode<multiBookmarkBookmarksListQueryQuery, multiBookmarkBookmarksListQueryQueryVariables>;
export const getReadHistoryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getReadHistory"),_1112,_o5(_7,[_o7(_8,_o3(_3,"UserReadHistory"),_1113,_o5(_7,[_o6(_8,_227,_o5(_7,[_188,_44]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getReadHistoryQuery, getReadHistoryQueryVariables>;
export const multiVoteVoteHistoryTabQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiVoteVoteHistoryTabQuery"),_1114,_o5(_7,[_o7(_8,_1115,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_1003)])),_835]))])),_1000,_119,_130,_96,_158,_26,_1002,_78,_108,_169,_175,_180,_184,_1006]) as unknown as DocumentNode<multiVoteVoteHistoryTabQueryQuery, multiVoteVoteHistoryTabQueryQueryVariables>;
export const updateUserBook2020FrontpageWidgetDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserBook2020FrontpageWidget"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserBook2020FrontpageWidgetMutation, updateUserBook2020FrontpageWidgetMutationVariables>;
export const updateUserBookFrontpageWidgetDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserBookFrontpageWidget"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserBookFrontpageWidgetMutation, updateUserBookFrontpageWidgetMutationVariables>;
export const CommentEmbeddingsSearchQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentEmbeddingsSearchQuery"),[_o12(_1024,_1117,_1038),_1121],_o5(_7,[_o7(_8,_o3(_3,"CommentEmbeddingSearch"),[_o8(_526,_1116,_1117),_1122],_1005)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<CommentEmbeddingsSearchQueryQuery, CommentEmbeddingsSearchQueryQueryVariables>;
export const CommentEmbeddingsSimilaritySearchQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentEmbeddingsSimilaritySearchQuery"),[_1124,_1121],_o5(_7,[_o7(_8,_o3(_3,"CommentEmbeddingSimilaritySearch"),[_1125,_1122],_1005)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<CommentEmbeddingsSimilaritySearchQueryQuery, CommentEmbeddingsSimilaritySearchQueryQueryVariables>;
export const CommentByIdDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentById"),_1097,_1127),_119,_130,_96,_158]) as unknown as DocumentNode<CommentByIdQuery, CommentByIdQueryVariables>;
export const updateCommentCommentFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentCommentForm"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentCommentFormMutation, updateCommentCommentFormMutationVariables>;
export const createCommentCommentFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createCommentCommentForm"),_1065,_1068),_119,_130,_96,_158]) as unknown as DocumentNode<createCommentCommentFormMutation, createCommentCommentFormMutationVariables>;
export const CommentPermalinkDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentPermalink"),_1097,_1133),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<CommentPermalinkQuery, CommentPermalinkQueryVariables>;
export const LinkedDraftCommentQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LinkedDraftCommentQuery"),_1135,_o5(_7,[_o7(_8,_198,_1137,_o5(_7,[_o6(_8,_1031,_1138)]))])),_119,_130,_96,_158,_26,_290]) as unknown as DocumentNode<LinkedDraftCommentQueryQuery, LinkedDraftCommentQueryQueryVariables>;
export const CommentEditDocument = _o1(_1,[_o11(_1022,_1023,_291,_1097,_o5(_7,[_o7(_8,_198,_1102,_o5(_7,[_o6(_8,_1031,_1139)]))])),_119,_130,_96,_158,_203,_249,_292]) as unknown as DocumentNode<CommentEditQuery, CommentEditQueryVariables>;
export const CommentDeletedMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentDeletedMetadata"),_1097,_o5(_7,[_o7(_8,_198,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_296]))]))])),_294]) as unknown as DocumentNode<CommentDeletedMetadataQuery, CommentDeletedMetadataQueryVariables>;
export const CommentPollVoteDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentPollVote"),_1097,_1142),_374,_26,_119,_382]) as unknown as DocumentNode<CommentPollVoteQuery, CommentPollVoteQueryVariables>;
export const CommentsNewFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentsNewForm"),[_1096,_1090],_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_903)]))]))])),_907]) as unknown as DocumentNode<CommentsNewFormQuery, CommentsNewFormQueryVariables>;
export const multiLWEventLastVisitListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLWEventLastVisitListQuery"),_1143,_o5(_7,[_o7(_8,_1144,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_427)])),_835]))])),_428]) as unknown as DocumentNode<multiLWEventLastVisitListQueryQuery, multiLWEventLastVisitListQueryQueryVariables>;
export const PostsModerationGuidelinesDocument = _o1(_1,[_o11(_1022,_1023,_513,_1097,_o5(_7,[_o16(_8,_513,_187,_1145,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_513)])),_306]))])),_26,_515]) as unknown as DocumentNode<PostsModerationGuidelinesQuery, PostsModerationGuidelinesQueryVariables>;
export const TagModerationGuidelinesDocument = _o1(_1,[_o11(_1022,_1023,_1146,_1097,_o5(_7,[_o16(_8,_1146,_137,_1145,_o5(_7,[_1148,_306]))])),_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<TagModerationGuidelinesQuery, TagModerationGuidelinesQueryVariables>;
export const updatePostModerationGuidelinesEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostModerationGuidelinesEditForm"),_1062,_1149),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<updatePostModerationGuidelinesEditFormMutation, updatePostModerationGuidelinesEditFormMutationVariables>;
export const updateTagModerationGuidelinesEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagModerationGuidelinesEditForm"),_1150,_1154),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<updateTagModerationGuidelinesEditFormMutation, updateTagModerationGuidelinesEditFormMutationVariables>;
export const PostsEditQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsEditQuery"),[_1134,_1155],_o5(_7,[_o7(_8,_187,_1145,_1157)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_593]) as unknown as DocumentNode<PostsEditQueryQuery, PostsEditQueryQueryVariables>;
export const TagEditQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagEditQuery"),_1135,_o5(_7,[_o7(_8,_137,_1145,_1159)])),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<TagEditQueryQuery, TagEditQueryQueryVariables>;
export const multiCommentModeratorCommentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentModeratorCommentsQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentModeratorCommentsQueryQuery, multiCommentModeratorCommentsQueryQueryVariables>;
export const NewUserGuidelinesDialogDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NewUserGuidelinesDialog"),_1097,_1127),_119,_130,_96,_158]) as unknown as DocumentNode<NewUserGuidelinesDialogQuery, NewUserGuidelinesDialogQueryVariables>;
export const ParentCommentSingleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ParentCommentSingle"),_1097,_1163),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<ParentCommentSingleQuery, ParentCommentSingleQueryVariables>;
export const PopularCommentsDocument = _o1(_1,[_o11(_1022,_1023,_1164,_1165,_o5(_7,[_o7(_8,_1164,_1084,_1166)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<PopularCommentsQuery, PopularCommentsQueryVariables>;
export const SideCommentSingleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SideCommentSingle"),_1167,_o5(_7,[_o7(_8,_198,[_o8(_526,_1098,_o13(_1029,[_o8(_1030,_1028,_1168)]))],_1132)])),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<SideCommentSingleQuery, SideCommentSingleQueryVariables>;
export const multiCommentUserCommentsRepliesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentUserCommentsRepliesQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentUserCommentsRepliesQueryQuery, multiCommentUserCommentsRepliesQueryQueryVariables>;
export const multiUserUserCommentsRepliesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserUserCommentsRepliesQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserUserCommentsRepliesQueryQuery, multiUserUserCommentsRepliesQueryQueryVariables>;
export const DraftCommentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"DraftCommentsQuery"),_1086,_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_1138),_835]))])),_119,_130,_96,_158,_26,_290]) as unknown as DocumentNode<DraftCommentsQueryQuery, DraftCommentsQueryQueryVariables>;
export const multiCommentRecentCommentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentRecentCommentsQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentRecentCommentsQueryQuery, multiCommentRecentCommentsQueryQueryVariables>;
export const multiCommentuseCommentQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentuseCommentQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentuseCommentQueryQuery, multiCommentuseCommentQueryQueryVariables>;
export const multiCommentCommentsListCondensedQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentCommentsListCondensedQuery"),_1086,_1172),_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<multiCommentCommentsListCondensedQueryQuery, multiCommentCommentsListCondensedQueryQueryVariables>;
export const HeaderEventSubtitleSpotlightQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"HeaderEventSubtitleSpotlightQuery"),_o5(_7,[_o6(_8,_1173,_o5(_7,[_o4(_28,_763)]))])),_762,_765]) as unknown as DocumentNode<HeaderEventSubtitleSpotlightQueryQuery, HeaderEventSubtitleSpotlightQueryQueryVariables>;
export const multiTagHomeTagBarQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagHomeTagBarQuery"),_1175,_1177),_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<multiTagHomeTagBarQueryQuery, multiTagHomeTagBarQueryQueryVariables>;
export const multiFeaturedResourceFeaturedResourceBannerQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiFeaturedResourceFeaturedResourceBannerQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"FeaturedResourceSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"featuredResources"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_364)])),_835]))])),_365]) as unknown as DocumentNode<multiFeaturedResourceFeaturedResourceBannerQueryQuery, multiFeaturedResourceFeaturedResourceBannerQueryQueryVariables>;
export const multiTagSubforumsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagSubforumsListQuery"),_1175,_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_819)])),_835]))])),_119,_820]) as unknown as DocumentNode<multiTagSubforumsListQueryQuery, multiTagSubforumsListQueryQueryVariables>;
export const PostExcerptDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostExcerpt"),_1179,_1180),_636]) as unknown as DocumentNode<PostExcerptQuery, PostExcerptQueryVariables>;
export const AllTagsActivityFeedDocument = _o1(_1,[_o11(_1022,_1023,_1181,[_1071,_1185,_1188],_o5(_7,[_o7(_8,_1181,[_1076,_1189,_1190],_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_o6(_8,_1193,_o5(_7,[_o4(_28,_809)])),_o6(_8,_1194,_1195),_o6(_8,_1196,_1005)]))]))])),_119,_96,_208,_203,_219,_717,_720,_540,_710,_443,_249,_723,_728,_731,_735,_739,_130,_158,_26,_812,_744,_1002]) as unknown as DocumentNode<AllTagsActivityFeedQuery, AllTagsActivityFeedQueryVariables>;
export const TagHistoryFeedDocument = _o1(_1,[_o11(_1022,_1023,_1197,[_1071,_1185,_1188,_1198,_o12(_1024,_1200,_1201)],_o5(_7,[_o7(_8,_1197,[_1076,_1189,_1190,_529,_o8(_526,_1199,_1200)],_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_o6(_8,_1193,_738),_o6(_8,_1194,_1202),_o6(_8,_o3(_3,"lensRevision"),_1202),_o6(_8,_o3(_3,"summaryRevision"),_o5(_7,[_o4(_28,_711)])),_o6(_8,_o3(_3,"tagApplied"),_o5(_7,[_o4(_28,_800)])),_o6(_8,_1196,_165),_o6(_8,_o3(_3,"wikiMetadataChanged"),_1203),_o6(_8,_o3(_3,"lensOrSummaryMetadataChanged"),_1203)]))]))])),_119,_96,_208,_203,_219,_717,_720,_443,_249,_723,_540,_710,_799,_26,_78,_108,_130,_158,_169,_175,_728,_713,_802,_369]) as unknown as DocumentNode<TagHistoryFeedQuery, TagHistoryFeedQueryVariables>;
export const RecentDiscussionFeedDocument = _o1(_1,[_o11(_1022,_1023,_1204,[_1071,_1185,_1188,_1091,_1205,_1206,_o12(_1024,_747,_1070)],_o5(_7,[_o7(_8,_1204,_1207,_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_o6(_8,_1208,_1209),_o6(_8,_o3(_3,"shortformCommented"),_o5(_7,[_o4(_28,_612)])),_o6(_8,_o3(_3,"tagDiscussed"),_750),_o6(_8,_o3(_3,"tagRevised"),_o5(_7,[_o4(_28,_749)]))]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_611,_208,_203,_219,_717,_720,_540,_710,_748,_608,_614,_751]) as unknown as DocumentNode<RecentDiscussionFeedQuery, RecentDiscussionFeedQueryVariables>;
export const SubscribedFeedDocument = _o1(_1,[_o11(_1022,_1023,_1210,[_1071,_1185,_1188,_1091],_o5(_7,[_o7(_8,_1210,_1207,_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_o6(_8,_1208,_o5(_7,[_o4(_28,_1007)]))]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_1008]) as unknown as DocumentNode<SubscribedFeedQuery, SubscribedFeedQueryVariables>;
export const SubforumMagicFeedDocument = _o1(_1,[_o11(_1022,_1023,_1211,[_1198,_1071,_o12(_1024,_1183,_1120),_1188,_1091,_1205,_1206],_o5(_7,[_o7(_8,_1211,_1212,_1213)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_301,_608,_304]) as unknown as DocumentNode<SubforumMagicFeedQuery, SubforumMagicFeedQueryVariables>;
export const SubforumNewFeedDocument = _o1(_1,[_o11(_1022,_1023,_1214,_1215,_o5(_7,[_o7(_8,_1214,_1212,_1213)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_301,_608,_304]) as unknown as DocumentNode<SubforumNewFeedQuery, SubforumNewFeedQueryVariables>;
export const SubforumOldFeedDocument = _o1(_1,[_o11(_1022,_1023,_1216,_1215,_o5(_7,[_o7(_8,_1216,_1212,_1213)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_301,_608,_304]) as unknown as DocumentNode<SubforumOldFeedQuery, SubforumOldFeedQueryVariables>;
export const SubforumRecentCommentsFeedDocument = _o1(_1,[_o11(_1022,_1023,_1217,_1215,_o5(_7,[_o7(_8,_1217,_1212,_1213)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_301,_608,_304]) as unknown as DocumentNode<SubforumRecentCommentsFeedQuery, SubforumRecentCommentsFeedQueryVariables>;
export const SubforumTopFeedDocument = _o1(_1,[_o11(_1022,_1023,_1218,[_1198,_1071,_o12(_1024,_1183,_1070),_1188,_1091,_1205,_1206],_o5(_7,[_o7(_8,_1218,_1212,_1213)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_301,_608,_304]) as unknown as DocumentNode<SubforumTopFeedQuery, SubforumTopFeedQueryVariables>;
export const UltraFeedDocument = _o1(_1,[_o11(_1022,_1023,_1219,[_1071,_1185,_1188,_o12(_1024,_1221,_1026),_1224],_o5(_7,[_o7(_8,_1219,[_1076,_1189,_1190,_o8(_526,_1220,_1221),_1225],_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_1226,_1227,_o6(_8,_o3(_3,"feedSpotlight"),_o5(_7,[_o4(_28,_1015)])),_1228]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_193,_762,_1014,_1012,_1010,_1019,_1021]) as unknown as DocumentNode<UltraFeedQuery, UltraFeedQueryVariables>;
export const UltraFeedSubscriptionsDocument = _o1(_1,[_o11(_1022,_1023,_1229,[_1071,_1185,_1188,_1224],_o5(_7,[_o7(_8,_1229,[_1076,_1189,_1190,_1225],_o5(_7,[_306,_1191,_1192,_o6(_8,_1040,_o5(_7,[_244,_1226,_1227,_1228]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_193,_1012,_1010,_1021]) as unknown as DocumentNode<UltraFeedSubscriptionsQuery, UltraFeedSubscriptionsQueryVariables>;
export const updateUserCommunityDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserCommunity"),_1047,_1230),_96,_203,_675]) as unknown as DocumentNode<updateUserCommunityMutation, updateUserCommunityMutationVariables>;
export const multiLocalgroupLocalGroupsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupLocalGroupsQuery"),_1231,_1234),_96,_413,_203,_416]) as unknown as DocumentNode<multiLocalgroupLocalGroupsQueryQuery, multiLocalgroupLocalGroupsQueryQueryVariables>;
export const multiLocalgroupOnlineGroupsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupOnlineGroupsQuery"),_1231,_1234),_96,_413,_203,_416]) as unknown as DocumentNode<multiLocalgroupOnlineGroupsQueryQuery, multiLocalgroupOnlineGroupsQueryQueryVariables>;
export const ElicitBlockDataDocument = _o1(_1,[_o11(_1022,_1023,_1235,[_1238],_o5(_7,[_o7(_8,_1235,[_1239],_1241)])),_96]) as unknown as DocumentNode<ElicitBlockDataQuery, ElicitBlockDataQueryVariables>;
export const ElicitPredictionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"ElicitPrediction"),[_1238,_o12(_1024,_1242,_1070)],_o5(_7,[_o7(_8,_o3(_3,"MakeElicitPrediction"),[_1239,_o8(_526,_1240,_1242)],_1241)])),_96]) as unknown as DocumentNode<ElicitPredictionMutation, ElicitPredictionMutationVariables>;
export const RecentlyActiveDialoguesDocument = _o1(_1,[_o11(_1022,_1023,_1243,_1165,_o5(_7,[_o7(_8,_1243,_1084,_1245)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<RecentlyActiveDialoguesQuery, RecentlyActiveDialoguesQueryVariables>;
export const MyDialoguesDocument = _o1(_1,[_o11(_1022,_1023,_1246,_1165,_o5(_7,[_o7(_8,_1246,_1084,_1245)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<MyDialoguesQuery, MyDialoguesQueryVariables>;
export const DialoguesPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"DialoguesPage"),_1097,_1248),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<DialoguesPageQuery, DialoguesPageQueryVariables>;
export const updatePostBanUserFromPostDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostBanUserFromPostDropdownItem"),_1062,_1149),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<updatePostBanUserFromPostDropdownItemMutation, updatePostBanUserFromPostDropdownItemMutationVariables>;
export const CommentActionsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentActions"),_1097,_1250),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<CommentActionsQuery, CommentActionsQueryVariables>;
export const lockThreadDocument = _o1(_1,[_o11(_1022,_1043,_1251,[_1124,_o12(_1024,_1253,_1026)],_o5(_7,[_o10(_8,_1251,[_1125,_o8(_526,_1252,_1253)])]))]) as unknown as DocumentNode<lockThreadMutation, lockThreadMutationVariables>;
export const unlockThreadDocument = _o1(_1,[_o11(_1022,_1043,_1254,_1167,_o5(_7,[_o10(_8,_1254,[_1125])]))]) as unknown as DocumentNode<unlockThreadMutation, unlockThreadMutationVariables>;
export const updateCommentMoveToAlignmentCommentDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentMoveToAlignmentCommentDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentMoveToAlignmentCommentDropdownItemMutation, updateCommentMoveToAlignmentCommentDropdownItemMutationVariables>;
export const updateCommentMoveToAnswersDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentMoveToAnswersDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentMoveToAnswersDropdownItemMutation, updateCommentMoveToAnswersDropdownItemMutationVariables>;
export const updateCommentPinToProfileDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentPinToProfileDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentPinToProfileDropdownItemMutation, updateCommentPinToProfileDropdownItemMutationVariables>;
export const updateCommentRetractCommentDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentRetractCommentDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentRetractCommentDropdownItemMutation, updateCommentRetractCommentDropdownItemMutationVariables>;
export const updateCommentShortformFrontpageDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentShortformFrontpageDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentShortformFrontpageDropdownItemMutation, updateCommentShortformFrontpageDropdownItemMutationVariables>;
export const updateCommentSuggestAlignmentCommentDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentSuggestAlignmentCommentDropdownItem"),_1128,_1255),_119,_130,_96,_158,_26,_323]) as unknown as DocumentNode<updateCommentSuggestAlignmentCommentDropdownItemMutation, updateCommentSuggestAlignmentCommentDropdownItemMutationVariables>;
export const updateCommentToggleIsModeratorCommentDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentToggleIsModeratorCommentDropdownItem"),_1128,_1130),_119,_130,_96,_158]) as unknown as DocumentNode<updateCommentToggleIsModeratorCommentDropdownItemMutation, updateCommentToggleIsModeratorCommentDropdownItemMutationVariables>;
export const moderateCommentDocument = _o1(_1,[_o11(_1022,_1043,_1256,[_1257,_o12(_1024,_1258,_1074),_o12(_1024,_1259,_1026),_o12(_1024,_1260,_1074)],_o5(_7,[_o7(_8,_1256,[_1125,_o8(_526,_89,_1258),_o8(_526,_152,_1259),_o8(_526,_150,_1260)],_165)])),_119,_130,_96,_158]) as unknown as DocumentNode<moderateCommentMutation, moderateCommentMutationVariables>;
export const updateUserApproveNewUserDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserApproveNewUserDropdownItem"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserApproveNewUserDropdownItemMutation, updateUserApproveNewUserDropdownItemMutationVariables>;
export const updatePostDeleteDraftDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostDeleteDraftDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostDeleteDraftDropdownItemMutation, updatePostDeleteDraftDropdownItemMutationVariables>;
export const updatePostExcludeFromRecommendationsDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostExcludeFromRecommendationsDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostExcludeFromRecommendationsDropdownItemMutation, updatePostExcludeFromRecommendationsDropdownItemMutationVariables>;
export const markAsReadOrUnreadDocument = _o1(_1,[_o11(_1022,_1043,_1261,[_1090,_o12(_1024,_1262,_1074)],_o5(_7,[_o10(_8,_1261,[_905,_o8(_526,_45,_1262)])]))]) as unknown as DocumentNode<markAsReadOrUnreadMutation, markAsReadOrUnreadMutationVariables>;
export const updatePostMoveToDraftDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostMoveToDraftDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostMoveToDraftDropdownItemMutation, updatePostMoveToDraftDropdownItemMutationVariables>;
export const updatePostMoveToFrontpageDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostMoveToFrontpageDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostMoveToFrontpageDropdownItemMutation, updatePostMoveToFrontpageDropdownItemMutationVariables>;
export const updatePostResyncRssDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostResyncRssDropdownItem"),_1062,_1265),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<updatePostResyncRssDropdownItemMutation, updatePostResyncRssDropdownItemMutationVariables>;
export const getRssPostChangesDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getRssPostChanges"),_1267,_o5(_7,[_o7(_8,_o3(_3,"RssPostChanges"),_906,_o5(_7,[_o4(_8,_o3(_3,"isChanged")),_o4(_8,_o3(_3,"newHtml")),_o4(_8,_o3(_3,"htmlDiff"))]))]))]) as unknown as DocumentNode<getRssPostChangesQuery, getRssPostChangesQueryVariables>;
export const updateUserShortformDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserShortformDropdownItem"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserShortformDropdownItemMutation, updateUserShortformDropdownItemMutationVariables>;
export const updatePostSuggestAlignmentPostDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostSuggestAlignmentPostDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostSuggestAlignmentPostDropdownItemMutation, updatePostSuggestAlignmentPostDropdownItemMutationVariables>;
export const updatePostSuggestCuratedDropdownItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostSuggestCuratedDropdownItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostSuggestCuratedDropdownItemMutation, updatePostSuggestCuratedDropdownItemMutationVariables>;
export const setIsHiddenDocument = _o1(_1,[_o11(_1022,_1043,_1268,[_1266,_o12(_1024,_1270,_1271)],_o5(_7,[_o7(_8,_1268,[_905,_o8(_526,_1269,_1270)],_1052)])),_96,_203,_968]) as unknown as DocumentNode<setIsHiddenMutation, setIsHiddenMutationVariables>;
export const multiPostsListWithVotesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostsListWithVotesQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostsListWithVotesQueryQuery, multiPostsListWithVotesQueryQueryVariables>;
export const multiCollectionEABestOfPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCollectionEABestOfPageQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"CollectionSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"collections"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_276)])),_835]))])),_96,_203,_277]) as unknown as DocumentNode<multiCollectionEABestOfPageQueryQuery, multiCollectionEABestOfPageQueryQueryVariables>;
export const multiSequenceEABestOfPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSequenceEABestOfPageQuery"),_1276,_1277),_208,_96,_203,_219]) as unknown as DocumentNode<multiSequenceEABestOfPageQueryQuery, multiSequenceEABestOfPageQueryQueryVariables>;
export const multiPostsBestOfListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostsBestOfListQuery"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_643)])),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_644]) as unknown as DocumentNode<multiPostsBestOfListQueryQuery, multiPostsBestOfListQueryQueryVariables>;
export const multiDigestEADigestPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiDigestEADigestPageQuery"),_1278,_1280),_352]) as unknown as DocumentNode<multiDigestEADigestPageQueryQuery, multiDigestEADigestPageQueryQueryVariables>;
export const getDigestPostsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getDigestPosts"),[_o12(_1024,_1281,_1070)],_o5(_7,[_o7(_8,_o3(_3,"DigestPosts"),[_o8(_526,_347,_1281)],_189)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getDigestPostsQuery, getDigestPostsQueryVariables>;
export const EAHomeHandbookDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EAHomeHandbook"),_1097,_1283),_208,_96,_203,_219]) as unknown as DocumentNode<EAHomeHandbookQuery, EAHomeHandbookQueryVariables>;
export const multiPostEAHomeRightHandSideQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostEAHomeRightHandSideQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostEAHomeRightHandSideQueryQuery, multiPostEAHomeRightHandSideQueryQueryVariables>;
export const multiPostInstagramLandingPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostInstagramLandingPageQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostInstagramLandingPageQueryQuery, multiPostInstagramLandingPageQueryQueryVariables>;
export const multiChapterInstagramLandingPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiChapterInstagramLandingPageQuery"),_1286,_1287),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229]) as unknown as DocumentNode<multiChapterInstagramLandingPageQueryQuery, multiChapterInstagramLandingPageQueryQueryVariables>;
export const multiUserEAGDetailTargetedJobAdSectionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserEAGDetailTargetedJobAdSectionQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserEAGDetailSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"userEAGDetails"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_887)])),_835]))])),_888]) as unknown as DocumentNode<multiUserEAGDetailTargetedJobAdSectionQueryQuery, multiUserEAGDetailTargetedJobAdSectionQueryQueryVariables>;
export const multiUserJobAdTargetedJobAdSectionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserJobAdTargetedJobAdSectionQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserJobAdSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"userJobAds"),_1077,_o5(_7,[_o6(_8,_1040,_1288),_835]))])),_890]) as unknown as DocumentNode<multiUserJobAdTargetedJobAdSectionQueryQuery, multiUserJobAdTargetedJobAdSectionQueryQueryVariables>;
export const updateUserJobAdTargetedJobAdSectionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserJobAdTargetedJobAdSection"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUserJobAdDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateUserJobAd"),_1051,_1289)])),_890]) as unknown as DocumentNode<updateUserJobAdTargetedJobAdSectionMutation, updateUserJobAdTargetedJobAdSectionMutationVariables>;
export const createUserJobAdTargetedJobAdSectionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createUserJobAdTargetedJobAdSection"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateUserJobAdDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createUserJobAd"),_1061,_1289)])),_890]) as unknown as DocumentNode<createUserJobAdTargetedJobAdSectionMutation, createUserJobAdTargetedJobAdSectionMutationVariables>;
export const getUserReadsPerCoreTagDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getUserReadsPerCoreTag"),[_1291],_o5(_7,[_o7(_8,_o3(_3,"UserReadsPerCoreTag"),[_1292],_o5(_7,[_136,_1293]))]))]) as unknown as DocumentNode<getUserReadsPerCoreTagQuery, getUserReadsPerCoreTagQueryVariables>;
export const updateDigestConfirmPublishDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateDigestConfirmPublishDialog"),_1294,_1295),_352]) as unknown as DocumentNode<updateDigestConfirmPublishDialogMutation, updateDigestConfirmPublishDialogMutationVariables>;
export const multiDigestDigestsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiDigestDigestsQuery"),_1278,_1280),_352]) as unknown as DocumentNode<multiDigestDigestsQueryQuery, multiDigestDigestsQueryQueryVariables>;
export const multiDigestEditDigestQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiDigestEditDigestQuery"),_1278,_1280),_352]) as unknown as DocumentNode<multiDigestEditDigestQueryQuery, multiDigestEditDigestQueryQueryVariables>;
export const updateDigestPostEditDigestDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateDigestPostEditDigest"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateDigestPostDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateDigestPost"),_1051,_1296)])),_345]) as unknown as DocumentNode<updateDigestPostEditDigestMutation, updateDigestPostEditDigestMutationVariables>;
export const createDigestPostEditDigestDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createDigestPostEditDigest"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateDigestPostDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createDigestPost"),_1061,_1296)])),_345]) as unknown as DocumentNode<createDigestPostEditDigestMutation, createDigestPostEditDigestMutationVariables>;
export const getDigestPlannerDataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getDigestPlannerData"),[_o12(_1024,_1297,_1026),_1299,_1301],_o5(_7,[_o7(_8,_o3(_3,"DigestPlannerData"),[_o8(_526,_342,_1297),_1302,_1303],_o5(_7,[_190,_o6(_8,_o3(_3,"digestPost"),_o5(_7,[_10,_343,_344])),_o4(_8,_o3(_3,"rating"))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getDigestPlannerDataQuery, getDigestPlannerDataQueryVariables>;
export const updateDigestEditDigestActionButtonsDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateDigestEditDigestActionButtons"),_1294,_1295),_352]) as unknown as DocumentNode<updateDigestEditDigestActionButtonsMutation, updateDigestEditDigestActionButtonsMutationVariables>;
export const updateDigestEditDigestHeaderDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateDigestEditDigestHeader"),_1294,_1295),_352]) as unknown as DocumentNode<updateDigestEditDigestHeaderMutation, updateDigestEditDigestHeaderMutationVariables>;
export const NewUserCompleteProfileDocument = _o1(_1,[_o11(_1022,_1043,_1304,[_o12(_1024,_1305,_1038),_o12(_1024,_1307,_1271),_1309,_o12(_1024,_1310,_1074)],_o5(_7,[_o7(_8,_1304,[_1311,_o8(_526,_1306,_1307),_1312,_o8(_526,_938,_1310)],_o5(_7,[_83,_16,_85]))]))]) as unknown as DocumentNode<NewUserCompleteProfileMutation, NewUserCompleteProfileMutationVariables>;
export const isDisplayNameTakenDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"isDisplayNameTaken"),[_o12(_1024,_1313,_1038)],_o5(_7,[_o10(_8,_o3(_3,"IsDisplayNameTaken"),[_o8(_526,_84,_1313)])]))]) as unknown as DocumentNode<isDisplayNameTakenQuery, isDisplayNameTakenQueryVariables>;
export const multiUseruseSuggestedSubscriptionsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUseruseSuggestedSubscriptionsQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_982)])),_835]))])),_983]) as unknown as DocumentNode<multiUseruseSuggestedSubscriptionsQueryQuery, multiUseruseSuggestedSubscriptionsQueryQueryVariables>;
export const multiTaguseSuggestedSubscriptionsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTaguseSuggestedSubscriptionsQuery"),_1175,_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_868)])),_835]))])),_869]) as unknown as DocumentNode<multiTaguseSuggestedSubscriptionsQueryQuery, multiTaguseSuggestedSubscriptionsQueryQueryVariables>;
export const EAGApplicationImportFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EAGApplicationImportForm"),_1097,_1315),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<EAGApplicationImportFormQuery, EAGApplicationImportFormQueryVariables>;
export const multiPosthooksQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPosthooksQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPosthooksQueryQuery, multiPosthooksQueryQueryVariables>;
export const multiVotehooksQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiVotehooksQuery"),_1114,_1316),_1000]) as unknown as DocumentNode<multiVotehooksQueryQuery, multiVotehooksQueryQueryVariables>;
export const getWrappedDataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getWrappedData"),[_1291,_o12(_1024,_1317,_1081)],_o5(_7,[_o7(_8,_o3(_3,"UserWrappedDataByYear"),[_1292,_1318],_o5(_7,[_1319,_o4(_8,_o3(_3,"postsReadCount")),_o4(_8,_o3(_3,"totalSeconds")),_o4(_8,_o3(_3,"daysVisited")),_o6(_8,_o3(_3,"mostReadTopics"),_o5(_7,[_74,_111,_16,_1321])),_o6(_8,_o3(_3,"relativeMostReadCoreTopics"),_o5(_7,[_136,_922,_o4(_8,_o3(_3,"tagShortName")),_1293,_o4(_8,_o3(_3,"readLikelihoodRatio"))])),_o6(_8,_o3(_3,"mostReadAuthors"),_o5(_7,[_10,_85,_16,_86,_1321,_1319])),_o6(_8,_o3(_3,"topPosts"),_o5(_7,[_10,_17,_16,_40])),_94,_o4(_8,_o3(_3,"authorPercentile")),_o6(_8,_o3(_3,"topComment"),_o5(_7,[_10,_32,_134,_918,_919,_40,_41,_1322])),_38,_o4(_8,_o3(_3,"commenterPercentile")),_o6(_8,_o3(_3,"topShortform"),_o5(_7,[_10,_32,_134,_40,_41,_1322])),_o4(_8,_o3(_3,"shortformCount")),_o4(_8,_o3(_3,"shortformPercentile")),_o4(_8,_o3(_3,"karmaChange")),_o6(_8,_o3(_3,"combinedKarmaVals"),_o5(_7,[_1323,_o4(_8,_o3(_3,"postKarma")),_o4(_8,_o3(_3,"commentKarma"))])),_o6(_8,_o3(_3,"mostReceivedReacts"),_o5(_7,[_74,_1321])),_o4(_8,_o3(_3,"personality"))]))]))]) as unknown as DocumentNode<getWrappedDataQuery, getWrappedDataQueryVariables>;
export const multiPostCKPostEditorQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostCKPostEditorQuery"),_1273,_1324),_26]) as unknown as DocumentNode<multiPostCKPostEditorQueryQuery, multiPostCKPostEditorQueryQueryVariables>;
export const sendNewDialogueMessageNotificationDocument = _o1(_1,[_o11(_1022,_1043,_1325,[_1266,_o12(_1024,_1327,_1038)],_o5(_7,[_o10(_8,_1325,[_905,_o8(_526,_1326,_1327)])]))]) as unknown as DocumentNode<sendNewDialogueMessageNotificationMutation, sendNewDialogueMessageNotificationMutationVariables>;
export const updatePostEditTitleDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostEditTitle"),_1062,_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_279)]))])),_26]) as unknown as DocumentNode<updatePostEditTitleMutation, updatePostEditTitleMutationVariables>;
export const getPostIsCriticismDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getPostIsCriticism"),[_1330],_o5(_7,[_o10(_8,_o3(_3,"PostIsCriticism"),[_1331])]))]) as unknown as DocumentNode<getPostIsCriticismQuery, getPostIsCriticismQueryVariables>;
export const autosaveRevisionDocument = _o1(_1,[_o11(_1022,_1043,_1332,[_1266,_o12(_1024,_1333,_o14(_1036,_o4(_5,_o3(_3,"AutosaveContentType"))))],_o5(_7,[_o7(_8,_1332,[_905,_o8(_526,_146,_1333)],_252)])),_203,_249]) as unknown as DocumentNode<autosaveRevisionMutation, autosaveRevisionMutationVariables>;
export const LinkSharingQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LinkSharingQuery"),[_1266,_o12(_1024,_1334,_1038)],_o5(_7,[_o7(_8,_o3(_3,"getLinkSharedPost"),[_905,_o8(_526,_37,_1334)],_1263)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<LinkSharingQueryQuery, LinkSharingQueryQueryVariables>;
export const multiRevisionPostVersionHistoryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionPostVersionHistoryQuery"),_1335,_1336),_540,_96,_708]) as unknown as DocumentNode<multiRevisionPostVersionHistoryQueryQuery, multiRevisionPostVersionHistoryQueryQueryVariables>;
export const PostVersionHistoryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostVersionHistory"),_1097,_o5(_7,[_o7(_8,_1337,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_211,_546]))]))])),_203,_540]) as unknown as DocumentNode<PostVersionHistoryQuery, PostVersionHistoryQueryVariables>;
export const revertPostToRevisionDocument = _o1(_1,[_o11(_1022,_1043,_1338,[_1266,_o12(_1024,_1340,_1038)],_o5(_7,[_o7(_8,_1338,[_905,_o8(_526,_1339,_1340)],_1263)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<revertPostToRevisionMutation, revertPostToRevisionMutationVariables>;
export const PresenceListDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PresenceList"),_1097,_1342),_96]) as unknown as DocumentNode<PresenceListQuery, PresenceListQueryVariables>;
export const multiRevisionTagVersionHistoryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionTagVersionHistoryQuery"),_1335,_1336),_540,_96,_708]) as unknown as DocumentNode<multiRevisionTagVersionHistoryQueryQuery, multiRevisionTagVersionHistoryQueryQueryVariables>;
export const TagVersionHistoryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagVersionHistory"),_1097,_o5(_7,[_o7(_8,_1337,_1102,_o5(_7,[_o6(_8,_1031,_212)]))])),_203]) as unknown as DocumentNode<TagVersionHistoryQuery, TagVersionHistoryQueryVariables>;
export const revertToRevisionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"revertToRevision"),[_1198,_o12(_1024,_1344,_1038),_1345],_o5(_7,[_o7(_8,_o3(_3,"revertTagToRevision"),[_529,_o8(_526,_1343,_1344)],_1346)])),_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_840]) as unknown as DocumentNode<revertToRevisionMutation, revertToRevisionMutationVariables>;
export const createElicitQuestionCreateClaimDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createElicitQuestionCreateClaimDialog"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateElicitQuestionDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createElicitQuestion"),_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_359)]))]))])),_363]) as unknown as DocumentNode<createElicitQuestionCreateClaimDialogMutation, createElicitQuestionCreateClaimDialogMutationVariables>;
export const ConvertDocumentDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ConvertDocument"),[_o12(_1024,_1348,_1201),_o12(_1024,_1350,_1026)],_o5(_7,[_o10(_8,_o3(_3,"convertDocument"),[_o8(_526,_1347,_1348),_o8(_526,_1349,_1350)])]))]) as unknown as DocumentNode<ConvertDocumentQuery, ConvertDocumentQueryVariables>;
export const multiPostEventsHomeQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostEventsHomeQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostEventsHomeQueryQuery, multiPostEventsHomeQueryQueryVariables>;
export const updateUserEventsHomeDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserEventsHome"),_1047,_1230),_96,_203,_675]) as unknown as DocumentNode<updateUserEventsHomeMutation, updateUserEventsHomeMutationVariables>;
export const FMCrosspostControlDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"FMCrosspostControl"),_1097,_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_980)]))]))])),_981]) as unknown as DocumentNode<FMCrosspostControlQuery, FMCrosspostControlQueryVariables>;
export const unlinkCrossposterDocument = _o1(_1,[_o15(_1022,_1043,_1351,_o5(_7,[_o4(_8,_1351)]))]) as unknown as DocumentNode<unlinkCrossposterMutation, unlinkCrossposterMutationVariables>;
export const ImageUploadDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ImageUpload"),_1097,_1342),_96]) as unknown as DocumentNode<ImageUploadQuery, ImageUploadQueryVariables>;
export const multiPodcastEpisodePodcastEpisodeInputQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPodcastEpisodePodcastEpisodeInputQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"PodcastEpisodeSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"podcastEpisodes"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_459)])),_835]))])),_460]) as unknown as DocumentNode<multiPodcastEpisodePodcastEpisodeInputQueryQuery, multiPodcastEpisodePodcastEpisodeInputQueryQueryVariables>;
export const multiPodcastPodcastEpisodeInputQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPodcastPodcastEpisodeInputQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"PodcastSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"podcasts"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_461)])),_835]))])),_462]) as unknown as DocumentNode<multiPodcastPodcastEpisodeInputQueryQuery, multiPodcastPodcastEpisodeInputQueryQueryVariables>;
export const createPodcastEpisodePodcastEpisodeInputDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPodcastEpisodePodcastEpisodeInput"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreatePodcastEpisodeDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createPodcastEpisode"),_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_454)]))]))])),_458]) as unknown as DocumentNode<createPodcastEpisodePodcastEpisodeInputMutation, createPodcastEpisodePodcastEpisodeInputMutationVariables>;
export const multiLocalgroupSelectLocalgroupQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupSelectLocalgroupQuery"),_1231,_o5(_7,[_o7(_8,_1232,_1077,_o5(_7,[_o6(_8,_1040,_977),_835]))])),_96,_413]) as unknown as DocumentNode<multiLocalgroupSelectLocalgroupQueryQuery, multiLocalgroupSelectLocalgroupQueryQueryVariables>;
export const SequencesListEditorItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SequencesListEditorItem"),_1097,_1283),_208,_96,_203,_219]) as unknown as DocumentNode<SequencesListEditorItemQuery, SequencesListEditorItemQueryVariables>;
export const SingleTagItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SingleTagItem"),_1097,_1352),_119]) as unknown as DocumentNode<SingleTagItemQuery, SingleTagItemQueryVariables>;
export const SingleUsersItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SingleUsersItem"),_1097,_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_1169)]))])),_96,_203,_675]) as unknown as DocumentNode<SingleUsersItemQuery, SingleUsersItemQueryVariables>;
export const multiTagFlagTagFlagToggleListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagFlagTagFlagToggleListQuery"),_1353,_1354),_794]) as unknown as DocumentNode<multiTagFlagTagFlagToggleListQueryQuery, multiTagFlagTagFlagToggleListQueryQueryVariables>;
export const TagSelectDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagSelect"),_1097,_1352),_119]) as unknown as DocumentNode<TagSelectQuery, TagSelectQueryVariables>;
export const updateForumEventForumEventFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateForumEventForumEventForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateForumEventDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateForumEvent"),_1051,_1356)])),_374,_203,_249,_384]) as unknown as DocumentNode<updateForumEventForumEventFormMutation, updateForumEventForumEventFormMutationVariables>;
export const createForumEventForumEventFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createForumEventForumEventForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateForumEventDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createForumEvent"),_1061,_1356)])),_374,_203,_249,_384]) as unknown as DocumentNode<createForumEventForumEventFormMutation, createForumEventForumEventFormMutationVariables>;
export const ForumEventFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ForumEventForm"),_1097,_o5(_7,[_o7(_8,_1140,_1102,_o5(_7,[_o6(_8,_1031,_1355)]))])),_374,_203,_249,_384]) as unknown as DocumentNode<ForumEventFormQuery, ForumEventFormQueryVariables>;
export const multiCommentForumEventPollQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentForumEventPollQuery"),_1086,_1172),_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<multiCommentForumEventPollQueryQuery, multiCommentForumEventPollQueryQueryVariables>;
export const multiUserForumEventPollQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserForumEventPollQuery"),_1092,_1094),_96]) as unknown as DocumentNode<multiUserForumEventPollQueryQuery, multiUserForumEventPollQueryQueryVariables>;
export const ForumEventPollDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ForumEventPoll"),_1097,_1142),_374,_26,_119,_382]) as unknown as DocumentNode<ForumEventPollQuery, ForumEventPollQueryVariables>;
export const AddForumEventVoteDocument = _o1(_1,[_o11(_1022,_1043,_1357,[_1359,_1363,_o12(_1024,_1365,_1120),_1368],_o5(_7,[_o10(_8,_1357,[_1369,_1370,_o8(_526,_1364,_1365),_1371])]))]) as unknown as DocumentNode<AddForumEventVoteMutation, AddForumEventVoteMutationVariables>;
export const RemoveForumEventVoteDocument = _o1(_1,[_o11(_1022,_1043,_1372,[_1359],_o5(_7,[_o10(_8,_1372,[_1369])]))]) as unknown as DocumentNode<RemoveForumEventVoteMutation, RemoveForumEventVoteMutationVariables>;
export const ForumEventPostPageBannerDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ForumEventPostPageBanner"),_1097,_1250),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<ForumEventPostPageBannerQuery, ForumEventPostPageBannerQueryVariables>;
export const ForumEventPostPagePollSection2Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ForumEventPostPagePollSection2"),_1097,_1142),_374,_26,_119,_382]) as unknown as DocumentNode<ForumEventPostPagePollSection2Query, ForumEventPostPagePollSection2QueryVariables>;
export const ForumEventPostPagePollSectionDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ForumEventPostPagePollSection"),_1097,_1250),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<ForumEventPostPagePollSectionQuery, ForumEventPostPagePollSectionQueryVariables>;
export const multiCommentForumEventStickersQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentForumEventStickersQuery"),_1086,_1172),_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<multiCommentForumEventStickersQueryQuery, multiCommentForumEventStickersQueryQueryVariables>;
export const multiUserForumEventStickersQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserForumEventStickersQuery"),_1092,_1094),_96]) as unknown as DocumentNode<multiUserForumEventStickersQueryQuery, multiUserForumEventStickersQueryQueryVariables>;
export const RemoveForumEventStickerDocument = _o1(_1,[_o11(_1022,_1043,_1373,[_1359,_o12(_1024,_1375,_1038)],_o5(_7,[_o10(_8,_1373,[_1369,_o8(_526,_1374,_1375)])]))]) as unknown as DocumentNode<RemoveForumEventStickerMutation, RemoveForumEventStickerMutationVariables>;
export const multiForumEventForumEventsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiForumEventForumEventsListQuery"),_1376,_o5(_7,[_o7(_8,_1377,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_376])),_835]))])),_374]) as unknown as DocumentNode<multiForumEventForumEventsListQueryQuery, multiForumEventForumEventsListQueryQueryVariables>;
export const MultiPostAnalyticsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"MultiPostAnalyticsQuery"),[_1378,_1368,_o12(_1024,_1380,_1026),_o12(_1024,_1382,_1074),_1071],_o5(_7,[_o7(_8,_o3(_3,"MultiPostAnalytics"),[_1292,_1371,_o8(_526,_1379,_1380),_o8(_526,_1381,_1382),_1076],_o5(_7,[_o6(_8,_227,_o5(_7,[_10,_17,_16,_32,_1383,_o4(_8,_o3(_3,"uniqueViews")),_1384,_o4(_8,_o3(_3,"meanReadingTime")),_87,_1385])),_835]))]))]) as unknown as DocumentNode<MultiPostAnalyticsQueryQuery, MultiPostAnalyticsQueryQueryVariables>;
export const AnalyticsSeriesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"AnalyticsSeriesQuery"),[_1378,_1368,_1299,_1301],_o5(_7,[_o7(_8,_o3(_3,"AnalyticsSeries"),[_1292,_1371,_1302,_1303],_o5(_7,[_1323,_1383,_1384,_87,_1385]))]))]) as unknown as DocumentNode<AnalyticsSeriesQueryQuery, AnalyticsSeriesQueryQueryVariables>;
export const multiBookmarkuseBookmarkQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiBookmarkuseBookmarkQuery"),_1106,_o5(_7,[_o7(_8,_1107,_1077,_o5(_7,[_o6(_8,_1040,_1386),_835]))])),_12]) as unknown as DocumentNode<multiBookmarkuseBookmarkQueryQuery, multiBookmarkuseBookmarkQueryQueryVariables>;
export const ToggleBookmarkMutationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"ToggleBookmarkMutation"),[_o12(_1024,_1387,_o14(_1036,_o4(_5,_o3(_3,"ToggleBookmarkInput"))))],_o5(_7,[_o7(_8,_o3(_3,"toggleBookmark"),_1388,_o5(_7,[_o6(_8,_245,_1386)]))])),_12]) as unknown as DocumentNode<ToggleBookmarkMutationMutation, ToggleBookmarkMutationMutationVariables>;
export const multiForumEventuseCurrentForumEventQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiForumEventuseCurrentForumEventQuery"),_1376,_o5(_7,[_o7(_8,_1377,_1077,_o5(_7,[_o6(_8,_1040,_1141),_835]))])),_374,_26,_119,_382]) as unknown as DocumentNode<multiForumEventuseCurrentForumEventQueryQuery, multiForumEventuseCurrentForumEventQueryQueryVariables>;
export const CurrentFrontpageSurveyDocument = _o1(_1,[_o15(_1022,_1023,_1389,_o5(_7,[_o6(_8,_1389,_o5(_7,[_790]))])),_780,_783,_788]) as unknown as DocumentNode<CurrentFrontpageSurveyQuery, CurrentFrontpageSurveyQueryVariables>;
export const reviewVotesForPostAndUserDocument = _o1(_1,[_o11(_1022,_1023,_1390,[_1266,_1291],_o5(_7,[_o7(_8,_1391,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_1390,_o13(_1029,[_o8(_1030,_133,_904),_1392]))])),_o8(_526,_832,_o3(_1393,"1"))],_o5(_7,[_o6(_8,_1040,_511)]))]))]) as unknown as DocumentNode<reviewVotesForPostAndUserQuery, reviewVotesForPostAndUserQueryVariables>;
export const UserExpandFrontpageSectionDocument = _o1(_1,[_o11(_1022,_1043,_1394,[_o12(_1024,_1396,_1038),_o12(_1024,_1398,_1271)],_o5(_7,[_o10(_8,_1394,[_o8(_526,_1395,_1396),_o8(_526,_1397,_1398)])]))]) as unknown as DocumentNode<UserExpandFrontpageSectionMutation, UserExpandFrontpageSectionMutationVariables>;
export const multiTagfilterSettingsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagfilterSettingsQuery"),_1175,_1400),_119]) as unknown as DocumentNode<multiTagfilterSettingsQueryQuery, multiTagfilterSettingsQueryQueryVariables>;
export const initiateConversationDocument = _o1(_1,[_o11(_1022,_1043,_1401,[_o12(_1024,_1402,_1039),_1091,_o12(_1024,_1403,_1074)],_o5(_7,[_o7(_8,_1401,[_o8(_526,_326,_1402),_606,_o8(_526,_327,_1403)],_1404)])),_328]) as unknown as DocumentNode<initiateConversationMutation, initiateConversationMutationVariables>;
export const markConversationReadDocument = _o1(_1,[_o11(_1022,_1043,_1405,[_o12(_1024,_1406,_1038)],_o5(_7,[_o10(_8,_1405,[_o8(_526,_331,_1406)])]))]) as unknown as DocumentNode<markConversationReadMutation, markConversationReadMutationVariables>;
export const multiSubscriptionuseNotifyMeQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSubscriptionuseNotifyMeQuery"),_1407,_1410),_771]) as unknown as DocumentNode<multiSubscriptionuseNotifyMeQueryQuery, multiSubscriptionuseNotifyMeQueryQueryVariables>;
export const createSubscriptionuseNotifyMeDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSubscriptionuseNotifyMe"),_1411,_1412),_771]) as unknown as DocumentNode<createSubscriptionuseNotifyMeMutation, createSubscriptionuseNotifyMeMutationVariables>;
export const PostAnalyticsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostAnalyticsQuery"),_1267,_o5(_7,[_o7(_8,_o3(_3,"PostAnalytics"),_906,_o5(_7,[_o4(_8,_o3(_3,"allViews")),_1413,_o4(_8,_o3(_3,"uniqueClientViews10Sec")),_o4(_8,_o3(_3,"medianReadingTime")),_o4(_8,_o3(_3,"uniqueClientViews5Min")),_o6(_8,_o3(_3,"uniqueClientViewsSeries"),_o5(_7,[_1323,_1413]))]))]))]) as unknown as DocumentNode<PostAnalyticsQueryQuery, PostAnalyticsQueryQueryVariables>;
export const multiPostusePublishedPostsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostusePublishedPostsQuery"),_1273,_1415),_26,_78,_96,_108,_119,_130,_158,_169,_618,_203,_620,_628]) as unknown as DocumentNode<multiPostusePublishedPostsQueryQuery, multiPostusePublishedPostsQueryQueryVariables>;
export const RecentOpportunitiesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"RecentOpportunitiesQuery"),_1416,_o5(_7,[_o7(_8,_227,_1417,_1245)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<RecentOpportunitiesQueryQuery, RecentOpportunitiesQueryQueryVariables>;
export const RecentOpportunitiesWithSequenceQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"RecentOpportunitiesWithSequenceQuery"),_1416,_o5(_7,[_o7(_8,_227,_1417,_o5(_7,[_o6(_8,_1040,_1418)]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_208,_203,_219,_487]) as unknown as DocumentNode<RecentOpportunitiesWithSequenceQueryQuery, RecentOpportunitiesWithSequenceQueryQueryVariables>;
export const increasePostViewCountMutationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"increasePostViewCountMutation"),_1419,_o5(_7,[_o10(_8,_o3(_3,"increasePostViewCount"),_906)]))]) as unknown as DocumentNode<increasePostViewCountMutationMutation, increasePostViewCountMutationMutationVariables>;
export const markPostCommentsReadDocument = _o1(_1,[_o11(_1022,_1043,_1420,_1267,_o5(_7,[_o10(_8,_1420,_906)]))]) as unknown as DocumentNode<markPostCommentsReadMutation, markPostCommentsReadMutationVariables>;
export const RefreshDbSettingsDocument = _o1(_1,[_o15(_1022,_1043,_1421,_o5(_7,[_o4(_8,_1421)]))]) as unknown as DocumentNode<RefreshDbSettingsMutation, RefreshDbSettingsMutationVariables>;
export const rejectPostMutationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"rejectPostMutation"),_1062,_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_1414)]))])),_26,_78,_96,_108,_119,_130,_158,_169,_618,_203,_620,_628]) as unknown as DocumentNode<rejectPostMutationMutation, rejectPostMutationMutationVariables>;
export const rejectCommentMutationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"rejectCommentMutation"),_1128,_1422),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<rejectCommentMutationMutation, rejectCommentMutationMutationVariables>;
export const multiMultiDocumentuseTagOrLensQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiMultiDocumentuseTagOrLensQuery"),_1423,_o5(_7,[_o7(_8,_1424,_1077,_o5(_7,[_o6(_8,_1040,_743),_835]))])),_443,_203,_249,_723,_731,_735,_119,_96,_208,_219,_717,_720,_728,_739]) as unknown as DocumentNode<multiMultiDocumentuseTagOrLensQueryQuery, multiMultiDocumentuseTagOrLensQueryQueryVariables>;
export const UnreadNotificationCountQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"UnreadNotificationCountQuery"),_o5(_7,[_o6(_8,_o3(_3,"unreadNotificationCounts"),_o5(_7,[_o4(_8,_o3(_3,"unreadNotifications")),_o4(_8,_o3(_3,"unreadPrivateMessages")),_o4(_8,_o3(_3,"faviconBadgeNumber")),_o4(_8,_o3(_3,"checkedAt"))]))]))]) as unknown as DocumentNode<UnreadNotificationCountQueryQuery, UnreadNotificationCountQueryQueryVariables>;
export const updateUseruseUpdateCurrentUserDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUseruseUpdateCurrentUser"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUseruseUpdateCurrentUserMutation, updateUseruseUpdateCurrentUserMutationVariables>;
export const updateUseruseUpdateGlossaryPinnedStateDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUseruseUpdateGlossaryPinnedState"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUseruseUpdateGlossaryPinnedStateMutation, updateUseruseUpdateGlossaryPinnedStateMutationVariables>;
export const multiJargonTermGlossaryEditFormQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiJargonTermGlossaryEditFormQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"JargonTermSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_1425,_1077,_o5(_7,[_o6(_8,_1040,_1426),_835]))])),_203,_249,_396]) as unknown as DocumentNode<multiJargonTermGlossaryEditFormQueryQuery, multiJargonTermGlossaryEditFormQueryQueryVariables>;
export const updateJargonTermGlossaryEditForm1Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateJargonTermGlossaryEditForm1"),_1427,_1429),_203,_249,_396]) as unknown as DocumentNode<updateJargonTermGlossaryEditForm1Mutation, updateJargonTermGlossaryEditForm1MutationVariables>;
export const updatePostGlossaryEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostGlossaryEditForm"),_1062,_1265),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<updatePostGlossaryEditFormMutation, updatePostGlossaryEditFormMutationVariables>;
export const getNewJargonTermsDocument = _o1(_1,[_o11(_1022,_1043,_1430,[_1266,_o12(_1024,_1432,_1026),_o12(_1024,_1434,_1026),_o12(_1024,_1436,_1026),_o12(_1024,_1438,_1026),_o12(_1024,_1440,_1026)],_o5(_7,[_o7(_8,_1430,[_905,_o8(_526,_1431,_1432),_o8(_526,_1433,_1434),_o8(_526,_1435,_1436),_o8(_526,_1437,_1438),_o8(_526,_1439,_1440)],_1426)])),_203,_249,_396]) as unknown as DocumentNode<getNewJargonTermsMutation, getNewJargonTermsMutationVariables>;
export const multiPostGlossaryEditorPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostGlossaryEditorPageQuery"),_1441,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1156),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_593]) as unknown as DocumentNode<multiPostGlossaryEditorPageQueryQuery, multiPostGlossaryEditorPageQueryQueryVariables>;
export const updateJargonTermJargonEditorRowDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateJargonTermJargonEditorRow"),_1427,_1429),_203,_249,_396]) as unknown as DocumentNode<updateJargonTermJargonEditorRowMutation, updateJargonTermJargonEditorRowMutationVariables>;
export const updateJargonTermJargonTermFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateJargonTermJargonTermForm"),_1427,_1429),_203,_249,_396]) as unknown as DocumentNode<updateJargonTermJargonTermFormMutation, updateJargonTermJargonTermFormMutationVariables>;
export const createJargonTermJargonTermFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createJargonTermJargonTermForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateJargonTermDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createJargonTerm"),_1061,_1428)])),_203,_249,_396]) as unknown as DocumentNode<createJargonTermJargonTermFormMutation, createJargonTermJargonTermFormMutationVariables>;
export const getPostsWithApprovedJargonDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getPostsWithApprovedJargon"),_1083,_o5(_7,[_o7(_8,_o3(_3,"PostsWithApprovedJargon"),_1084,_o5(_7,[_o6(_8,_1040,_o5(_7,[_190,_o6(_8,_1425,_1426)]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_203,_249,_184,_396]) as unknown as DocumentNode<getPostsWithApprovedJargonQuery, getPostsWithApprovedJargonQueryVariables>;
export const multiCommentAutocompleteModelSettingsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentAutocompleteModelSettingsQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentAutocompleteModelSettingsQueryQuery, multiCommentAutocompleteModelSettingsQueryQueryVariables>;
export const multiPostAutocompleteModelSettingsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostAutocompleteModelSettingsQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostAutocompleteModelSettingsQueryQuery, multiPostAutocompleteModelSettingsQueryQueryVariables>;
export const multiLlmConversationLlmChatWrapperQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLlmConversationLlmChatWrapperQuery"),_1442,_o5(_7,[_o7(_8,_1443,_1077,_o5(_7,[_o6(_8,_1040,_1444),_835]))])),_399]) as unknown as DocumentNode<multiLlmConversationLlmChatWrapperQueryQuery, multiLlmConversationLlmChatWrapperQueryQueryVariables>;
export const updateLlmConversationLlmChatWrapperDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateLlmConversationLlmChatWrapper"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateLlmConversationDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateLlmConversation"),_1051,_o5(_7,[_o6(_8,_245,_1444)]))])),_399]) as unknown as DocumentNode<updateLlmConversationLlmChatWrapperMutation, updateLlmConversationLlmChatWrapperMutationVariables>;
export const LlmChatWrapperDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LlmChatWrapper"),_1097,_1445),_399,_405,_408]) as unknown as DocumentNode<LlmChatWrapperQuery, LlmChatWrapperQueryVariables>;
export const multiLlmConversationLlmConversationsViewingPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLlmConversationLlmConversationsViewingPageQuery"),_1442,_o5(_7,[_o7(_8,_1443,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_400)])),_835]))])),_399,_96,_402]) as unknown as DocumentNode<multiLlmConversationLlmConversationsViewingPageQueryQuery, multiLlmConversationLlmConversationsViewingPageQueryQueryVariables>;
export const LlmConversationsViewingPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LlmConversationsViewingPage"),_1097,_1445),_399,_405,_408]) as unknown as DocumentNode<LlmConversationsViewingPageQuery, LlmConversationsViewingPageQueryVariables>;
export const PostSummaryDialogDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostSummaryDialog"),_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_641)]))]))])),_642]) as unknown as DocumentNode<PostSummaryDialogQuery, PostSummaryDialogQueryVariables>;
export const PostLinkPreviewSequenceDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostLinkPreviewSequence"),_1448,_o5(_7,[_o7(_8,_550,_1449,_1282)])),_208,_96,_203,_219]) as unknown as DocumentNode<PostLinkPreviewSequenceQuery, PostLinkPreviewSequenceQueryVariables>;
export const PostLinkPreviewCommentDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostLinkPreviewComment"),_1448,_o5(_7,[_o7(_8,_198,_1449,_1126)])),_119,_130,_96,_158]) as unknown as DocumentNode<PostLinkPreviewCommentQuery, PostLinkPreviewCommentQueryVariables>;
export const PostLinkPreviewPostDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostLinkPreviewPost"),_1448,_o5(_7,[_o7(_8,_187,_1449,_1450)])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<PostLinkPreviewPostQuery, PostLinkPreviewPostQueryVariables>;
export const ArbitalPageRequestDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ArbitalPageRequest"),[_o12(_1024,_1451,_1038)],_o5(_7,[_o7(_8,_o3(_3,"ArbitalPageData"),[_o8(_526,_o3(_3,"pageAlias"),_1451)],_o5(_7,[_17,_147]))]))]) as unknown as DocumentNode<ArbitalPageRequestQuery, ArbitalPageRequestQueryVariables>;
export const updateUserCommunityHomeDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserCommunityHome"),_1047,_1230),_96,_203,_675]) as unknown as DocumentNode<updateUserCommunityHomeMutation, updateUserCommunityHomeMutationVariables>;
export const multiUserCommunityMapQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserCommunityMapQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_932)])),_835]))])),_935]) as unknown as DocumentNode<multiUserCommunityMapQueryQuery, multiUserCommunityMapQueryQueryVariables>;
export const multiLocalgroupCommunityMapQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupCommunityMapQuery"),_1231,_1234),_96,_413,_203,_416]) as unknown as DocumentNode<multiLocalgroupCommunityMapQueryQuery, multiLocalgroupCommunityMapQueryQueryVariables>;
export const multiPostCommunityMapQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostCommunityMapQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostCommunityMapQueryQuery, multiPostCommunityMapQueryQueryVariables>;
export const updateLocalgroupGroupFormDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateLocalgroupGroupFormDialog"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateLocalgroupDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateLocalgroup"),_1051,_1452)])),_96,_413,_203,_416]) as unknown as DocumentNode<updateLocalgroupGroupFormDialogMutation, updateLocalgroupGroupFormDialogMutationVariables>;
export const createLocalgroupGroupFormDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createLocalgroupGroupFormDialog"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateLocalgroupDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createLocalgroup"),_1061,_1452)])),_96,_413,_203,_416]) as unknown as DocumentNode<createLocalgroupGroupFormDialogMutation, createLocalgroupGroupFormDialogMutationVariables>;
export const GroupFormDialogDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"GroupFormDialog"),_1097,_o5(_7,[_o7(_8,_1027,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_417)]))]))])),_96,_413,_203,_249,_418]) as unknown as DocumentNode<GroupFormDialogQuery, GroupFormDialogQueryVariables>;
export const multiPostLocalGroupPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostLocalGroupPageQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostLocalGroupPageQueryQuery, multiPostLocalGroupPageQueryQueryVariables>;
export const LocalGroupPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LocalGroupPage"),_1097,_o5(_7,[_o7(_8,_1027,_1454,_1455)])),_96,_413,_203,_416]) as unknown as DocumentNode<LocalGroupPageQuery, LocalGroupPageQueryVariables>;
export const multiSubscriptionLocalGroupSubscribersQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSubscriptionLocalGroupSubscribersQuery"),_1407,_o5(_7,[_o7(_8,_1408,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_772)])),_835]))])),_96,_773]) as unknown as DocumentNode<multiSubscriptionLocalGroupSubscribersQueryQuery, multiSubscriptionLocalGroupSubscribersQueryQueryVariables>;
export const multiLocalgroupLocalGroupsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupLocalGroupsListQuery"),_1231,_1234),_96,_413,_203,_416]) as unknown as DocumentNode<multiLocalgroupLocalGroupsListQueryQuery, multiLocalgroupLocalGroupsListQueryQueryVariables>;
export const SetPersonalMapLocationDialogDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SetPersonalMapLocationDialog"),_1097,_1315),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<SetPersonalMapLocationDialogQuery, SetPersonalMapLocationDialogQueryVariables>;
export const multiPostTabNavigationEventsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostTabNavigationEventsListQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostTabNavigationEventsListQueryQuery, multiPostTabNavigationEventsListQueryQueryVariables>;
export const multiMessageConversationContentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiMessageConversationContentsQuery"),_1456,_1457),_96,_333]) as unknown as DocumentNode<multiMessageConversationContentsQueryQuery, multiMessageConversationContentsQueryQueryVariables>;
export const updateConversationInboxNavigationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateConversationInboxNavigation"),_1458,_1460),_328,_96,_333,_337]) as unknown as DocumentNode<updateConversationInboxNavigationMutation, updateConversationInboxNavigationMutationVariables>;
export const multiMessageConversationPreviewQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiMessageConversationPreviewQuery"),_1456,_1457),_96,_333]) as unknown as DocumentNode<multiMessageConversationPreviewQueryQuery, multiMessageConversationPreviewQueryQueryVariables>;
export const ConversationPreviewDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ConversationPreview"),_1097,_o5(_7,[_o7(_8,_1461,_1102,_o5(_7,[_o6(_8,_1031,_1459)]))])),_328,_96,_333,_337]) as unknown as DocumentNode<ConversationPreviewQuery, ConversationPreviewQueryVariables>;
export const updateConversationConversationTitleEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateConversationConversationTitleEditForm"),_1458,_1460),_328,_96,_333,_337]) as unknown as DocumentNode<updateConversationConversationTitleEditFormMutation, updateConversationConversationTitleEditFormMutationVariables>;
export const multiConversationFriendlyInboxQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiConversationFriendlyInboxQuery"),_1462,_o5(_7,[_o7(_8,_1463,_1077,_o5(_7,[_o6(_8,_1040,_1464),_835]))])),_328,_96,_333,_337,_340]) as unknown as DocumentNode<multiConversationFriendlyInboxQueryQuery, multiConversationFriendlyInboxQueryQueryVariables>;
export const FriendlyInboxDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"FriendlyInbox"),_1097,_o5(_7,[_o7(_8,_1461,_1102,_o5(_7,[_o6(_8,_1031,_1464)]))])),_328,_96,_333,_337,_340]) as unknown as DocumentNode<FriendlyInboxQuery, FriendlyInboxQueryVariables>;
export const MessageUserGetUserBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"MessageUserGetUserBySlug"),_1467,_o5(_7,[_o7(_8,_1468,_1470,_106)])),_96]) as unknown as DocumentNode<MessageUserGetUserBySlugQuery, MessageUserGetUserBySlugQueryVariables>;
export const createMessageMessagesNewFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createMessageMessagesNewForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateMessageDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createMessage"),_1061,_o5(_7,[_o6(_8,_245,_336)]))])),_96,_333]) as unknown as DocumentNode<createMessageMessagesNewFormMutation, createMessageMessagesNewFormMutationVariables>;
export const MessagesNewFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"MessagesNewForm"),_1097,_o5(_7,[_o7(_8,_o3(_3,"moderationTemplate"),_1102,_o5(_7,[_o6(_8,_1031,_1471)]))])),_203,_249,_435]) as unknown as DocumentNode<MessagesNewFormQuery, MessagesNewFormQueryVariables>;
export const updateModerationTemplateModerationTemplateFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateModerationTemplateModerationTemplateForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateModerationTemplateDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateModerationTemplate"),_1051,_1472)])),_203,_249,_435]) as unknown as DocumentNode<updateModerationTemplateModerationTemplateFormMutation, updateModerationTemplateModerationTemplateFormMutationVariables>;
export const createModerationTemplateModerationTemplateFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createModerationTemplateModerationTemplateForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateModerationTemplateDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createModerationTemplate"),_1061,_1472)])),_203,_249,_435]) as unknown as DocumentNode<createModerationTemplateModerationTemplateFormMutation, createModerationTemplateModerationTemplateFormMutationVariables>;
export const multiModerationTemplateModerationTemplatesPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiModerationTemplateModerationTemplatesPageQuery"),_1473,_1474),_203,_249,_435]) as unknown as DocumentNode<multiModerationTemplateModerationTemplatesPageQueryQuery, multiModerationTemplateModerationTemplatesPageQueryQueryVariables>;
export const CommentOnYourDraftNotificationHoverDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentOnYourDraftNotificationHover"),_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_279)]))])),_26]) as unknown as DocumentNode<CommentOnYourDraftNotificationHoverQuery, CommentOnYourDraftNotificationHoverQueryVariables>;
export const EmailPreviewQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailPreviewQuery"),[_o12(_1024,_1476,_1367),_1090],_o5(_7,[_o7(_8,_o3(_3,"EmailPreview"),[_o8(_526,_1475,_1476),_905],_o5(_7,[_o4(_8,_o3(_3,"to")),_o4(_8,_o3(_3,"subject")),_147,_498]))]))]) as unknown as DocumentNode<EmailPreviewQueryQuery, EmailPreviewQueryQueryVariables>;
export const multiNotificationNotificationsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiNotificationNotificationsListQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"NotificationSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"notifications"),_1077,_o5(_7,[_o6(_8,_1040,_1477),_835]))])),_451]) as unknown as DocumentNode<multiNotificationNotificationsListQueryQuery, multiNotificationNotificationsListQueryQueryVariables>;
export const NotificationsMenuButtonDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NotificationsMenuButton"),_1097,_1478),_926]) as unknown as DocumentNode<NotificationsMenuButtonQuery, NotificationsMenuButtonQueryVariables>;
export const NotificationsPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NotificationsPage"),_1097,_1478),_926]) as unknown as DocumentNode<NotificationsPageQuery, NotificationsPageQueryVariables>;
export const NotificationsPageItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NotificationsPageItem"),_1097,_1163),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<NotificationsPageItemQuery, NotificationsPageItemQueryVariables>;
export const getNotificationDisplaysDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getNotificationDisplays"),[_1071,_o12(_1024,_1479,_1026)],_o5(_7,[_o7(_8,_o3(_3,"NotificationDisplays"),[_1076,_o8(_526,_243,_1479)],_o5(_7,[_o4(_8,_1040)]))]))]) as unknown as DocumentNode<getNotificationDisplaysQuery, getNotificationDisplaysQueryVariables>;
export const MarkAllNotificationsAsReadDocument = _o1(_1,[_o15(_1022,_1043,_1480,_o5(_7,[_o4(_8,_1480)]))]) as unknown as DocumentNode<MarkAllNotificationsAsReadMutation, MarkAllNotificationsAsReadMutationVariables>;
export const updateNotificationNotificationsPopoverNotificationDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateNotificationNotificationsPopoverNotification"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateNotificationDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateNotification"),_1051,_o5(_7,[_o6(_8,_245,_1477)]))])),_451]) as unknown as DocumentNode<updateNotificationNotificationsPopoverNotificationMutation, updateNotificationNotificationsPopoverNotificationMutationVariables>;
export const TagRelNotificationItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagRelNotificationItem"),_1097,_1481),_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_995]) as unknown as DocumentNode<TagRelNotificationItemQuery, TagRelNotificationItemQueryVariables>;
export const multiUserAdminPaymentsPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserAdminPaymentsPageQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserAdminPaymentsPageQueryQuery, multiUserAdminPaymentsPageQueryQueryVariables>;
export const updateUserEditPaymentInfoPageDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserEditPaymentInfoPage"),_1047,_1482),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<updateUserEditPaymentInfoPageMutation, updateUserEditPaymentInfoPageMutationVariables>;
export const multiTagusePeopleDirectoryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagusePeopleDirectoryQuery"),_1175,_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_870)])),_835]))])),_871]) as unknown as DocumentNode<multiTagusePeopleDirectoryQueryQuery, multiTagusePeopleDirectoryQueryQueryVariables>;
export const ActiveTagCountDocument = _o1(_1,[_o15(_1022,_1023,_1483,_o5(_7,[_o4(_8,_1483)]))]) as unknown as DocumentNode<ActiveTagCountQuery, ActiveTagCountQueryVariables>;
export const AddToCalendarButtonDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"AddToCalendarButton"),_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_536)]))]))])),_538]) as unknown as DocumentNode<AddToCalendarButtonQuery, AddToCalendarButtonQueryVariables>;
export const multiPostCurrentOpenThreadPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostCurrentOpenThreadPageQuery"),_1273,_1324),_26]) as unknown as DocumentNode<multiPostCurrentOpenThreadPageQueryQuery, multiPostCurrentOpenThreadPageQueryQueryVariables>;
export const multiPostDraftsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostDraftsListQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostDraftsListQueryQuery, multiPostDraftsListQueryQueryVariables>;
export const updatePostDraftsListDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostDraftsList"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostDraftsListMutation, updatePostDraftsListMutationVariables>;
export const updatePostExternalPostImporterDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostExternalPostImporter"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostExternalPostImporterMutation, updatePostExternalPostImporterMutationVariables>;
export const createCommentExternalPostImporterDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createCommentExternalPostImporter"),_1065,_1068),_119,_130,_96,_158]) as unknown as DocumentNode<createCommentExternalPostImporterMutation, createCommentExternalPostImporterMutationVariables>;
export const importUrlAsDraftPostDocument = _o1(_1,[_o11(_1022,_1043,_1484,[_o12(_1024,_1485,_1038)],_o5(_7,[_o7(_8,_1484,[_o8(_526,_30,_1485)],_o5(_7,[_o4(_8,_o3(_3,"alreadyExists")),_o6(_8,_187,_o5(_7,[_10,_16,_17,_404,_31,_32,_81,_o4(_8,_o3(_3,"modifiedAt")),_23,_18,_24]))]))]))]) as unknown as DocumentNode<importUrlAsDraftPostMutation, importUrlAsDraftPostMutationVariables>;
export const FeedPostsHighlightDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"FeedPostsHighlight"),_1097,_1486),_535]) as unknown as DocumentNode<FeedPostsHighlightQuery, FeedPostsHighlightQueryVariables>;
export const latestGoogleDocMetadataDocument = _o1(_1,[_o11(_1022,_1023,_1487,[_1266,_1155],_o5(_7,[_o10(_8,_1487,[_905,_543])]))]) as unknown as DocumentNode<latestGoogleDocMetadataQuery, latestGoogleDocMetadataQueryVariables>;
export const ImportGoogleDocDocument = _o1(_1,[_o11(_1022,_1043,_1488,[_o12(_1024,_1490,_1038),_1090],_o5(_7,[_o7(_8,_1488,[_o8(_526,_1489,_1490),_905],_300)])),_26,_78]) as unknown as DocumentNode<ImportGoogleDocMutation, ImportGoogleDocMutationVariables>;
export const multiPostLWPostsByVoteQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostLWPostsByVoteQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostLWPostsByVoteQueryQuery, multiPostLWPostsByVoteQueryQueryVariables>;
export const createPostNewDialogueDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPostNewDialogueDialog"),_1491,_1493),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<createPostNewDialogueDialogMutation, createPostNewDialogueDialogMutationVariables>;
export const multiPostPingbacksListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostPingbacksListQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostPingbacksListQueryQuery, multiPostPingbacksListQueryQueryVariables>;
export const updatePostPostFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostPostForm"),_1062,_o5(_7,[_o7(_8,_1063,_1051,_1495)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_595]) as unknown as DocumentNode<updatePostPostFormMutation, updatePostPostFormMutationVariables>;
export const createPostPostFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPostPostForm"),_1491,_o5(_7,[_o7(_8,_1492,_1061,_1495)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_595]) as unknown as DocumentNode<createPostPostFormMutation, createPostPostFormMutationVariables>;
export const multiUserMostValuablePostPostMostValuableCheckboxQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserMostValuablePostPostMostValuableCheckboxQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserMostValuablePostSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"userMostValuablePosts"),_1077,_o5(_7,[_o6(_8,_1040,_1496),_835]))])),_892]) as unknown as DocumentNode<multiUserMostValuablePostPostMostValuableCheckboxQueryQuery, multiUserMostValuablePostPostMostValuableCheckboxQueryQueryVariables>;
export const updateUserMostValuablePostPostMostValuableCheckboxDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserMostValuablePostPostMostValuableCheckbox"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUserMostValuablePostDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateUserMostValuablePost"),_1051,_1497)])),_892]) as unknown as DocumentNode<updateUserMostValuablePostPostMostValuableCheckboxMutation, updateUserMostValuablePostPostMostValuableCheckboxMutationVariables>;
export const createUserMostValuablePostPostMostValuableCheckboxDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createUserMostValuablePostPostMostValuableCheckbox"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateUserMostValuablePostDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createUserMostValuablePost"),_1061,_1497)])),_892]) as unknown as DocumentNode<createUserMostValuablePostPostMostValuableCheckboxMutation, createUserMostValuablePostPostMostValuableCheckboxMutationVariables>;
export const multiPostPostsByVoteQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostPostsByVoteQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostPostsByVoteQueryQuery, multiPostPostsByVoteQueryQueryVariables>;
export const multiVotePostsByVoteWrapperQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiVotePostsByVoteWrapperQuery"),_1114,_1316),_1000]) as unknown as DocumentNode<multiVotePostsByVoteWrapperQueryQuery, multiVotePostsByVoteWrapperQueryQueryVariables>;
export const multiRevisionPostsCompareRevisionsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionPostsCompareRevisionsQuery"),_1335,_1498),_540,_96,_710]) as unknown as DocumentNode<multiRevisionPostsCompareRevisionsQueryQuery, multiRevisionPostsCompareRevisionsQueryQueryVariables>;
export const PostsCompareRevisionsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsCompareRevisions"),_1499,_o5(_7,[_o7(_8,_187,_1102,_1500)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575,_208,_219,_558,_466,_469,_560,_564,_566,_580]) as unknown as DocumentNode<PostsCompareRevisionsQuery, PostsCompareRevisionsQueryVariables>;
export const multiCommentPostsDialogItemNewCommentsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentPostsDialogItemNewCommentsListQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentPostsDialogItemNewCommentsListQueryQuery, multiCommentPostsDialogItemNewCommentsListQueryQueryVariables>;
export const PostsEditFormUserDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsEditFormUser"),[_1096,_o12(_1024,_910,_1074)],_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_908)]))]))])),_911]) as unknown as DocumentNode<PostsEditFormUserQuery, PostsEditFormUserQueryVariables>;
export const PostsGroupDetailsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsGroupDetails"),_1097,_o5(_7,[_o7(_8,_1027,_1102,_1455)])),_96,_413,_203,_416]) as unknown as DocumentNode<PostsGroupDetailsQuery, PostsGroupDetailsQueryVariables>;
export const PostsHighlightDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsHighlight"),_1097,_1486),_535]) as unknown as DocumentNode<PostsHighlightQuery, PostsHighlightQueryVariables>;
export const multiCommentPostsItemNewCommentsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentPostsItemNewCommentsListQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentPostsItemNewCommentsListQueryQuery, multiCommentPostsItemNewCommentsListQueryQueryVariables>;
export const LatestDialogueMessagesDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LatestDialogueMessages"),[_o12(_1024,_1502,_1038),_o12(_1024,_1503,_1081)],_o5(_7,[_o10(_8,_o3(_3,"latestDialogueMessages"),[_o8(_526,_1501,_1502),_o8(_526,_o3(_3,"numMessages"),_1503)])]))]) as unknown as DocumentNode<LatestDialogueMessagesQuery, LatestDialogueMessagesQueryVariables>;
export const PostsItemWrapperDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsItemWrapper"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<PostsItemWrapperQuery, PostsItemWrapperQueryVariables>;
export const createPostPostsNewFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPostPostsNewForm"),_1491,_1493),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589]) as unknown as DocumentNode<createPostPostsNewFormMutation, createPostPostsNewFormMutationVariables>;
export const PostsNewForm4Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsNewForm4"),_1097,_1315),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<PostsNewForm4Query, PostsNewForm4QueryVariables>;
export const PostsNewForm3Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsNewForm3"),_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_1494)]))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_595]) as unknown as DocumentNode<PostsNewForm3Query, PostsNewForm3QueryVariables>;
export const PostsNewForm2Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsNewForm2"),_1097,_o5(_7,[_o7(_8,_1027,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_419)]))]))])),_420]) as unknown as DocumentNode<PostsNewForm2Query, PostsNewForm2QueryVariables>;
export const PostsNewForm1Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsNewForm1"),_1505,_1506),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_593]) as unknown as DocumentNode<PostsNewForm1Query, PostsNewForm1QueryVariables>;
export const PostsNewFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsNewForm"),_1097,_1105),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<PostsNewFormQuery, PostsNewFormQueryVariables>;
export const multiReviewWinnerBestOfLessWrongAnnouncementQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewWinnerBestOfLessWrongAnnouncementQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"ReviewWinnerSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"reviewWinners"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_704)])),_835]))])),_705]) as unknown as DocumentNode<multiReviewWinnerBestOfLessWrongAnnouncementQueryQuery, multiReviewWinnerBestOfLessWrongAnnouncementQueryQueryVariables>;
export const createSplashArtCoordinateImageCropPreviewDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSplashArtCoordinateImageCropPreview"),_1507,_o5(_7,[_o7(_8,_1508,_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_468]))]))])),_466]) as unknown as DocumentNode<createSplashArtCoordinateImageCropPreviewMutation, createSplashArtCoordinateImageCropPreviewMutationVariables>;
export const createSplashArtCoordinatePostWithArtGridDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSplashArtCoordinatePostWithArtGrid"),_1507,_o5(_7,[_o7(_8,_1508,_1061,_o5(_7,[_o6(_8,_245,_477)]))])),_466,_469]) as unknown as DocumentNode<createSplashArtCoordinatePostWithArtGridMutation, createSplashArtCoordinatePostWithArtGridMutationVariables>;
export const multiCommentReviewPillContainerQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentReviewPillContainerQuery"),_1086,_1509),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<multiCommentReviewPillContainerQueryQuery, multiCommentReviewPillContainerQueryQueryVariables>;
export const flipSplashArtImageDocument = _o1(_1,[_o11(_1022,_1043,_1510,[_o12(_1024,_1511,_1038)],_o5(_7,[_o10(_8,_1510,[_o8(_526,_465,_1511)])]))]) as unknown as DocumentNode<flipSplashArtImageMutation, flipSplashArtImageMutationVariables>;
export const multiReviewWinnerArtSplashImageEditingOptionsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewWinnerArtSplashImageEditingOptionsQuery"),_1512,_1513),_466,_469,_560]) as unknown as DocumentNode<multiReviewWinnerArtSplashImageEditingOptionsQueryQuery, multiReviewWinnerArtSplashImageEditingOptionsQueryQueryVariables>;
export const PostBodyDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostBody"),_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_586]))]))])),_582,_584]) as unknown as DocumentNode<PostBodyQuery, PostBodyQueryVariables>;
export const PostsPageWrapper1Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPageWrapper1"),[_1096,_1042,_1155],_o5(_7,[_o7(_8,_187,_1454,_1514)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548,_208,_219,_558,_466,_469,_560,_564,_566,_572]) as unknown as DocumentNode<PostsPageWrapper1Query, PostsPageWrapper1QueryVariables>;
export const PostsPageWrapperDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPageWrapper"),_1499,_o5(_7,[_o7(_8,_187,_1454,_1500)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575,_208,_219,_558,_466,_469,_560,_564,_566,_580]) as unknown as DocumentNode<PostsPageWrapperQuery, PostsPageWrapperQueryVariables>;
export const PostsRevisionsListDocument = _o1(_1,[_o11(_1022,_1023,_596,_1097,_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_596)]))]))])),_540,_597]) as unknown as DocumentNode<PostsRevisionsListQuery, PostsRevisionsListQueryVariables>;
export const RegisterRSVPDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"RegisterRSVP"),[_1090,_1516,_1309,_o12(_1024,_1518,_1074),_o12(_1024,_1519,_1026)],_o5(_7,[_o7(_8,_o3(_3,"RSVPToEvent"),[_905,_1520,_1312,_o8(_526,_1517,_1518),_o8(_526,_777,_1519)],_1249)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<RegisterRSVPMutation, RegisterRSVPMutationVariables>;
export const CancelRSVPToEventDocument = _o1(_1,[_o11(_1022,_1043,_1521,[_1090,_1516,_1378],_o5(_7,[_o7(_8,_1521,[_905,_1520,_1292],_1249)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<CancelRSVPToEventMutation, CancelRSVPToEventMutationVariables>;
export const LWPostsPreviewTooltip1Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LWPostsPreviewTooltip1"),[_1096,_o12(_1024,_639,_1026)],_o5(_7,[_o7(_8,_187,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_637)]))]))])),_640]) as unknown as DocumentNode<LWPostsPreviewTooltip1Query, LWPostsPreviewTooltip1QueryVariables>;
export const LWPostsPreviewTooltipDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LWPostsPreviewTooltip"),_1179,_1180),_636]) as unknown as DocumentNode<LWPostsPreviewTooltipQuery, LWPostsPreviewTooltipQueryVariables>;
export const PostsPreviewTooltipSingle4Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPreviewTooltipSingle4"),_1097,_1481),_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_995]) as unknown as DocumentNode<PostsPreviewTooltipSingle4Query, PostsPreviewTooltipSingle4QueryVariables>;
export const PostsPreviewTooltipSingle3Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPreviewTooltipSingle3"),_1097,_1127),_119,_130,_96,_158]) as unknown as DocumentNode<PostsPreviewTooltipSingle3Query, PostsPreviewTooltipSingle3QueryVariables>;
export const PostsPreviewTooltipSingleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPreviewTooltipSingle"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<PostsPreviewTooltipSingleQuery, PostsPreviewTooltipSingleQueryVariables>;
export const multiPostPostsTimeBlockQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostPostsTimeBlockQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostPostsTimeBlockQueryQuery, multiPostPostsTimeBlockQueryQueryVariables>;
export const getRecombeeLatestPostsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getRecombeeLatestPosts"),_1522,_o5(_7,[_o7(_8,_o3(_3,"RecombeeLatestPosts"),_1523,_1524)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getRecombeeLatestPostsQuery, getRecombeeLatestPostsQueryVariables>;
export const getRecombeeHybridPostsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getRecombeeHybridPosts"),_1522,_o5(_7,[_o7(_8,_o3(_3,"RecombeeHybridPosts"),_1523,_1524)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getRecombeeHybridPostsQuery, getRecombeeHybridPostsQueryVariables>;
export const createCommentDialogueSubmitDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createCommentDialogueSubmit"),_1065,_o5(_7,[_o7(_8,_1066,_1061,_o5(_7,[_o6(_8,_245,_1139)]))])),_119,_130,_96,_158,_203,_249,_292]) as unknown as DocumentNode<createCommentDialogueSubmitMutation, createCommentDialogueSubmitMutationVariables>;
export const PostsEditFormPostDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsEditFormPost"),_1505,_1506),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_593]) as unknown as DocumentNode<PostsEditFormPostQuery, PostsEditFormPostQueryVariables>;
export const multiCommentPostsPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentPostsPageQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentPostsPageQueryQuery, multiCommentPostsPageQueryQueryVariables>;
export const postCommentsThreadQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"postCommentsThreadQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<postCommentsThreadQueryQuery, postCommentsThreadQueryQueryVariables>;
export const multiPostusePostQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostusePostQuery"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_1525,_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<multiPostusePostQueryQuery, multiPostusePostQueryQueryVariables>;
export const postsListWithVotesDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"postsListWithVotes"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<postsListWithVotesQuery, postsListWithVotesQueryVariables>;
export const postsListTagWithVotesDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"postsListTagWithVotes"),[_1272,_1071,_1075,_1526],_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_532)])),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_524,_533]) as unknown as DocumentNode<postsListTagWithVotesQuery, postsListTagWithVotesQueryVariables>;
export const multiCommentQuickTakesSectionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentQuickTakesSectionQuery"),_1086,_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_282)])),_835]))])),_119,_130,_96,_158,_26,_281,_287]) as unknown as DocumentNode<multiCommentQuickTakesSectionQueryQuery, multiCommentQuickTakesSectionQueryQueryVariables>;
export const multiTaguseQuickTakesTagsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTaguseQuickTakesTagsQuery"),_1175,_1528),_119,_130]) as unknown as DocumentNode<multiTaguseQuickTakesTagsQueryQuery, multiTaguseQuickTakesTagsQueryQueryVariables>;
export const multiPostRecentDiscussionThreadsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostRecentDiscussionThreadsListQuery"),[_1272,_1071,_1075,_1205,_1206,_1091],_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1209),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_608]) as unknown as DocumentNode<multiPostRecentDiscussionThreadsListQueryQuery, multiPostRecentDiscussionThreadsListQueryQueryVariables>;
export const CuratedAndPopularThisWeekDocument = _o1(_1,[_o11(_1022,_1023,_1529,_1165,_o5(_7,[_o7(_8,_1529,_1084,_1245)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<CuratedAndPopularThisWeekQuery, CuratedAndPopularThisWeekQueryVariables>;
export const multiPostRecommendationsSamplePageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostRecommendationsSamplePageQuery"),_1273,_1275),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<multiPostRecommendationsSamplePageQueryQuery, multiPostRecommendationsSamplePageQueryQueryVariables>;
export const WelcomePostItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"WelcomePostItem"),_1097,_1248),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<WelcomePostItemQuery, WelcomePostItemQueryVariables>;
export const observeRecommendationDocument = _o1(_1,[_o11(_1022,_1043,_1530,_1267,_o5(_7,[_o10(_8,_1530,_906)]))]) as unknown as DocumentNode<observeRecommendationMutation, observeRecommendationMutationVariables>;
export const clickRecommendationDocument = _o1(_1,[_o11(_1022,_1043,_1531,_1267,_o5(_7,[_o10(_8,_1531,_906)]))]) as unknown as DocumentNode<clickRecommendationMutation, clickRecommendationMutationVariables>;
export const ContinueReadingQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"ContinueReadingQuery"),_o5(_7,[_o6(_8,_o3(_3,"ContinueReading"),_o5(_7,[_o6(_8,_550,_o5(_7,[_o4(_28,_756)])),_o6(_8,_1532,_o5(_7,[_o4(_28,_267)])),_o6(_8,_557,_189),_o4(_8,_o3(_3,"numRead")),_o4(_8,_o3(_3,"numTotal")),_o4(_8,_o3(_3,"lastReadTime"))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_757,_269,_184]) as unknown as DocumentNode<ContinueReadingQueryQuery, ContinueReadingQueryQueryVariables>;
export const dismissRecommendationDocument = _o1(_1,[_o11(_1022,_1043,_1533,_1419,_o5(_7,[_o10(_8,_1533,_906)]))]) as unknown as DocumentNode<dismissRecommendationMutation, dismissRecommendationMutationVariables>;
export const RecommendationsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"RecommendationsQuery"),_1537,_1538),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_208,_203,_219,_487]) as unknown as DocumentNode<RecommendationsQueryQuery, RecommendationsQueryQueryVariables>;
export const multiReviewWinnerArtBestOfLessWrongAdminQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewWinnerArtBestOfLessWrongAdminQuery"),_1512,_1513),_466,_469,_560]) as unknown as DocumentNode<multiReviewWinnerArtBestOfLessWrongAdminQueryQuery, multiReviewWinnerArtBestOfLessWrongAdminQueryQueryVariables>;
export const BestOfLessWrongAdminDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"BestOfLessWrongAdmin"),_1540),_26,_466,_469,_479,_483]) as unknown as DocumentNode<BestOfLessWrongAdminQuery, BestOfLessWrongAdminQueryVariables>;
export const FrontpageBestOfLWWidgetDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"FrontpageBestOfLWWidget"),_1097,_1248),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<FrontpageBestOfLWWidgetQuery, FrontpageBestOfLWWidgetQueryVariables>;
export const GenerateCoverImagesForPostDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"GenerateCoverImagesForPost"),[_1266,_o12(_1024,_1542,_1026)],_o5(_7,[_o7(_8,_o3(_3,"generateCoverImagesForPost"),[_905,_o8(_526,_1541,_1542)],_556)]))]) as unknown as DocumentNode<GenerateCoverImagesForPostMutation, GenerateCoverImagesForPostMutationVariables>;
export const multiCommentLatestReviewQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentLatestReviewQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentLatestReviewQueryQuery, multiCommentLatestReviewQueryQueryVariables>;
export const PostNominatedNotificationDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostNominatedNotification"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<PostNominatedNotificationQuery, PostNominatedNotificationQueryVariables>;
export const getPostsUserCommentedOnDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getPostsUserCommentedOn"),_1112,_o5(_7,[_o7(_8,_o3(_3,"PostsUserCommentedOn"),_1113,_o5(_7,[_228]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<getPostsUserCommentedOnQuery, getPostsUserCommentedOnQueryVariables>;
export const multiPostQuickReviewPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostQuickReviewPageQuery"),_1273,_1544),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_512]) as unknown as DocumentNode<multiPostQuickReviewPageQueryQuery, multiPostQuickReviewPageQueryQueryVariables>;
export const multiPostQuickReviewPage2022QueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostQuickReviewPage2022Query"),_1273,_1544),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_512]) as unknown as DocumentNode<multiPostQuickReviewPage2022QueryQuery, multiPostQuickReviewPage2022QueryQueryVariables>;
export const multiReviewVoteReviewAdminDashboardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewVoteReviewAdminDashboardQuery"),_1545,_o5(_7,[_o7(_8,_1391,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_702)])),_835]))])),_703]) as unknown as DocumentNode<multiReviewVoteReviewAdminDashboardQueryQuery, multiReviewVoteReviewAdminDashboardQueryQueryVariables>;
export const multiCommentReviewPostCommentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentReviewPostCommentsQuery"),_1086,_1509),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<multiCommentReviewPostCommentsQueryQuery, multiCommentReviewPostCommentsQueryQueryVariables>;
export const multiCommentReviewProgressNominationsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentReviewProgressNominationsQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentReviewProgressNominationsQueryQuery, multiCommentReviewProgressNominationsQueryQueryVariables>;
export const multiCommentReviewProgressReviewsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentReviewProgressReviewsQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentReviewProgressReviewsQueryQuery, multiCommentReviewProgressReviewsQueryQueryVariables>;
export const multiReviewVoteReviewProgressVotingQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewVoteReviewProgressVotingQuery"),_1545,_1546),_701]) as unknown as DocumentNode<multiReviewVoteReviewProgressVotingQueryQuery, multiReviewVoteReviewProgressVotingQueryQueryVariables>;
export const multiReviewVoteReviewVotingCanvasQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReviewVoteReviewVotingCanvasQuery"),_1545,_1546),_701]) as unknown as DocumentNode<multiReviewVoteReviewVotingCanvasQueryQuery, multiReviewVoteReviewVotingCanvasQueryQueryVariables>;
export const GivingSeasonHeartsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"GivingSeasonHeartsQuery"),_1549,_o5(_7,[_o7(_8,_o3(_3,"GivingSeasonHearts"),_1551,_1554)]))]) as unknown as DocumentNode<GivingSeasonHeartsQueryQuery, GivingSeasonHeartsQueryQueryVariables>;
export const AddGivingSeasonHeartDocument = _o1(_1,[_o11(_1022,_1043,_1555,[_1548,_1363,_o12(_1024,_1556,_1362),_o12(_1024,_1557,_1362)],_o5(_7,[_o7(_8,_1555,[_1550,_1370,_o8(_526,_1552,_1556),_o8(_526,_1553,_1557)],_1554)]))]) as unknown as DocumentNode<AddGivingSeasonHeartMutation, AddGivingSeasonHeartMutationVariables>;
export const RemoveGivingSeasonHeartDocument = _o1(_1,[_o11(_1022,_1043,_1558,_1549,_o5(_7,[_o7(_8,_1558,_1551,_1554)]))]) as unknown as DocumentNode<RemoveGivingSeasonHeartMutation, RemoveGivingSeasonHeartMutationVariables>;
export const ReviewVotingExpandedPostDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ReviewVotingExpandedPost"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<ReviewVotingExpandedPostQuery, ReviewVotingExpandedPostQueryVariables>;
export const multiPostReviewVotingPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostReviewVotingPageQuery"),_1273,_1544),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_512]) as unknown as DocumentNode<multiPostReviewVotingPageQueryQuery, multiPostReviewVotingPageQueryQueryVariables>;
export const submitReviewVoteDocument = _o1(_1,[_o11(_1022,_1043,_1559,[_1090,_o12(_1024,_1560,_1070),_o12(_1024,_1562,_1070),_o12(_1024,_1564,_1070),_o12(_1024,_1565,_1026),_o12(_1024,_1317,_1026),_o12(_1024,_1566,_1074)],_o5(_7,[_o7(_8,_1559,[_905,_o8(_526,_508,_1560),_o8(_526,_1561,_1562),_o8(_526,_198,_1565),_o8(_526,_1563,_1564),_1318,_o8(_526,_700,_1566)],_1543)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_512]) as unknown as DocumentNode<submitReviewVoteMutation, submitReviewVoteMutationVariables>;
export const updateUserReviews2019Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserReviews2019"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserReviews2019Mutation, updateUserReviews2019MutationVariables>;
export const multiCommentReviewsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentReviewsListQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentReviewsListQueryQuery, multiCommentReviewsListQueryQueryVariables>;
export const RotatingReviewWinnerSpotlightDisplayDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"RotatingReviewWinnerSpotlightDisplay"),_1097,_o5(_7,[_o7(_8,_1016,_1102,_o5(_7,[_o6(_8,_1031,_1017)]))])),_762,_96,_1014]) as unknown as DocumentNode<RotatingReviewWinnerSpotlightDisplayQuery, RotatingReviewWinnerSpotlightDisplayQueryVariables>;
export const RotatingReviewWinnerSpotlightDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"RotatingReviewWinnerSpotlight"),_o5(_7,[_o6(_8,_1539,_o5(_7,[_o6(_8,_481,_o5(_7,[_10,_472])),_o6(_8,_1016,_556)]))]))]) as unknown as DocumentNode<RotatingReviewWinnerSpotlightQuery, RotatingReviewWinnerSpotlightQueryVariables>;
export const multiCommentSingleLineReviewsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentSingleLineReviewsListQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentSingleLineReviewsListQueryQuery, multiCommentSingleLineReviewsListQueryQueryVariables>;
export const multiUserUserReviewsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserUserReviewsQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserUserReviewsQueryQuery, multiUserUserReviewsQueryQueryVariables>;
export const updateRevisionCompareRevisionsDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateRevisionCompareRevisions"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateRevisionDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateRevision"),_1051,_o5(_7,[_o6(_8,_245,_252)]))])),_203,_249]) as unknown as DocumentNode<updateRevisionCompareRevisionsMutation, updateRevisionCompareRevisionsMutationVariables>;
export const RevisionsDiffDocument = _o1(_1,[_o11(_1022,_1023,_1567,[_o12(_1024,_1568,_1038),_o12(_1024,_1569,_1038),_o12(_1024,_1571,_1038),_o12(_1024,_1573,_1026),_o12(_1024,_1575,_1038),_o12(_1024,_1577,_1074)],_o5(_7,[_o10(_8,_1567,[_o8(_526,_195,_1568),_o8(_526,_367,_1569),_o8(_526,_1570,_1571),_o8(_526,_1572,_1573),_o8(_526,_1574,_1575),_o8(_526,_1576,_1577)])]))]) as unknown as DocumentNode<RevisionsDiffQuery, RevisionsDiffQueryVariables>;
export const multiRevisionPostsRevisionSelectQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionPostsRevisionSelectQuery"),_1335,_1336),_540,_96,_708]) as unknown as DocumentNode<multiRevisionPostsRevisionSelectQueryQuery, multiRevisionPostsRevisionSelectQueryQueryVariables>;
export const PostsRevisionSelectDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsRevisionSelect"),_1097,_1250),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502]) as unknown as DocumentNode<PostsRevisionSelectQuery, PostsRevisionSelectQueryVariables>;
export const multiRevisionTagPageRevisionSelectQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionTagPageRevisionSelectQuery"),_1335,_1498),_540,_96,_710]) as unknown as DocumentNode<multiRevisionTagPageRevisionSelectQueryQuery, multiRevisionTagPageRevisionSelectQueryQueryVariables>;
export const multiRSSFeedNewFeedButtonQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRSSFeedNewFeedButtonQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"RSSFeedSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"rSSFeeds"),_1077,_o5(_7,[_o6(_8,_1040,_500),_835]))])),_96,_494]) as unknown as DocumentNode<multiRSSFeedNewFeedButtonQueryQuery, multiRSSFeedNewFeedButtonQueryQueryVariables>;
export const createRSSFeedNewFeedButtonDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createRSSFeedNewFeedButton"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateRSSFeedDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createRSSFeed"),_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_754)]))]))])),_755]) as unknown as DocumentNode<createRSSFeedNewFeedButtonMutation, createRSSFeedNewFeedButtonMutationVariables>;
export const multiUserAprilFools2022QueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserAprilFools2022Query"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserAprilFools2022QueryQuery, multiUserAprilFools2022QueryQueryVariables>;
export const HomepageCommunityMapDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"HomepageCommunityMap"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<HomepageCommunityMapQuery, HomepageCommunityMapQueryVariables>;
export const launchPetrovMissileDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"launchPetrovMissile"),[_o12(_1024,_1579,_1026)],_o5(_7,[_o7(_8,_o3(_3,"PetrovDayLaunchMissile"),[_o8(_526,_1578,_1579)],_o5(_7,[_o4(_8,_1578)]))]))]) as unknown as DocumentNode<launchPetrovMissileMutation, launchPetrovMissileMutationVariables>;
export const petrovDayLaunchResolversDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"petrovDayLaunchResolvers"),_o5(_7,[_o6(_8,_o3(_3,"PetrovDayCheckIfIncoming"),_o5(_7,[_o4(_8,_o3(_3,"launched")),_81]))]))]) as unknown as DocumentNode<petrovDayLaunchResolversQuery, petrovDayLaunchResolversQueryVariables>;
export const meetupMonthQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"meetupMonthQuery"),_o5(_7,[_o7(_8,_o3(_3,"HomepageCommunityEvents"),[_o8(_526,_832,_o3(_1393,"500"))],_o5(_7,[_o6(_8,_o3(_3,"events"),_o5(_7,[_10,_933,_934,_59]))]))]))]) as unknown as DocumentNode<meetupMonthQueryQuery, meetupMonthQueryQueryVariables>;
export const multiPetrovDayActionOptIntoPetrovButtonQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPetrovDayActionOptIntoPetrovButtonQuery"),_1580,_1582),_453]) as unknown as DocumentNode<multiPetrovDayActionOptIntoPetrovButtonQueryQuery, multiPetrovDayActionOptIntoPetrovButtonQueryQueryVariables>;
export const createPetrovDayActionOptIntoPetrovButtonDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPetrovDayActionOptIntoPetrovButton"),_1583,_1584),_453]) as unknown as DocumentNode<createPetrovDayActionOptIntoPetrovButtonMutation, createPetrovDayActionOptIntoPetrovButtonMutationVariables>;
export const multiPetrovDayActionPetrovAdminConsoleQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPetrovDayActionPetrovAdminConsoleQuery"),_1580,_1582),_453]) as unknown as DocumentNode<multiPetrovDayActionPetrovAdminConsoleQueryQuery, multiPetrovDayActionPetrovAdminConsoleQueryQueryVariables>;
export const multiPetrovDayActionPetrovGameWrapperQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPetrovDayActionPetrovGameWrapperQuery"),_1580,_1582),_453]) as unknown as DocumentNode<multiPetrovDayActionPetrovGameWrapperQueryQuery, multiPetrovDayActionPetrovGameWrapperQueryQueryVariables>;
export const petrov2024checkIfNukedDocument = _o1(_1,[_o15(_1022,_1023,_1585,_o5(_7,[_o4(_8,_1585)]))]) as unknown as DocumentNode<petrov2024checkIfNukedQuery, petrov2024checkIfNukedQueryVariables>;
export const multiPetrovDayActionPetrovLaunchConsoleQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPetrovDayActionPetrovLaunchConsoleQuery"),_1580,_1582),_453]) as unknown as DocumentNode<multiPetrovDayActionPetrovLaunchConsoleQueryQuery, multiPetrovDayActionPetrovLaunchConsoleQueryQueryVariables>;
export const createPetrovDayActionPetrovLaunchConsoleDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPetrovDayActionPetrovLaunchConsole"),_1583,_1584),_453]) as unknown as DocumentNode<createPetrovDayActionPetrovLaunchConsoleMutation, createPetrovDayActionPetrovLaunchConsoleMutationVariables>;
export const multiPetrovDayActionPetrovWarningConsoleQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPetrovDayActionPetrovWarningConsoleQuery"),_1580,_1582),_453]) as unknown as DocumentNode<multiPetrovDayActionPetrovWarningConsoleQueryQuery, multiPetrovDayActionPetrovWarningConsoleQueryQueryVariables>;
export const createPetrovDayActionPetrovWarningConsoleDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createPetrovDayActionPetrovWarningConsole"),_1583,_1584),_453]) as unknown as DocumentNode<createPetrovDayActionPetrovWarningConsoleMutation, createPetrovDayActionPetrovWarningConsoleMutationVariables>;
export const petrovDay2024ResolversDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"petrovDay2024Resolvers"),_o5(_7,[_o6(_8,_o3(_3,"PetrovDay2024CheckNumberOfIncoming"),_o5(_7,[_1321]))]))]) as unknown as DocumentNode<petrovDay2024ResolversQuery, petrovDay2024ResolversQueryVariables>;
export const updateChapterAddDraftPostDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateChapterAddDraftPostDialog"),_1586,_o5(_7,[_o7(_8,_1587,_1051,_o5(_7,[_o6(_8,_245,_234)]))])),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229]) as unknown as DocumentNode<updateChapterAddDraftPostDialogMutation, updateChapterAddDraftPostDialogMutationVariables>;
export const updateBookBooksFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateBookBooksForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateBookDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateBook"),_1051,_1588)])),_203,_208,_96,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239]) as unknown as DocumentNode<updateBookBooksFormMutation, updateBookBooksFormMutationVariables>;
export const createBookBooksFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createBookBooksForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateBookDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createBook"),_1061,_1588)])),_203,_208,_96,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239]) as unknown as DocumentNode<createBookBooksFormMutation, createBookBooksFormMutationVariables>;
export const BooksItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"BooksItem"),_1097,_o5(_7,[_o7(_8,_o3(_3,"book"),_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_250)]))]))])),_203,_208,_96,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_249,_254]) as unknown as DocumentNode<BooksItemQuery, BooksItemQueryVariables>;
export const updateChapterChaptersFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateChapterChaptersForm"),_1586,_o5(_7,[_o7(_8,_1587,_1051,_1590)])),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229,_249,_256]) as unknown as DocumentNode<updateChapterChaptersFormMutation, updateChapterChaptersFormMutationVariables>;
export const createChapterChaptersFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createChapterChaptersForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateChapterDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createChapter"),_1061,_1590)])),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229,_249,_256]) as unknown as DocumentNode<createChapterChaptersFormMutation, createChapterChaptersFormMutationVariables>;
export const ChaptersItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ChaptersItem"),_1097,_o5(_7,[_o7(_8,_o3(_3,"chapter"),_1102,_o5(_7,[_o6(_8,_1031,_1589)]))])),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229,_249,_256]) as unknown as DocumentNode<ChaptersItemQuery, ChaptersItemQueryVariables>;
export const multiChapterChaptersListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiChapterChaptersListQuery"),_1286,_1287),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229]) as unknown as DocumentNode<multiChapterChaptersListQueryQuery, multiChapterChaptersListQueryQueryVariables>;
export const updateCollectionCollectionsEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCollectionCollectionsEditForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateCollectionDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateCollection"),_1051,_o5(_7,[_o6(_8,_245,_1591)]))])),_96,_203,_208,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_272]) as unknown as DocumentNode<updateCollectionCollectionsEditFormMutation, updateCollectionCollectionsEditFormMutationVariables>;
export const CollectionsEditDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CollectionsEdit"),_1097,_o5(_7,[_o7(_8,_1532,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_273)]))]))])),_96,_203,_208,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_272,_249,_275]) as unknown as DocumentNode<CollectionsEditQuery, CollectionsEditQueryVariables>;
export const multiPostSequenceDraftsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostSequenceDraftsListQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostSequenceDraftsListQueryQuery, multiPostSequenceDraftsListQueryQueryVariables>;
export const updateSequenceSequencesFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateSequenceSequencesForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateSequenceDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateSequence"),_1051,_1593)])),_208,_96,_203,_219,_249,_759]) as unknown as DocumentNode<updateSequenceSequencesFormMutation, updateSequenceSequencesFormMutationVariables>;
export const createSequenceSequencesFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSequenceSequencesForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSequenceDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createSequence"),_1061,_1593)])),_208,_96,_203,_219,_249,_759]) as unknown as DocumentNode<createSequenceSequencesFormMutation, createSequenceSequencesFormMutationVariables>;
export const multiSequenceSequencesGridWrapperQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSequenceSequencesGridWrapperQuery"),_1276,_1277),_208,_96,_203,_219]) as unknown as DocumentNode<multiSequenceSequencesGridWrapperQueryQuery, multiSequenceSequencesGridWrapperQueryQueryVariables>;
export const SequencesPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SequencesPage"),_1097,_o5(_7,[_o7(_8,_550,_1454,_1282)])),_208,_96,_203,_219]) as unknown as DocumentNode<SequencesPageQuery, SequencesPageQueryVariables>;
export const SequencesEditDocument = _o1(_1,[_o11(_1022,_1023,_758,_1097,_o5(_7,[_o7(_8,_550,_1454,_o5(_7,[_o6(_8,_1031,_1592)]))])),_208,_96,_203,_219,_249,_759]) as unknown as DocumentNode<SequencesEditQuery, SequencesEditQueryVariables>;
export const multiChapterSequencesSummaryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiChapterSequencesSummaryQuery"),_1286,_1287),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229]) as unknown as DocumentNode<multiChapterSequencesSummaryQueryQuery, multiChapterSequencesSummaryQueryQueryVariables>;
export const GetAllReviewWinnersDocument = _o1(_1,[_o15(_1022,_1023,_1539,_1540),_26,_466,_469,_479,_483]) as unknown as DocumentNode<GetAllReviewWinnersQuery, GetAllReviewWinnersQueryVariables>;
export const GetReviewWinnerSpotlightsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"GetReviewWinnerSpotlights"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_160,_482,_1018]))]))])),_26,_466,_469,_762,_96,_78,_479,_1014]) as unknown as DocumentNode<GetReviewWinnerSpotlightsQuery, GetReviewWinnerSpotlightsQueryVariables>;
export const CollectionsPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CollectionsPage"),_1097,_o5(_7,[_o7(_8,_1532,_1102,_o5(_7,[_o6(_8,_1031,_1591)]))])),_96,_203,_208,_219,_26,_78,_108,_119,_130,_158,_169,_175,_180,_184,_229,_235,_239,_272]) as unknown as DocumentNode<CollectionsPageQuery, CollectionsPageQueryVariables>;
export const updateContinueReadingDocument = _o1(_1,[_o11(_1022,_1043,_1594,[_o12(_1024,_551,_1038),_1266],_o5(_7,[_o10(_8,_1594,[_552,_905])]))]) as unknown as DocumentNode<updateContinueReadingMutation, updateContinueReadingMutationVariables>;
export const ProfileShortformDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ProfileShortform"),_1097,_1248),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<ProfileShortformQuery, ProfileShortformQueryVariables>;
export const multiCommentRepliesToCommentListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentRepliesToCommentListQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentRepliesToCommentListQueryQuery, multiCommentRepliesToCommentListQueryQueryVariables>;
export const multiCommentShortformThreadListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentShortformThreadListQuery"),_1086,_1509),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<multiCommentShortformThreadListQueryQuery, multiCommentShortformThreadListQueryQueryVariables>;
export const multiCommentShortformTimeBlockQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentShortformTimeBlockQuery"),_1086,_1172),_119,_130,_96,_158,_26,_281]) as unknown as DocumentNode<multiCommentShortformTimeBlockQueryQuery, multiCommentShortformTimeBlockQueryQueryVariables>;
export const DisplaySpotlightQueryDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"DisplaySpotlightQuery"),_o5(_7,[_o6(_8,_1173,_1017)])),_762,_96,_1014]) as unknown as DocumentNode<DisplaySpotlightQueryQuery, DisplaySpotlightQueryQueryVariables>;
export const updateSpotlightSpotlightFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateSpotlightSpotlightForm"),_1595,_o5(_7,[_o7(_8,_1596,_1051,_1598)])),_762,_203,_249,_768]) as unknown as DocumentNode<updateSpotlightSpotlightFormMutation, updateSpotlightSpotlightFormMutationVariables>;
export const createSpotlightSpotlightFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSpotlightSpotlightForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSpotlightDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createSpotlight"),_1061,_1598)])),_762,_203,_249,_768]) as unknown as DocumentNode<createSpotlightSpotlightFormMutation, createSpotlightSpotlightFormMutationVariables>;
export const multiSpotlightSpotlightHistoryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSpotlightSpotlightHistoryQuery"),_1599,_1600),_762,_96,_1014]) as unknown as DocumentNode<multiSpotlightSpotlightHistoryQueryQuery, multiSpotlightSpotlightHistoryQueryQueryVariables>;
export const updateSpotlightSpotlightItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateSpotlightSpotlightItem"),_1595,_o5(_7,[_o7(_8,_1596,_1051,_o5(_7,[_o6(_8,_245,_1017)]))])),_762,_96,_1014]) as unknown as DocumentNode<updateSpotlightSpotlightItemMutation, updateSpotlightSpotlightItemMutationVariables>;
export const SpotlightItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SpotlightItem"),_1097,_o5(_7,[_o7(_8,_1016,_1102,_o5(_7,[_o6(_8,_1031,_1597)]))])),_762,_203,_249,_768]) as unknown as DocumentNode<SpotlightItemQuery, SpotlightItemQueryVariables>;
export const SpotlightStartOrContinueReadingQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SpotlightStartOrContinueReadingQuery"),_1603,_o5(_7,[_o7(_8,_1016,[_o8(_526,_1098,_o13(_1029,[_o8(_1030,_1028,_o13(_1029,[_o8(_1030,_257,_1602)]))]))],_o5(_7,[_o6(_8,_1031,_o5(_7,[_10,_o6(_8,_o3(_3,"sequenceChapters"),_o5(_7,[_10,_o6(_8,_227,_692)]))]))]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<SpotlightStartOrContinueReadingQueryQuery, SpotlightStartOrContinueReadingQueryQueryVariables>;
export const multiSpotlightSpotlightsPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSpotlightSpotlightsPageQuery"),_1599,_1600),_762,_96,_1014]) as unknown as DocumentNode<multiSpotlightSpotlightsPageQueryQuery, multiSpotlightSpotlightsPageQueryQueryVariables>;
export const publishAndDeDuplicateSpotlightDocument = _o1(_1,[_o11(_1022,_1043,_1604,_1603,_o5(_7,[_o7(_8,_1604,[_o8(_526,_1601,_1602)],_1017)])),_762,_96,_1014]) as unknown as DocumentNode<publishAndDeDuplicateSpotlightMutation, publishAndDeDuplicateSpotlightMutationVariables>;
export const multiSubscriptionFollowUserSearchQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSubscriptionFollowUserSearchQuery"),_1407,_1410),_771]) as unknown as DocumentNode<multiSubscriptionFollowUserSearchQueryQuery, multiSubscriptionFollowUserSearchQueryQueryVariables>;
export const UserFollowingCountDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserFollowingCount"),_1407,_o5(_7,[_o7(_8,_1408,_1077,_o5(_7,[_835]))]))]) as unknown as DocumentNode<UserFollowingCountQuery, UserFollowingCountQueryVariables>;
export const SuggestedFeedSubscriptionUsersDocument = _o1(_1,[_o11(_1022,_1023,_1605,_1165,_o5(_7,[_o7(_8,_1605,_1084,_o5(_7,[_1093]))])),_96]) as unknown as DocumentNode<SuggestedFeedSubscriptionUsersQuery, SuggestedFeedSubscriptionUsersQueryVariables>;
export const updateCommentAFSuggestCommentsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentAFSuggestCommentsItem"),_1128,_1255),_119,_130,_96,_158,_26,_323]) as unknown as DocumentNode<updateCommentAFSuggestCommentsItemMutation, updateCommentAFSuggestCommentsItemMutationVariables>;
export const multiCommentAFSuggestCommentsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentAFSuggestCommentsListQuery"),_1086,_1088),_119,_130,_96,_158,_26,_323]) as unknown as DocumentNode<multiCommentAFSuggestCommentsListQueryQuery, multiCommentAFSuggestCommentsListQueryQueryVariables>;
export const updatePostAFSuggestPostsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostAFSuggestPostsItem"),_1062,_1607),_26,_78,_96,_108,_119,_130,_158,_169,_175,_684]) as unknown as DocumentNode<updatePostAFSuggestPostsItemMutation, updatePostAFSuggestPostsItemMutationVariables>;
export const multiPostAFSuggestPostsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostAFSuggestPostsListQuery"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1606),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_684]) as unknown as DocumentNode<multiPostAFSuggestPostsListQueryQuery, multiPostAFSuggestPostsListQueryQueryVariables>;
export const updateUserAFSuggestUsersItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserAFSuggestUsersItem"),_1047,_1608),_96,_620,_690]) as unknown as DocumentNode<updateUserAFSuggestUsersItemMutation, updateUserAFSuggestUsersItemMutationVariables>;
export const multiUserAFSuggestUsersListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserAFSuggestUsersListQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_984)])),_835]))])),_96,_985]) as unknown as DocumentNode<multiUserAFSuggestUsersListQueryQuery, multiUserAFSuggestUsersListQueryQueryVariables>;
export const AllReactedCommentsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"AllReactedComments"),_1165,_o5(_7,[_o7(_8,_o3(_3,"CommentsWithReacts"),_1084,_1166)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<AllReactedCommentsQuery, AllReactedCommentsQueryVariables>;
export const multiLWEventEmailHistoryQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLWEventEmailHistoryQuery"),_1143,_o5(_7,[_o7(_8,_1144,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_429)])),_835]))])),_430]) as unknown as DocumentNode<multiLWEventEmailHistoryQueryQuery, multiLWEventEmailHistoryQueryQueryVariables>;
export const ModGPTDashboardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ModGPTDashboardQuery"),_1609,_o5(_7,[_o7(_8,_917,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_309)]))]))])),_119,_130,_96,_158,_26,_310]) as unknown as DocumentNode<ModGPTDashboardQueryQuery, ModGPTDashboardQueryQueryVariables>;
export const multiClientIdModerationAltAccountsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiClientIdModerationAltAccountsQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"ClientIdSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"clientIds"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_260)])),_835]))])),_96,_266]) as unknown as DocumentNode<multiClientIdModerationAltAccountsQueryQuery, multiClientIdModerationAltAccountsQueryQueryVariables>;
export const multiUserModerationAltAccountsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserModerationAltAccountsQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_1610),_835]))])),_96,_620,_690,_931]) as unknown as DocumentNode<multiUserModerationAltAccountsQueryQuery, multiUserModerationAltAccountsQueryQueryVariables>;
export const ModerationAltAccountsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ModerationAltAccounts"),_1097,_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_1610)]))])),_96,_620,_690,_931]) as unknown as DocumentNode<ModerationAltAccountsQuery, ModerationAltAccountsQueryVariables>;
export const ModeratorIPAddressInfoDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ModeratorIPAddressInfo"),[_o12(_1024,_1612,_1038)],_o5(_7,[_o7(_8,_o3(_3,"moderatorViewIPAddress"),[_o8(_526,_1611,_1612)],_o5(_7,[_o4(_8,_o3(_3,"ip")),_688]))]))]) as unknown as DocumentNode<ModeratorIPAddressInfoQuery, ModeratorIPAddressInfoQueryVariables>;
export const multiUserModerationDashboardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserModerationDashboardQuery"),_1092,_1613),_96,_620,_690]) as unknown as DocumentNode<multiUserModerationDashboardQueryQuery, multiUserModerationDashboardQueryQueryVariables>;
export const updateUserModeratorActionsDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserModeratorActions"),_1047,_1608),_96,_620,_690]) as unknown as DocumentNode<updateUserModeratorActionsMutation, updateUserModeratorActionsMutationVariables>;
export const createModeratorActionDocument = _o1(_1,[_o11(_1022,_1043,_1614,_1615,_1617),_96,_620]) as unknown as DocumentNode<createModeratorActionMutation, createModeratorActionMutationVariables>;
export const multiConversationModeratorMessageCountQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiConversationModeratorMessageCountQuery"),_1462,_o5(_7,[_o7(_8,_1463,_1077,_o5(_7,[_o6(_8,_1040,_1404),_835]))])),_328]) as unknown as DocumentNode<multiConversationModeratorMessageCountQueryQuery, multiConversationModeratorMessageCountQueryQueryVariables>;
export const multiUserAltAccountInfoQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserAltAccountInfoQuery"),_1092,_1613),_96,_620,_690]) as unknown as DocumentNode<multiUserAltAccountInfoQueryQuery, multiUserAltAccountInfoQueryQueryVariables>;
export const updateModeratorActionModeratorActionItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateModeratorActionModeratorActionItem"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateModeratorActionDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateModeratorAction"),_1051,_1616)])),_96,_620]) as unknown as DocumentNode<updateModeratorActionModeratorActionItemMutation, updateModeratorActionModeratorActionItemMutationVariables>;
export const multiUserRecentlyActiveUsersQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserRecentlyActiveUsersQuery"),_1092,_1613),_96,_620,_690]) as unknown as DocumentNode<multiUserRecentlyActiveUsersQueryQuery, multiUserRecentlyActiveUsersQueryQueryVariables>;
export const NewCommentModerationWarningDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NewCommentModerationWarning"),_1097,_1127),_119,_130,_96,_158]) as unknown as DocumentNode<NewCommentModerationWarningQuery, NewCommentModerationWarningQueryVariables>;
export const createModeratorActionNewModeratorActionDialogDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createModeratorActionNewModeratorActionDialog"),_1615,_1617),_96,_620]) as unknown as DocumentNode<createModeratorActionNewModeratorActionDialogMutation, createModeratorActionNewModeratorActionDialogMutationVariables>;
export const NewPostModerationWarningDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NewPostModerationWarning"),_1097,_1127),_119,_130,_96,_158]) as unknown as DocumentNode<NewPostModerationWarningQuery, NewPostModerationWarningQueryVariables>;
export const multiModerationTemplateRejectContentDialogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiModerationTemplateRejectContentDialogQuery"),_1473,_1474),_203,_249,_435]) as unknown as DocumentNode<multiModerationTemplateRejectContentDialogQueryQuery, multiModerationTemplateRejectContentDialogQueryQueryVariables>;
export const createReportReportFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createReportReportForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateReportDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createReport"),_1061,_1619)])),_96,_119,_130,_158,_26,_78,_108,_169,_175,_620,_690,_696]) as unknown as DocumentNode<createReportReportFormMutation, createReportReportFormMutationVariables>;
export const updatePostSunshineCuratedSuggestionsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostSunshineCuratedSuggestionsItem"),_1062,_o5(_7,[_o7(_8,_1063,_1051,_o5(_7,[_o6(_8,_245,_1620)]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_203,_249,_517,_521]) as unknown as DocumentNode<updatePostSunshineCuratedSuggestionsItemMutation, updatePostSunshineCuratedSuggestionsItemMutationVariables>;
export const multiPostsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostsListQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostsListQueryQuery, multiPostsListQueryQueryVariables>;
export const multiSunshineCurationPostsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSunshineCurationPostsListQuery"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_1620),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_203,_249,_517,_521]) as unknown as DocumentNode<multiSunshineCurationPostsListQueryQuery, multiSunshineCurationPostsListQueryQueryVariables>;
export const multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"GoogleServiceAccountSessionSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"googleServiceAccountSessions"),_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_388)])),_835]))])),_389]) as unknown as DocumentNode<multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQueryQuery, multiGoogleServiceAccountSessionSunshineGoogleServiceAccountQueryQueryVariables>;
export const updateCommentSunshineNewCommentsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentSunshineNewCommentsItem"),_1128,_1422),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<updateCommentSunshineNewCommentsItemMutation, updateCommentSunshineNewCommentsItemMutationVariables>;
export const multiCommentSunshineNewCommentsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentSunshineNewCommentsListQuery"),_1609,_o5(_7,[_o7(_8,_917,_1417,_1166)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentSunshineNewCommentsListQueryQuery, multiCommentSunshineNewCommentsListQueryQueryVariables>;
export const updatePostSunshineNewPostsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostSunshineNewPostsItem"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostSunshineNewPostsItemMutation, updatePostSunshineNewPostsItemMutationVariables>;
export const createModeratorActionSunshineNewPostsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createModeratorActionSunshineNewPostsItem"),_1615,_o5(_7,[_o7(_8,_1614,_1061,_1621)]))]) as unknown as DocumentNode<createModeratorActionSunshineNewPostsItemMutation, createModeratorActionSunshineNewPostsItemMutationVariables>;
export const multiPostSunshineNewPostsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostSunshineNewPostsListQuery"),_1273,_1415),_26,_78,_96,_108,_119,_130,_158,_169,_618,_203,_620,_628]) as unknown as DocumentNode<multiPostSunshineNewPostsListQueryQuery, multiPostSunshineNewPostsListQueryQueryVariables>;
export const multiTagRelSunshineNewTagsItemQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagRelSunshineNewTagsItemQuery"),_1622,_1624),_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_995]) as unknown as DocumentNode<multiTagRelSunshineNewTagsItemQueryQuery, multiTagRelSunshineNewTagsItemQueryQueryVariables>;
export const updateTagSunshineNewTagsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagSunshineNewTagsItem"),_1150,_o5(_7,[_o7(_8,_1151,_1051,_o5(_7,[_o6(_8,_245,_1625)]))])),_119,_96,_208,_203,_219,_717,_720,_867]) as unknown as DocumentNode<updateTagSunshineNewTagsItemMutation, updateTagSunshineNewTagsItemMutationVariables>;
export const multiTagSunshineNewTagsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagSunshineNewTagsListQuery"),_1175,_1626),_119,_96,_208,_203,_219,_717,_720,_867]) as unknown as DocumentNode<multiTagSunshineNewTagsListQueryQuery, multiTagSunshineNewTagsListQueryQueryVariables>;
export const multiCommentSunshineNewUsersInfoQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentSunshineNewUsersInfoQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentSunshineNewUsersInfoQueryQuery, multiCommentSunshineNewUsersInfoQueryQueryVariables>;
export const multiUserSunshineNewUsersListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserSunshineNewUsersListQuery"),_1092,_1613),_96,_620,_690]) as unknown as DocumentNode<multiUserSunshineNewUsersListQueryQuery, multiUserSunshineNewUsersListQueryQueryVariables>;
export const SunshineNewUsersProfileInfoDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SunshineNewUsersProfileInfo"),_1097,_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_695)]))])),_96,_620,_690]) as unknown as DocumentNode<SunshineNewUsersProfileInfoQuery, SunshineNewUsersProfileInfoQueryVariables>;
export const multiReportSunshineReportedContentListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiReportSunshineReportedContentListQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"ReportSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"reports"),_1077,_o5(_7,[_o6(_8,_1040,_1618),_835]))])),_96,_119,_130,_158,_26,_78,_108,_169,_175,_620,_690,_696]) as unknown as DocumentNode<multiReportSunshineReportedContentListQueryQuery, multiReportSunshineReportedContentListQueryQueryVariables>;
export const updatePostSunshineReportedItem1Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostSunshineReportedItem1"),_1062,_1064),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<updatePostSunshineReportedItem1Mutation, updatePostSunshineReportedItem1MutationVariables>;
export const updateCommentSunshineReportedItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentSunshineReportedItem"),_1128,_1422),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<updateCommentSunshineReportedItemMutation, updateCommentSunshineReportedItemMutationVariables>;
export const updateReportSunshineReportedContentListDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateReportSunshineReportedContentList"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateReportDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateReport"),_1051,_1619)])),_96,_119,_130,_158,_26,_78,_108,_169,_175,_620,_690,_696]) as unknown as DocumentNode<updateReportSunshineReportedContentListMutation, updateReportSunshineReportedContentListMutationVariables>;
export const multiModerationTemplateSunshineSendMessageWithDefaultsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiModerationTemplateSunshineSendMessageWithDefaultsQuery"),_1473,_1474),_203,_249,_435]) as unknown as DocumentNode<multiModerationTemplateSunshineSendMessageWithDefaultsQueryQuery, multiModerationTemplateSunshineSendMessageWithDefaultsQueryQueryVariables>;
export const multiConversationSunshineUserMessagesQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiConversationSunshineUserMessagesQuery"),_1462,_o5(_7,[_o7(_8,_1463,_1077,_o5(_7,[_o6(_8,_1040,_1459),_835]))])),_328,_96,_333,_337]) as unknown as DocumentNode<multiConversationSunshineUserMessagesQueryQuery, multiConversationSunshineUserMessagesQueryQueryVariables>;
export const multiUserRateLimitUserRateLimitItemQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserRateLimitUserRateLimitItemQuery"),_1627,_1629),_96,_900]) as unknown as DocumentNode<multiUserRateLimitUserRateLimitItemQueryQuery, multiUserRateLimitUserRateLimitItemQueryQueryVariables>;
export const updateUserRateLimitUserRateLimitItem1Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserRateLimitUserRateLimitItem1"),_1630,_o5(_7,[_o7(_8,_1631,_1051,_1632)])),_898]) as unknown as DocumentNode<updateUserRateLimitUserRateLimitItem1Mutation, updateUserRateLimitUserRateLimitItem1MutationVariables>;
export const updateUserRateLimitUserRateLimitItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserRateLimitUserRateLimitItem"),_1630,_o5(_7,[_o7(_8,_1631,_1051,_1633)])),_96,_900]) as unknown as DocumentNode<updateUserRateLimitUserRateLimitItemMutation, updateUserRateLimitUserRateLimitItemMutationVariables>;
export const createUserRateLimitUserRateLimitItem1Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createUserRateLimitUserRateLimitItem1"),_1634,_o5(_7,[_o7(_8,_1635,_1061,_1632)])),_898]) as unknown as DocumentNode<createUserRateLimitUserRateLimitItem1Mutation, createUserRateLimitUserRateLimitItem1MutationVariables>;
export const createUserRateLimitUserRateLimitItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createUserRateLimitUserRateLimitItem"),_1634,_o5(_7,[_o7(_8,_1635,_1061,_1633)])),_96,_900]) as unknown as DocumentNode<createUserRateLimitUserRateLimitItemMutation, createUserRateLimitUserRateLimitItemMutationVariables>;
export const multiCommentUsersReviewInfoCardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentUsersReviewInfoCardQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentUsersReviewInfoCardQueryQuery, multiCommentUsersReviewInfoCardQueryQueryVariables>;
export const DeletedCommentsModerationLogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"DeletedCommentsModerationLogQuery"),_1086,_o5(_7,[_o7(_8,_917,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_295)])),_835]))])),_294,_96,_297]) as unknown as DocumentNode<DeletedCommentsModerationLogQueryQuery, DeletedCommentsModerationLogQueryQueryVariables>;
export const UsersBannedFromPostsModerationLogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UsersBannedFromPostsModerationLogQuery"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_615)])),_835]))])),_96,_616]) as unknown as DocumentNode<UsersBannedFromPostsModerationLogQueryQuery, UsersBannedFromPostsModerationLogQueryQueryVariables>;
export const UsersBannedFromUsersModerationLogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UsersBannedFromUsersModerationLogQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_927)])),_835]))])),_929]) as unknown as DocumentNode<UsersBannedFromUsersModerationLogQueryQuery, UsersBannedFromUsersModerationLogQueryQueryVariables>;
export const ModeratorActionModerationLogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"ModeratorActionModerationLogQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"ModeratorActionSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_625,_1077,_o5(_7,[_o6(_8,_1040,_626),_835]))])),_96,_620]) as unknown as DocumentNode<ModeratorActionModerationLogQueryQuery, ModeratorActionModerationLogQueryQueryVariables>;
export const UserRateLimitModerationLogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserRateLimitModerationLogQuery"),_1627,_1629),_96,_900]) as unknown as DocumentNode<UserRateLimitModerationLogQueryQuery, UserRateLimitModerationLogQueryQueryVariables>;
export const multiCommentRejectedCommentsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentRejectedCommentsListQuery"),_1086,_1161),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<multiCommentRejectedCommentsListQueryQuery, multiCommentRejectedCommentsListQueryQueryVariables>;
export const multiSurveyScheduleSurveyAdminPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSurveyScheduleSurveyAdminPageQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"SurveyScheduleSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"surveySchedules"),_1077,_o5(_7,[_o6(_8,_1040,_1636),_835]))])),_780,_783,_788,_791]) as unknown as DocumentNode<multiSurveyScheduleSurveyAdminPageQueryQuery, multiSurveyScheduleSurveyAdminPageQueryQueryVariables>;
export const multiSurveySurveyAdminPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSurveySurveyAdminPageQuery"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"SurveySelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"surveys"),_1077,_o5(_7,[_o6(_8,_1040,_787),_835]))])),_780,_783]) as unknown as DocumentNode<multiSurveySurveyAdminPageQueryQuery, multiSurveySurveyAdminPageQueryQueryVariables>;
export const createSurveySurveyAdminPageDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSurveySurveyAdminPage"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSurveyDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createSurvey"),_1061,_o5(_7,[_o6(_8,_245,_787)]))])),_780,_783]) as unknown as DocumentNode<createSurveySurveyAdminPageMutation, createSurveySurveyAdminPageMutationVariables>;
export const SurveyEditPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SurveyEditPage"),_1097,_o5(_7,[_o7(_8,_786,_1102,_o5(_7,[_o6(_8,_1031,_787)]))])),_780,_783]) as unknown as DocumentNode<SurveyEditPageQuery, SurveyEditPageQueryVariables>;
export const editSurveyDocument = _o1(_1,[_o11(_1022,_1043,_1637,[_o12(_1024,_1638,_1038),_o12(_1024,_1515,_1038),_o12(_1024,_1639,_o14(_1036,_o14(_1037,_o14(_1036,_o4(_5,_o3(_3,"SurveyQuestionInfo"))))))],_o5(_7,[_o7(_8,_1637,[_o8(_526,_775,_1638),_1520,_o8(_526,_782,_1639)],_787)])),_780,_783]) as unknown as DocumentNode<editSurveyMutation, editSurveyMutationVariables>;
export const createSurveyResponseSurveyPostsItemDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSurveyResponseSurveyPostsItem"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSurveyResponseDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createSurveyResponse"),_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_774)]))]))])),_778]) as unknown as DocumentNode<createSurveyResponseSurveyPostsItemMutation, createSurveyResponseSurveyPostsItemMutationVariables>;
export const updateSurveyScheduleSurveyScheduleEditPageDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateSurveyScheduleSurveyScheduleEditPage"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateSurveyScheduleDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateSurveySchedule"),_1051,_1640)])),_780,_783,_788,_791]) as unknown as DocumentNode<updateSurveyScheduleSurveyScheduleEditPageMutation, updateSurveyScheduleSurveyScheduleEditPageMutationVariables>;
export const createSurveyScheduleSurveyScheduleEditPageDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSurveyScheduleSurveyScheduleEditPage"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateSurveyScheduleDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createSurveySchedule"),_1061,_1640)])),_780,_783,_788,_791]) as unknown as DocumentNode<createSurveyScheduleSurveyScheduleEditPageMutation, createSurveyScheduleSurveyScheduleEditPageMutationVariables>;
export const SurveyScheduleEditPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SurveyScheduleEditPage"),_1097,_o5(_7,[_o7(_8,_o3(_3,"surveySchedule"),_1102,_o5(_7,[_o6(_8,_1031,_1636)]))])),_780,_783,_788,_791]) as unknown as DocumentNode<SurveyScheduleEditPageQuery, SurveyScheduleEditPageQueryVariables>;
export const addPostsToTagDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"addPostsToTag"),_1641,_o5(_7,[_o7(_8,_1642,_1643,_o5(_7,[_o4(_28,_803)]))])),_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_524,_805]) as unknown as DocumentNode<addPostsToTagMutation, addPostsToTagMutationVariables>;
export const AllPostsPageTagRevisionItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"AllPostsPageTagRevisionItem"),_1097,_o5(_7,[_o7(_8,_1337,_1102,_o5(_7,[_o6(_8,_1031,_1202)]))])),_540,_96,_710]) as unknown as DocumentNode<AllPostsPageTagRevisionItemQuery, AllPostsPageTagRevisionItemQueryVariables>;
export const multiTagAllTagsAlphabeticalQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagAllTagsAlphabeticalQuery"),_1175,_1528),_119,_130]) as unknown as DocumentNode<multiTagAllTagsAlphabeticalQueryQuery, multiTagAllTagsAlphabeticalQueryQueryVariables>;
export const AllWikiTagsPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"AllWikiTagsPageQuery"),[_o12(_1024,_1645,_1039)],_o5(_7,[_o7(_8,_166,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"tagsBySlugs"),_o13(_1029,[_o8(_1030,_1644,_1645)]))]))],_o5(_7,[_o6(_8,_1040,_1646)]))])),_876]) as unknown as DocumentNode<AllWikiTagsPageQueryQuery, AllWikiTagsPageQueryQueryVariables>;
export const multiTagArbitalExplorePageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagArbitalExplorePageQuery"),[_1174,_1071,_1075,_1345],_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_872)])),_835]))])),_119,_96,_208,_203,_219,_717,_720,_873]) as unknown as DocumentNode<multiTagArbitalExplorePageQueryQuery, multiTagArbitalExplorePageQueryQueryVariables>;
export const multiTagCoreTagsChecklistQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagCoreTagsChecklistQuery"),_1175,_1177),_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<multiTagCoreTagsChecklistQueryQuery, multiTagCoreTagsChecklistQueryQueryVariables>;
export const multiTagCoreTagsSectionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagCoreTagsSectionQuery"),_1175,_o5(_7,[_o7(_8,_166,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_719])),_835]))])),_119,_96,_208,_203,_219,_717]) as unknown as DocumentNode<multiTagCoreTagsSectionQueryQuery, multiTagCoreTagsSectionQueryQueryVariables>;
export const EAAllTagsPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EAAllTagsPage"),_1097,_1647),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<EAAllTagsPageQuery, EAAllTagsPageQueryVariables>;
export const multiTagEATagPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagEATagPageQuery"),_1175,_1648),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<multiTagEATagPageQueryQuery, multiTagEATagPageQueryQueryVariables>;
export const EATagPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EATagPage"),_1097,_1647),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<EATagPageQuery, EATagPageQueryVariables>;
export const FilterModeDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"FilterMode"),_1097,_1650),_119,_130]) as unknown as DocumentNode<FilterModeQuery, FilterModeQueryVariables>;
export const multiTagRelFooterTagListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagRelFooterTagListQuery"),_1622,_o5(_7,[_o7(_8,_1623,_1077,_o5(_7,[_o6(_8,_1040,_1651),_835]))])),_799,_119,_130,_808]) as unknown as DocumentNode<multiTagRelFooterTagListQueryQuery, multiTagRelFooterTagListQueryQueryVariables>;
export const addOrUpvoteTagDocument = _o1(_1,[_o11(_1022,_1043,_1642,_1641,_o5(_7,[_o7(_8,_1642,_1643,_1651)])),_799,_119,_130,_808]) as unknown as DocumentNode<addOrUpvoteTagMutation, addOrUpvoteTagMutationVariables>;
export const multiTagLWTagPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagLWTagPageQuery"),_1175,_1648),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<multiTagLWTagPageQueryQuery, multiTagLWTagPageQueryQueryVariables>;
export const LWTagPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LWTagPage"),_1097,_1647),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<LWTagPageQuery, LWTagPageQueryVariables>;
export const updateTagNewTagPageDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagNewTagPage"),_1150,_o5(_7,[_o7(_8,_1151,_1051,_o5(_7,[_o6(_8,_245,_1158)]))])),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<updateTagNewTagPageMutation, updateTagNewTagPageMutationVariables>;
export const multiTagNewTagsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagNewTagsListQuery"),_1175,_1626),_119,_96,_208,_203,_219,_717,_720,_867]) as unknown as DocumentNode<multiTagNewTagsListQueryQuery, multiTagNewTagsListQueryQueryVariables>;
export const getRandomTagDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"getRandomTag"),_o5(_7,[_o6(_8,_o3(_3,"RandomTag"),_o5(_7,[_16]))]))]) as unknown as DocumentNode<getRandomTagQuery, getRandomTagQueryVariables>;
export const multiMultiDocumentRedlinkTagPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiMultiDocumentRedlinkTagPageQuery"),_1423,_o5(_7,[_o7(_8,_1424,_1077,_o5(_7,[_o6(_8,_1040,_446),_835]))])),_443]) as unknown as DocumentNode<multiMultiDocumentRedlinkTagPageQueryQuery, multiMultiDocumentRedlinkTagPageQueryQueryVariables>;
export const multiTagRedlinkTagPageQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagRedlinkTagPageQuery"),_1175,_1400),_119]) as unknown as DocumentNode<multiTagRedlinkTagPageQueryQuery, multiTagRedlinkTagPageQueryQueryVariables>;
export const multiSubscriptionSubscribeButtonQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSubscriptionSubscribeButtonQuery"),_1407,_1410),_771]) as unknown as DocumentNode<multiSubscriptionSubscribeButtonQueryQuery, multiSubscriptionSubscribeButtonQueryQueryVariables>;
export const createSubscriptionSubscribeButtonDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createSubscriptionSubscribeButton"),_1411,_1412),_771]) as unknown as DocumentNode<createSubscriptionSubscribeButtonMutation, createSubscriptionSubscribeButtonMutationVariables>;
export const multiMultiDocumentSummariesEditFormQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiMultiDocumentSummariesEditFormQuery"),_1423,_o5(_7,[_o7(_8,_1424,_1077,_o5(_7,[_o6(_8,_1040,_727),_835]))])),_443,_203,_249,_723]) as unknown as DocumentNode<multiMultiDocumentSummariesEditFormQueryQuery, multiMultiDocumentSummariesEditFormQueryQueryVariables>;
export const reorderSummariesDocument = _o1(_1,[_o11(_1022,_1043,_1652,[_o12(_1024,_1653,_1038),_o12(_1024,_1655,_1038),_o12(_1024,_1657,_1039)],_o5(_7,[_o10(_8,_1652,[_o8(_526,_438,_1653),_o8(_526,_1654,_1655),_o8(_526,_1656,_1657)])]))]) as unknown as DocumentNode<reorderSummariesMutation, reorderSummariesMutationVariables>;
export const updateMultiDocumentSummaryFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateMultiDocumentSummaryForm"),_1658,_o5(_7,[_o7(_8,_1659,_1051,_1660)])),_443,_203,_249,_723]) as unknown as DocumentNode<updateMultiDocumentSummaryFormMutation, updateMultiDocumentSummaryFormMutationVariables>;
export const createMultiDocumentSummaryFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createMultiDocumentSummaryForm"),_1661,_o5(_7,[_o7(_8,_1662,_1061,_1660)])),_443,_203,_249,_723]) as unknown as DocumentNode<createMultiDocumentSummaryFormMutation, createMultiDocumentSummaryFormMutationVariables>;
export const multiRevisionTagCompareRevisionsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionTagCompareRevisionsQuery"),_1335,_1498),_540,_96,_710]) as unknown as DocumentNode<multiRevisionTagCompareRevisionsQueryQuery, multiRevisionTagCompareRevisionsQueryQueryVariables>;
export const TagContributorsListDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagContributorsList"),_1097,_o5(_7,[_o7(_8,_137,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_862)]))]))])),_96,_863]) as unknown as DocumentNode<TagContributorsListQuery, TagContributorsListQueryVariables>;
export const multiCommentTagDiscussionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentTagDiscussionQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentTagDiscussionQueryQuery, multiCommentTagDiscussionQueryQueryVariables>;
export const multiCommentTagDiscussionButtonQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentTagDiscussionButtonQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentTagDiscussionButtonQueryQuery, multiCommentTagDiscussionButtonQueryQueryVariables>;
export const multiCommentTagDiscussionSectionQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentTagDiscussionSectionQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentTagDiscussionSectionQueryQuery, multiCommentTagDiscussionSectionQueryQueryVariables>;
export const multiRevisionTagEditsByUserQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiRevisionTagEditsByUserQuery"),_1335,_o5(_7,[_o7(_8,_545,_1077,_o5(_7,[_o6(_8,_1040,_1195),_835]))])),_540,_96,_710,_119,_208,_203,_219,_717,_720,_443,_249,_723,_728,_731,_735,_739,_744]) as unknown as DocumentNode<multiRevisionTagEditsByUserQueryQuery, multiRevisionTagEditsByUserQueryQueryVariables>;
export const getTagUpdatesDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getTagUpdates"),[_o12(_1024,_1664,_1665),_o12(_1024,_1667,_1665)],_o5(_7,[_o7(_8,_o3(_3,"TagUpdatesInTimeBlock"),[_o8(_526,_1663,_1664),_o8(_526,_1666,_1667)],_o5(_7,[_741,_o4(_8,_o3(_3,"revisionIds")),_38,_o4(_8,_1034),_o4(_8,_o3(_3,"lastRevisedAt")),_47,_o4(_8,_o3(_3,"added")),_o4(_8,_o3(_3,"removed")),_265,_o6(_8,_o3(_3,"documentDeletions"),_o5(_7,[_23,_258,_o4(_8,_o3(_3,"netChange")),_244,_o6(_8,_o3(_3,"docFields"),_o5(_7,[_10,_16,_440,_441])),_81]))]))])),_119,_96,_208,_203,_219,_717,_720,_443,_249,_723,_728]) as unknown as DocumentNode<getTagUpdatesQuery, getTagUpdatesQueryVariables>;
export const updateTagFlagTagFlagEditAndNewFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagFlagTagFlagEditAndNewForm"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateTagFlagDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateTagFlag"),_1051,_1668)])),_794]) as unknown as DocumentNode<updateTagFlagTagFlagEditAndNewFormMutation, updateTagFlagTagFlagEditAndNewFormMutationVariables>;
export const createTagFlagTagFlagEditAndNewFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createTagFlagTagFlagEditAndNewForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateTagFlagDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createTagFlag"),_1061,_1668)])),_794]) as unknown as DocumentNode<createTagFlagTagFlagEditAndNewFormMutation, createTagFlagTagFlagEditAndNewFormMutationVariables>;
export const multiTagTagFlagItemQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagTagFlagItemQuery"),_1175,_1648),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<multiTagTagFlagItemQueryQuery, multiTagTagFlagItemQueryQueryVariables>;
export const TagFlagItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagFlagItem"),_1097,_o5(_7,[_o7(_8,_1669,_1102,_o5(_7,[_o6(_8,_1031,_824)]))])),_794]) as unknown as DocumentNode<TagFlagItemQuery, TagFlagItemQueryVariables>;
export const updateTagTagFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagTagForm"),_1150,_1154),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<updateTagTagFormMutation, updateTagTagFormMutationVariables>;
export const createTagTagFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createTagTagForm"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateTagDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createTag"),_1061,_1153)])),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<createTagTagFormMutation, createTagTagFormMutationVariables>;
export const multiChapterTagIntroSequenceQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiChapterTagIntroSequenceQuery"),_1286,_1287),_203,_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_229]) as unknown as DocumentNode<multiChapterTagIntroSequenceQueryQuery, multiChapterTagIntroSequenceQueryQueryVariables>;
export const TagMergePageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagMergePage"),_1097,_o5(_7,[_o7(_8,_137,_1102,_o5(_7,[_1148]))])),_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<TagMergePageQuery, TagMergePageQueryVariables>;
export const mergeTagsDocument = _o1(_1,[_o11(_1022,_1043,_1670,[_o12(_1024,_1672,_1038),_o12(_1024,_1674,_1038),_o12(_1024,_1676,_1271),_o12(_1024,_1678,_1271)],_o5(_7,[_o10(_8,_1670,[_o8(_526,_1671,_1672),_o8(_526,_1673,_1674),_o8(_526,_1675,_1676),_o8(_526,_1677,_1678)])]))]) as unknown as DocumentNode<mergeTagsMutation, mergeTagsMutationVariables>;
export const promoteLensToMainDocument = _o1(_1,[_o11(_1022,_1043,_1679,[_o12(_1024,_1681,_1038)],_o5(_7,[_o10(_8,_1679,[_o8(_526,_1680,_1681)])]))]) as unknown as DocumentNode<promoteLensToMainMutation, promoteLensToMainMutationVariables>;
export const multiPostTagPreviewQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostTagPreviewQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostTagPreviewQueryQuery, multiPostTagPreviewQueryQueryVariables>;
export const TagSearchHitDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagSearchHit"),_1097,_1650),_119,_130]) as unknown as DocumentNode<TagSearchHitQuery, TagSearchHitQueryVariables>;
export const multiVoteTagVoteActivityQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiVoteTagVoteActivityQuery"),_1114,_o5(_7,[_o7(_8,_1115,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_996)])),_835]))])),_524,_993,_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_995,_998]) as unknown as DocumentNode<multiVoteTagVoteActivityQueryQuery, multiVoteTagVoteActivityQueryQueryVariables>;
export const multiTagFlagTaggingDashboardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagFlagTaggingDashboardQuery"),_1353,_1354),_794]) as unknown as DocumentNode<multiTagFlagTaggingDashboardQueryQuery, multiTagFlagTaggingDashboardQueryQueryVariables>;
export const multiTagTaggingDashboardQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagTaggingDashboardQuery"),_1175,_1648),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<multiTagTaggingDashboardQueryQuery, multiTagTaggingDashboardQueryQueryVariables>;
export const TaggingDashboardDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TaggingDashboard"),_1097,_o5(_7,[_o7(_8,_1669,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_795)]))]))])),_794,_203,_249,_797]) as unknown as DocumentNode<TaggingDashboardQuery, TaggingDashboardQueryVariables>;
export const multiTagRelTagsDetailsItemQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagRelTagsDetailsItemQuery"),_1622,_1624),_799,_119,_130,_26,_78,_96,_108,_158,_169,_175,_995]) as unknown as DocumentNode<multiTagRelTagsDetailsItemQueryQuery, multiTagRelTagsDetailsItemQueryQueryVariables>;
export const TagsDetailsItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagsDetailsItem"),_1097,_1647),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<TagsDetailsItemQuery, TagsDetailsItemQueryVariables>;
export const GetTagsByCoreTagIdDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"GetTagsByCoreTagId"),[_o12(_1024,_1682,_1026),_1071,_o12(_1024,_1684,_1367)],_o5(_7,[_o7(_8,_o3(_3,"TagsByCoreTagId"),[_o8(_526,_875,_1682),_1076,_o8(_526,_1683,_1684)],_o5(_7,[_o6(_8,_166,_1646),_835]))])),_876]) as unknown as DocumentNode<GetTagsByCoreTagIdQuery, GetTagsByCoreTagIdQueryVariables>;
export const updateMultiDocumentLensFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateMultiDocumentLensForm"),_1658,_o5(_7,[_o7(_8,_1659,_1051,_1685)])),_443,_203,_249,_723,_731,_735]) as unknown as DocumentNode<updateMultiDocumentLensFormMutation, updateMultiDocumentLensFormMutationVariables>;
export const createMultiDocumentLensFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createMultiDocumentLensForm"),_1661,_o5(_7,[_o7(_8,_1662,_1061,_1685)])),_443,_203,_249,_723,_731,_735]) as unknown as DocumentNode<createMultiDocumentLensFormMutation, createMultiDocumentLensFormMutationVariables>;
export const multiUserSidebarMembersBoxQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserSidebarMembersBoxQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserSidebarMembersBoxQueryQuery, multiUserSidebarMembersBoxQueryQueryVariables>;
export const updateTagSidebarSubtagsBoxDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateTagSidebarSubtagsBox"),_1150,_o5(_7,[_o7(_8,_1151,_1051,_o5(_7,[_o6(_8,_245,_123)]))])),_119]) as unknown as DocumentNode<updateTagSidebarSubtagsBoxMutation, updateTagSidebarSubtagsBoxMutationVariables>;
export const SidebarSubtagsBoxDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SidebarSubtagsBox"),_1097,_o5(_7,[_o7(_8,_137,_1102,_o5(_7,[_o6(_8,_1031,_o5(_7,[_o4(_28,_817)]))]))])),_119,_130,_818]) as unknown as DocumentNode<SidebarSubtagsBoxQuery, SidebarSubtagsBoxQueryVariables>;
export const multiUserSubforumMembersDialogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserSubforumMembersDialogQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserSubforumMembersDialogQueryQuery, multiUserSubforumMembersDialogQueryQueryVariables>;
export const updateUserTagRelSubforumSubforumTabDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserTagRelSubforumSubforumTab"),[_1045,_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUserTagRelDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"updateUserTagRel"),_1051,_1687)])),_902]) as unknown as DocumentNode<updateUserTagRelSubforumSubforumTabMutation, updateUserTagRelSubforumSubforumTabMutationVariables>;
export const UserUpdateSubforumMembershipDocument = _o1(_1,[_o11(_1022,_1043,_1688,[_1198,_o12(_1024,_1690,_1271)],_o5(_7,[_o7(_8,_1688,[_529,_o8(_526,_1689,_1690)],_1052)])),_96,_203,_968]) as unknown as DocumentNode<UserUpdateSubforumMembershipMutation, UserUpdateSubforumMembershipMutationVariables>;
export const SubforumWikiTabDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubforumWikiTab"),_1097,_1647),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<SubforumWikiTabQuery, SubforumWikiTabQueryVariables>;
export const multiUserTagRelTagSubforumPage2QueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserTagRelTagSubforumPage2Query"),[_o12(_1024,_1044,_o4(_5,_o3(_3,"UserTagRelSelector"))),_1071,_1075],_o5(_7,[_o7(_8,_o3(_3,"userTagRels"),_1077,_o5(_7,[_o6(_8,_1040,_1686),_835]))])),_902]) as unknown as DocumentNode<multiUserTagRelTagSubforumPage2QueryQuery, multiUserTagRelTagSubforumPage2QueryQueryVariables>;
export const multiTagTagSubforumPage2QueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiTagTagSubforumPage2Query"),_1175,_1648),_119,_96,_208,_203,_219,_717,_720,_794,_826]) as unknown as DocumentNode<multiTagTagSubforumPage2QueryQuery, multiTagTagSubforumPage2QueryQueryVariables>;
export const createUserTagRelTagSubforumPage2Document = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createUserTagRelTagSubforumPage2"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateUserTagRelDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createUserTagRel"),_1061,_1687)])),_902]) as unknown as DocumentNode<createUserTagRelTagSubforumPage2Mutation, createUserTagRelTagSubforumPage2MutationVariables>;
export const tagBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagFragmentBySlug"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_1176]))])),_119,_96,_208,_203,_219,_717,_720]) as unknown as DocumentNode<tagBySlugQuery, tagBySlugQueryVariables>;
export const tagBasicInfoBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagBasicInfoBySlug"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_1399]))])),_119]) as unknown as DocumentNode<tagBasicInfoBySlugQuery, tagBasicInfoBySlugQueryVariables>;
export const allTagsPageBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"allTagsPageFragmentBySlug"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_850)]))]))])),_119,_96,_208,_203,_219,_717,_720,_794,_826,_851]) as unknown as DocumentNode<allTagsPageBySlugQuery, allTagsPageBySlugQueryVariables>;
export const tagPageBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagPageFragmentBySlug"),_1692,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_1346)]))])),_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_840]) as unknown as DocumentNode<tagPageBySlugQuery, tagPageBySlugQueryVariables>;
export const tagPageWithRevisionBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagPageWithRevisionFragmentBySlug"),_1693,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_860]))]))])),_119,_96,_208,_203,_219,_717,_853,_794,_855,_26,_78,_108,_130,_158,_169,_175,_180,_184,_858]) as unknown as DocumentNode<tagPageWithRevisionBySlugQuery, tagPageWithRevisionBySlugQueryVariables>;
export const tagEditBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagEditFragmentBySlug"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_1158)]))])),_119,_96,_208,_203,_219,_717,_249,_865]) as unknown as DocumentNode<tagEditBySlugQuery, tagEditBySlugQueryVariables>;
export const tagHistoryBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagHistoryFragmentBySlug"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_738)]))])),_119,_96,_208,_203,_219,_717,_720,_443,_249,_723,_728]) as unknown as DocumentNode<tagHistoryBySlugQuery, tagHistoryBySlugQueryVariables>;
export const tagPageWithArbitalContentBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagPageWithArbitalContentFragmentBySlug"),_1692,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_846)]))]))])),_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_840,_443,_249,_723,_731,_735,_842,_845,_849]) as unknown as DocumentNode<tagPageWithArbitalContentBySlugQuery, tagPageWithArbitalContentBySlugQueryVariables>;
export const tagPageRevisionWithArbitalContentBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagPageRevisionWithArbitalContentFragmentBySlug"),_1693,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_859)]))]))])),_119,_96,_208,_203,_219,_717,_853,_794,_855,_26,_78,_108,_130,_158,_169,_175,_180,_184,_858,_443,_249,_723,_731,_735,_842,_845,_861]) as unknown as DocumentNode<tagPageRevisionWithArbitalContentBySlugQuery, tagPageRevisionWithArbitalContentBySlugQueryVariables>;
export const tagPageWithArbitalContentAndLensRevisionBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"tagPageWithArbitalContentAndLensRevisionFragmentBySlug"),[_1174,_1071,_1155,_1345,_o12(_1024,_883,_1026)],_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_881)]))]))])),_119,_96,_208,_203,_219,_717,_720,_794,_826,_26,_78,_108,_130,_158,_169,_175,_180,_184,_840,_731,_443,_249,_878,_880,_884]) as unknown as DocumentNode<tagPageWithArbitalContentAndLensRevisionBySlugQuery, tagPageWithArbitalContentAndLensRevisionBySlugQueryVariables>;
export const getTagOrLensPreviewDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getTagOrLensPreview"),_1694,_o5(_7,[_o7(_8,_1695,_1696,_o5(_7,[_804,_1697,_734]))])),_119,_443,_203,_249,_130,_723]) as unknown as DocumentNode<getTagOrLensPreviewQuery, getTagOrLensPreviewQueryVariables>;
export const getTagOrLensSectionPreviewDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getTagOrLensSectionPreview"),_1694,_o5(_7,[_o7(_8,_1695,_1696,_o5(_7,[_o6(_8,_137,_1698),_1697,_734]))])),_119,_443,_203,_249,_814,_723]) as unknown as DocumentNode<getTagOrLensSectionPreviewQuery, getTagOrLensSectionPreviewQueryVariables>;
export const getTagPreviewDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getTagPreview"),_1691,_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_1527]))])),_119,_130]) as unknown as DocumentNode<getTagPreviewQuery, getTagPreviewQueryVariables>;
export const getTagSectionPreviewDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getTagSectionPreview"),[_1174,_1071,_1178],_o5(_7,[_o7(_8,_166,_1417,_o5(_7,[_o6(_8,_1040,_1698)]))])),_119,_814]) as unknown as DocumentNode<getTagSectionPreviewQuery, getTagSectionPreviewQueryVariables>;
export const LocalgroupPageTitleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LocalgroupPageTitle"),_1097,_o5(_7,[_o7(_8,_1027,_1454,_1699)])),_96,_413]) as unknown as DocumentNode<LocalgroupPageTitleQuery, LocalgroupPageTitleQueryVariables>;
export const PostsPageHeaderTitleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostsPageHeaderTitle"),_1097,_1700),_26,_78]) as unknown as DocumentNode<PostsPageHeaderTitleQuery, PostsPageHeaderTitleQueryVariables>;
export const SequencesPageTitleDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SequencesPageTitle"),_1097,_o5(_7,[_o7(_8,_550,_1454,_1701)])),_208]) as unknown as DocumentNode<SequencesPageTitleQuery, SequencesPageTitleQueryVariables>;
export const multiUserUserPageTitleQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserUserPageTitleQuery"),_1092,_1094),_96]) as unknown as DocumentNode<multiUserUserPageTitleQueryQuery, multiUserUserPageTitleQueryQueryVariables>;
export const SingleCommentForFeedbackDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SingleCommentForFeedback"),_1135,_o5(_7,[_o7(_8,_198,_1702,_o5(_7,[_o6(_8,_1031,_199)]))])),_119,_130,_96,_158,_26,_78,_108,_169,_175,_180,_184,_193]) as unknown as DocumentNode<SingleCommentForFeedbackQuery, SingleCommentForFeedbackQueryVariables>;
export const multiCommentUltraFeedPostDialogQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentUltraFeedPostDialogQuery"),_1086,_1171),_119,_130,_96,_158]) as unknown as DocumentNode<multiCommentUltraFeedPostDialogQueryQuery, multiCommentUltraFeedPostDialogQueryQueryVariables>;
export const UltraFeedPostDialogDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UltraFeedPostDialog"),_1097,_o5(_7,[_o7(_8,_187,_1102,_1703)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_506]) as unknown as DocumentNode<UltraFeedPostDialogQuery, UltraFeedPostDialogQueryVariables>;
export const UltraFeedTargetCommentDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UltraFeedTargetComment"),_1097,_1133),_119,_130,_96,_158,_26,_78,_301]) as unknown as DocumentNode<UltraFeedTargetCommentQuery, UltraFeedTargetCommentQueryVariables>;
export const LocalPostQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"LocalPostQuery"),_1135,_o5(_7,[_o7(_8,_187,_1137,_1703)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_506]) as unknown as DocumentNode<LocalPostQueryQuery, LocalPostQueryQueryVariables>;
export const UserRecentPostsForCompactCardDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserRecentPostsForCompactCard"),_1273,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_1284]))])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<UserRecentPostsForCompactCardQuery, UserRecentPostsForCompactCardQueryVariables>;
export const UltraFeedThreadItemDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UltraFeedThreadItem"),_1097,_o5(_7,[_o7(_8,_187,_1137,_1247)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<UltraFeedThreadItemQuery, UltraFeedThreadItemQueryVariables>;
export const createUltraFeedEventDocument = _o1(_1,[_o11(_1022,_1043,_1704,[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateUltraFeedEventDataInput"))))],_o5(_7,[_o7(_8,_1704,_1061,_1621)]))]) as unknown as DocumentNode<createUltraFeedEventMutation, createUltraFeedEventMutationVariables>;
export const updateUltraFeedEventDocument = _o1(_1,[_o11(_1022,_1043,_1705,[_o12(_1024,_1044,_1038),_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"UpdateUltraFeedEventDataInput"))))],_o5(_7,[_o7(_8,_1705,_1051,_1621)]))]) as unknown as DocumentNode<updateUltraFeedEventMutation, updateUltraFeedEventMutationVariables>;
export const connectCrossposterDocument = _o1(_1,[_o11(_1022,_1043,_1706,_1710,_o5(_7,[_o10(_8,_1706,_1712)]))]) as unknown as DocumentNode<connectCrossposterMutation, connectCrossposterMutationVariables>;
export const updateUserEditProfileFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserEditProfileForm"),_1047,_1482),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<updateUserEditProfileFormMutation, updateUserEditProfileFormMutationVariables>;
export const EditProfileFormDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EditProfileForm"),_1097,_o5(_7,[_o7(_8,_98,_1102,_o5(_7,[_o6(_8,_1031,_1713)]))])),_203,_249,_96,_413,_979]) as unknown as DocumentNode<EditProfileFormQuery, EditProfileFormQueryVariables>;
export const EditProfileFormGetUserBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EditProfileFormGetUserBySlug"),_1467,_o5(_7,[_o7(_8,_1468,_1470,_1713)])),_203,_249,_96,_413,_979]) as unknown as DocumentNode<EditProfileFormGetUserBySlugQuery, EditProfileFormGetUserBySlugQueryVariables>;
export const useEmailTokenDocument = _o1(_1,[_o11(_1022,_1043,_1714,_1710,_o5(_7,[_o10(_8,_1714,_1712)]))]) as unknown as DocumentNode<useEmailTokenMutation, useEmailTokenMutationVariables>;
export const sendEventTriggeredDMDocument = _o1(_1,[_o11(_1022,_1043,_1715,[_o12(_1024,_1716,_1038)],_o5(_7,[_o10(_8,_1715,[_o8(_526,_58,_1716)])]))]) as unknown as DocumentNode<sendEventTriggeredDMMutation, sendEventTriggeredDMMutationVariables>;
export const multiPostFriendlyUsersProfileQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostFriendlyUsersProfileQuery"),_1273,_1324),_26]) as unknown as DocumentNode<multiPostFriendlyUsersProfileQueryQuery, multiPostFriendlyUsersProfileQueryQueryVariables>;
export const multiLocalgroupFriendlyUsersProfileQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiLocalgroupFriendlyUsersProfileQuery"),_1231,_1234),_96,_413,_203,_416]) as unknown as DocumentNode<multiLocalgroupFriendlyUsersProfileQueryQuery, multiLocalgroupFriendlyUsersProfileQueryQueryVariables>;
export const multiUserFriendlyUsersProfileQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserFriendlyUsersProfileQuery"),_1092,_o5(_7,[_o7(_8,_264,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_677,_o6(_8,_o3(_3,"profileTags"),_142),_978])),_835]))])),_96,_203,_119,_675,_130,_413]) as unknown as DocumentNode<multiUserFriendlyUsersProfileQueryQuery, multiUserFriendlyUsersProfileQueryQueryVariables>;
export const multiPostLWUserTooltipContentQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostLWUserTooltipContentQuery"),_1273,_1285),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<multiPostLWUserTooltipContentQueryQuery, multiPostLWUserTooltipContentQueryQueryVariables>;
export const TopKarmaUsersDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TopKarmaUsers"),_1092,_1094),_96]) as unknown as DocumentNode<TopKarmaUsersQuery, TopKarmaUsersQueryVariables>;
export const AirtableLeaderboardsDocument = _o1(_1,[_o15(_1022,_1023,_1717,_o5(_7,[_o6(_8,_1717,_o5(_7,[_74,_o4(_8,_o3(_3,"leaderboardAmount"))]))]))]) as unknown as DocumentNode<AirtableLeaderboardsQuery, AirtableLeaderboardsQueryVariables>;
export const getNetKarmaChangesForAuthorsOverPeriodDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getNetKarmaChangesForAuthorsOverPeriod"),[_o12(_1024,_1719,_1081),_1082],_o5(_7,[_o7(_8,_o3(_3,"NetKarmaChangesForAuthorsOverPeriod"),[_o8(_526,_1718,_1719),_1076],_o5(_7,[_23,_o4(_8,_o3(_3,"netKarma"))]))]))]) as unknown as DocumentNode<getNetKarmaChangesForAuthorsOverPeriodQuery, getNetKarmaChangesForAuthorsOverPeriodQueryVariables>;
export const loginDocument = _o1(_1,[_o11(_1022,_1043,_1720,[_1721,_1724],_o5(_7,[_o7(_8,_1720,[_1311,_1725],_1726)]))]) as unknown as DocumentNode<loginMutation, loginMutationVariables>;
export const signupDocument = _o1(_1,[_o11(_1022,_1043,_1727,[_1309,_1721,_1724,_o12(_1024,_1729,_1074),_o12(_1024,_1731,_1026),_o12(_1024,_1732,_1026)],_o5(_7,[_o7(_8,_1727,[_1312,_1311,_1725,_o8(_526,_1728,_1729),_o8(_526,_1730,_1731),_o8(_526,_963,_1732)],_1726)]))]) as unknown as DocumentNode<signupMutation, signupMutationVariables>;
export const resetPasswordDocument = _o1(_1,[_o11(_1022,_1043,_1733,[_1309],_o5(_7,[_o10(_8,_1733,[_1312])]))]) as unknown as DocumentNode<resetPasswordMutation, resetPasswordMutationVariables>;
export const usePasswordResetEmailTokenDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"usePasswordResetEmailToken"),[_1709,_1330],_o5(_7,[_o10(_8,_1714,[_1711,_1331])]))]) as unknown as DocumentNode<usePasswordResetEmailTokenMutation, usePasswordResetEmailTokenMutationVariables>;
export const multiSubscriptionSubscriptionsListQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiSubscriptionSubscriptionsListQuery"),_1407,_1410),_771]) as unknown as DocumentNode<multiSubscriptionSubscriptionsListQueryQuery, multiSubscriptionSubscriptionsListQueryQueryVariables>;
export const UserContentFeedPostsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserContentFeedPosts"),[_1291,_1082,_o12(_1024,_1735,_1038)],_o5(_7,[_o7(_8,_227,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"userPosts"),_o13(_1029,[_1392,_o8(_1030,_1734,_1735)]))])),_1076,_1736],_1274)])),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184]) as unknown as DocumentNode<UserContentFeedPostsQuery, UserContentFeedPostsQueryVariables>;
export const UserContentFeedCommentsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserContentFeedComments"),[_1291,_1082,_o12(_1024,_1380,_1038)],_o5(_7,[_o7(_8,_917,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"profileComments"),_o13(_1029,[_1392,_o8(_1030,_1379,_1380)]))])),_1076,_1736],_o5(_7,[_o6(_8,_1040,_o5(_7,[_164,_190,_o6(_8,_610,_613)])),_835]))])),_119,_130,_96,_26,_78,_108,_158,_169,_175,_180,_184,_611]) as unknown as DocumentNode<UserContentFeedCommentsQuery, UserContentFeedCommentsQueryVariables>;
export const UserContentFeedThreadDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserContentFeedThread"),[_o12(_1024,_1737,_1038),_1071],_o5(_7,[_o7(_8,_917,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"repliesToCommentThreadIncludingRoot"),_o13(_1029,[_o8(_1030,_145,_1737)]))])),_1076],_o5(_7,[_o6(_8,_1040,_199)]))])),_119,_130,_96,_158,_26,_78,_108,_169,_175,_180,_184,_193]) as unknown as DocumentNode<UserContentFeedThreadQuery, UserContentFeedThreadQueryVariables>;
export const UsersNameWrapperDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UsersNameWrapper"),_1097,_1342),_96]) as unknown as DocumentNode<UsersNameWrapperQuery, UsersNameWrapperQueryVariables>;
export const multiUserUsersProfileQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiUserUsersProfileQuery"),_1092,_1170),_96,_203,_675]) as unknown as DocumentNode<multiUserUsersProfileQueryQuery, multiUserUsersProfileQueryQueryVariables>;
export const updateUserDeactivateAccountSectionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserDeactivateAccountSection"),_1047,_1482),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<updateUserDeactivateAccountSectionMutation, updateUserDeactivateAccountSectionMutationVariables>;
export const updateUserDeleteAccountSectionDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserDeleteAccountSection"),_1047,_1482),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<updateUserDeleteAccountSectionMutation, updateUserDeleteAccountSectionMutationVariables>;
export const UsersAccountManagementGetUserBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UsersAccountManagementGetUserBySlug"),_1467,_1738),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<UsersAccountManagementGetUserBySlugQuery, UsersAccountManagementGetUserBySlugQueryVariables>;
export const updateUserUsersEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserUsersEditForm"),_1047,_1482),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<updateUserUsersEditFormMutation, updateUserUsersEditFormMutationVariables>;
export const UsersEditFormGetUserBySlugDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UsersEditFormGetUserBySlug"),_1467,_1738),_96,_203,_675,_968,_249,_975]) as unknown as DocumentNode<UsersEditFormGetUserBySlugQuery, UsersEditFormGetUserBySlugQueryVariables>;
export const KarmaChangeNotifierDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"KarmaChangeNotifier"),_1097,_1478),_926]) as unknown as DocumentNode<KarmaChangeNotifierQuery, KarmaChangeNotifierQueryVariables>;
export const SubscribedUserDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedUser"),_1135,_o5(_7,[_o7(_8,_98,_1702,_1341)])),_96]) as unknown as DocumentNode<SubscribedUserQuery, SubscribedUserQueryVariables>;
export const SubscribedPostDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedPost"),_1135,_o5(_7,[_o7(_8,_187,_1702,_1450)])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<SubscribedPostQuery, SubscribedPostQueryVariables>;
export const SubscribedCommentDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedComment"),_1135,_o5(_7,[_o7(_8,_198,_1702,_1162)])),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<SubscribedCommentQuery, SubscribedCommentQueryVariables>;
export const SubscribedLocalgroupDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedLocalgroup"),_1135,_o5(_7,[_o7(_8,_1027,_1702,_1699)])),_96,_413]) as unknown as DocumentNode<SubscribedLocalgroupQuery, SubscribedLocalgroupQueryVariables>;
export const SubscribedTagDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedTag"),_1135,_o5(_7,[_o7(_8,_137,_1702,_1649)])),_119,_130]) as unknown as DocumentNode<SubscribedTagQuery, SubscribedTagQueryVariables>;
export const SubscribedSequenceDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"SubscribedSequence"),_1135,_o5(_7,[_o7(_8,_550,_1702,_1701)])),_208]) as unknown as DocumentNode<SubscribedSequenceQuery, SubscribedSequenceQueryVariables>;
export const updateUserReactionsPaletteDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateUserReactionsPalette"),_1047,_1053),_96,_203,_968]) as unknown as DocumentNode<updateUserReactionsPaletteMutation, updateUserReactionsPaletteMutationVariables>;
export const performVoteCommentDocument = _o1(_1,[_o11(_1022,_1043,_1739,_1743,_o5(_7,[_o7(_8,_1739,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_305)])),_1745]))])),_308]) as unknown as DocumentNode<performVoteCommentMutation, performVoteCommentMutationVariables>;
export const performVotePostDocument = _o1(_1,[_o11(_1022,_1043,_1746,_1743,_o5(_7,[_o7(_8,_1746,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_629)])),_1745]))])),_630]) as unknown as DocumentNode<performVotePostMutation, performVotePostMutationVariables>;
export const performVoteTagRelDocument = _o1(_1,[_o11(_1022,_1043,_1747,_1743,_o5(_7,[_o7(_8,_1747,_1744,_o5(_7,[_o6(_8,_1347,_530),_1745]))])),_524]) as unknown as DocumentNode<performVoteTagRelMutation, performVoteTagRelMutationVariables>;
export const performVoteRevisionDocument = _o1(_1,[_o11(_1022,_1043,_1748,_1743,_o5(_7,[_o7(_8,_1748,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_752)])),_1745]))])),_753]) as unknown as DocumentNode<performVoteRevisionMutation, performVoteRevisionMutationVariables>;
export const performVoteElectionCandidateDocument = _o1(_1,[_o11(_1022,_1043,_1749,_1743,_o5(_7,[_o7(_8,_1749,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_356)])),_1745]))])),_358]) as unknown as DocumentNode<performVoteElectionCandidateMutation, performVoteElectionCandidateMutationVariables>;
export const performVoteTagDocument = _o1(_1,[_o11(_1022,_1043,_1750,_1743,_o5(_7,[_o7(_8,_1750,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_885)])),_1745]))])),_119,_886]) as unknown as DocumentNode<performVoteTagMutation, performVoteTagMutationVariables>;
export const performVoteMultiDocumentDocument = _o1(_1,[_o11(_1022,_1043,_1751,_1743,_o5(_7,[_o7(_8,_1751,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_444)])),_1745]))])),_443,_447]) as unknown as DocumentNode<performVoteMultiDocumentMutation, performVoteMultiDocumentMutationVariables>;
export const performVoteMessageDocument = _o1(_1,[_o11(_1022,_1043,_1752,_1743,_o5(_7,[_o7(_8,_1752,_1744,_o5(_7,[_o6(_8,_1347,_o5(_7,[_o4(_28,_431)])),_1745]))])),_432]) as unknown as DocumentNode<performVoteMessageMutation, performVoteMessageMutationVariables>;
export const emailstestsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"emailstests"),_1505,_1753),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548]) as unknown as DocumentNode<emailstestsQuery, emailstestsQueryVariables>;
export const updateCommentCommentsNewFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updateCommentCommentsNewForm"),_1128,_1255),_119,_130,_96,_158,_26,_323]) as unknown as DocumentNode<updateCommentCommentsNewFormMutation, updateCommentCommentsNewFormMutationVariables>;
export const updatePostPostsEditFormDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"updatePostPostsEditForm"),_1062,_1607),_26,_78,_96,_108,_119,_130,_158,_169,_175,_684]) as unknown as DocumentNode<updatePostPostsEditFormMutation, updatePostPostsEditFormMutationVariables>;
export const getCurrentUserDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"getCurrentUser"),_o5(_7,[_o6(_8,_o3(_3,"currentUser"),_1052)])),_96,_203,_968]) as unknown as DocumentNode<getCurrentUserQuery, getCurrentUserQueryVariables>;
export const createLWEventwithNewEventsDocument = _o1(_1,[_o11(_1022,_1043,_o3(_3,"createLWEventwithNewEvents"),[_o12(_1024,_1046,_o14(_1036,_o4(_5,_o3(_3,"CreateLWEventDataInput"))))],_o5(_7,[_o7(_8,_o3(_3,"createLWEvent"),_1061,_o5(_7,[_o6(_8,_245,_o5(_7,[_o4(_28,_421)]))]))])),_426]) as unknown as DocumentNode<createLWEventwithNewEventsMutation, createLWEventwithNewEventsMutationVariables>;
export const Lightcone2024FundraiserStripeAmountsDocument = _o1(_1,[_o15(_1022,_1023,_1754,_o5(_7,[_o4(_8,_1754)]))]) as unknown as DocumentNode<Lightcone2024FundraiserStripeAmountsQuery, Lightcone2024FundraiserStripeAmountsQueryVariables>;
export const multiPostsForAutocompleteQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostsForAutocompleteQuery"),_1755,_o5(_7,[_o7(_8,_227,_1388,_o5(_7,[_o6(_8,_1040,_315)]))])),_96,_313]) as unknown as DocumentNode<multiPostsForAutocompleteQueryQuery, multiPostsForAutocompleteQueryQueryVariables>;
export const multiCommentsForAutocompleteQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentsForAutocompleteQuery"),_1756,_o5(_7,[_o7(_8,_917,_1388,_o5(_7,[_o6(_8,_1040,_319)]))])),_96,_313,_316]) as unknown as DocumentNode<multiCommentsForAutocompleteQueryQuery, multiCommentsForAutocompleteQueryQueryVariables>;
export const multiCommentsForAutocompleteWithParentsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiCommentsForAutocompleteWithParentsQuery"),_1756,_o5(_7,[_o7(_8,_917,_1388,_o5(_7,[_o6(_8,_1040,_o5(_7,[_o4(_28,_317)]))]))])),_96,_313,_316,_320]) as unknown as DocumentNode<multiCommentsForAutocompleteWithParentsQueryQuery, multiCommentsForAutocompleteWithParentsQueryQueryVariables>;
export const EmailComment2Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailComment2"),_1097,_1163),_119,_130,_96,_158,_26,_1002]) as unknown as DocumentNode<EmailComment2Query, EmailComment2QueryVariables>;
export const EmailComment1Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailComment1"),_1097,_1650),_119,_130]) as unknown as DocumentNode<EmailComment1Query, EmailComment1QueryVariables>;
export const EmailCommentDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailComment"),_1097,_1504),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<EmailCommentQuery, EmailCommentQueryVariables>;
export const EmailFooterRecommendationsQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailFooterRecommendationsQuery"),_1537,_1538),_26,_78,_96,_108,_119,_130,_158,_169,_175,_180,_184,_208,_203,_219,_487]) as unknown as DocumentNode<EmailFooterRecommendationsQueryQuery, EmailFooterRecommendationsQueryQueryVariables>;
export const EmailUsernameByIDDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EmailUsernameByID"),_1097,_1342),_96]) as unknown as DocumentNode<EmailUsernameByIDQuery, EmailUsernameByIDQueryVariables>;
export const EventUpdatedEmailDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"EventUpdatedEmail"),_1097,_1700),_26,_78]) as unknown as DocumentNode<EventUpdatedEmailQuery, EventUpdatedEmailQueryVariables>;
export const NewDialogueMessagesEmail1Document = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NewDialogueMessagesEmail1"),_1097,_1342),_96]) as unknown as DocumentNode<NewDialogueMessagesEmail1Query, NewDialogueMessagesEmail1QueryVariables>;
export const NewDialogueMessagesEmailDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"NewDialogueMessagesEmail"),_1505,_1753),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548]) as unknown as DocumentNode<NewDialogueMessagesEmailQuery, NewDialogueMessagesEmailQueryVariables>;
export const PostNominatedEmailDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostNominatedEmail"),_1505,_1753),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548]) as unknown as DocumentNode<PostNominatedEmailQuery, PostNominatedEmailQueryVariables>;
export const multiPostPostsEmailQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostPostsEmailQuery"),_1441,_o5(_7,[_o7(_8,_227,_1077,_o5(_7,[_o6(_8,_1040,_o5(_7,[_568,_183])),_835]))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548]) as unknown as DocumentNode<multiPostPostsEmailQueryQuery, multiPostPostsEmailQueryQueryVariables>;
export const getCrosspostPostsWithNavigationDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getCrosspostPostsWithNavigation"),[_1757,_1042],_o5(_7,[_o7(_8,_187,_1388,_1500)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575,_208,_219,_558,_466,_469,_560,_564,_566,_580]) as unknown as DocumentNode<getCrosspostPostsWithNavigationQuery, getCrosspostPostsWithNavigationQueryVariables>;
export const getCrosspostPostsWithNavigationAndRevisionDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getCrosspostPostsWithNavigationAndRevision"),[_1757,_1155,_1042],_o5(_7,[_o7(_8,_187,_1388,_1514)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_540,_548,_208,_219,_558,_466,_469,_560,_564,_566,_572]) as unknown as DocumentNode<getCrosspostPostsWithNavigationAndRevisionQuery, getCrosspostPostsWithNavigationAndRevisionQueryVariables>;
export const getCrosspostPostsListDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getCrosspostPostsList"),_1758,_o5(_7,[_o7(_8,_187,_1388,_1450)])),_26,_78,_96,_108,_119,_130,_158,_169,_175]) as unknown as DocumentNode<getCrosspostPostsListQuery, getCrosspostPostsListQueryVariables>;
export const getCrosspostSunshinePostsListDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getCrosspostSunshinePostsList"),_1758,_o5(_7,[_o7(_8,_187,_1388,_o5(_7,[_o6(_8,_1031,_1414)]))])),_26,_78,_96,_108,_119,_130,_158,_169,_618,_203,_620,_628]) as unknown as DocumentNode<getCrosspostSunshinePostsListQuery, getCrosspostSunshinePostsListQueryVariables>;
export const getCrosspostPostsPageDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"getCrosspostPostsPage"),_1758,_1759),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<getCrosspostPostsPageQuery, getCrosspostPostsPageQueryVariables>;
export const PostMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"PostMetadata"),_1419,_o5(_7,[_o7(_8,_187,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_9,_904)]))],_o5(_7,[_o6(_8,_1031,_o5(_7,[_10,_17,_16,_56,_61,_496,_o6(_8,_167,_o5(_7,[_10,_168,_498])),_o6(_8,_161,_1032),_1033,_286,_o6(_8,_105,_285),_24,_19,_57,_497,_25,_40,_81]))]))]))]) as unknown as DocumentNode<PostMetadataQuery, PostMetadataQueryVariables>;
export const CommentPermalinkMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentPermalinkMetadata"),[_1257],_o5(_7,[_o7(_8,_198,[_o8(_526,_1028,_1168)],_o5(_7,[_o6(_8,_1031,_o5(_7,[_10,_o6(_8,_98,_o5(_7,[_85])),_o6(_8,_146,_o5(_7,[_148])),_90]))]))]))]) as unknown as DocumentNode<CommentPermalinkMetadataQuery, CommentPermalinkMetadataQueryVariables>;
export const TagMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"TagMetadata"),[_o12(_1024,_1760,_1026)],_o5(_7,[_o7(_8,_166,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"tagBySlug"),_o13(_1029,[_o8(_1030,_15,_1760)]))]))],_o5(_7,[_o6(_8,_1040,_o5(_7,[_10,_74,_115,_o6(_8,_127,_537)]))]))]))]) as unknown as DocumentNode<TagMetadataQuery, TagMetadataQueryVariables>;
export const UserMetadataDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"UserMetadata"),[_o12(_1024,_1465,_1026)],_o5(_7,[_o7(_8,_264,[_o8(_526,_1028,_o13(_1029,[_o8(_1030,_o3(_3,"usersProfile"),_o13(_1029,[_o8(_1030,_15,_1465)]))]))],_o5(_7,[_o6(_8,_1040,_o5(_7,[_10,_85,_83,_16,_86,_94,_38,_87,_115]))]))]))]) as unknown as DocumentNode<UserMetadataQuery, UserMetadataQueryVariables>;
export const singleDraftPostForLLMQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"singleDraftPostForLLMQuery"),[_1757,_1155],_o5(_7,[_o7(_8,_187,_1388,_1157)])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_582,_584,_203,_249,_589,_593]) as unknown as DocumentNode<singleDraftPostForLLMQueryQuery, singleDraftPostForLLMQueryQueryVariables>;
export const singlePublishedPostForLLMQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"singlePublishedPostForLLMQuery"),_1758,_1759),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<singlePublishedPostForLLMQueryQuery, singlePublishedPostForLLMQueryQueryVariables>;
export const multiPostsForLLMQueryDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"multiPostsForLLMQuery"),_1755,_o5(_7,[_o7(_8,_227,_1388,_o5(_7,[_1525]))])),_26,_78,_96,_108,_119,_130,_158,_169,_494,_175,_180,_184,_502,_203,_575]) as unknown as DocumentNode<multiPostsForLLMQueryQuery, multiPostsForLLMQueryQueryVariables>;
export const GetReviewWinnersDocument = _o1(_1,[_o15(_1022,_1023,_o3(_3,"GetReviewWinners"),_1540),_26,_466,_469,_479,_483]) as unknown as DocumentNode<GetReviewWinnersQuery, GetReviewWinnersQueryVariables>;
export const CommentsForEmbeddingsDocument = _o1(_1,[_o11(_1022,_1023,_o3(_3,"CommentsForEmbeddings"),[_1085],_o5(_7,[_o7(_8,_917,[_1049],_o5(_7,[_o6(_8,_1040,_o5(_7,[_10,_32,_o6(_8,_146,_378),_o6(_8,_98,_o5(_7,[_10,_85,_83,_648])),_o6(_8,_187,_206)]))]))]))]) as unknown as DocumentNode<CommentsForEmbeddingsQuery, CommentsForEmbeddingsQueryVariables>;