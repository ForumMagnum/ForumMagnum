//
// GENERATED FILE
// Do not edit this file directly. Instead, start a server and run "npm run generate",
// which will cause this file to be regenerated. This file should nevertheless be
// checked in to version control.
//
// Contains Typescript signatures for database objects, generated by
// server/codegen/generateDbTypes.ts.
//
interface BansCollection extends CollectionBase<DbBan, "Bans"> {
}

interface DbBan extends DbObject {
  __collectionName?: "Bans"
  createdAt: Date
  expirationDate: Date
  userId: string
  ip: string
  reason: string
  comment: string
  properties: any /*{"definitions":[{"blackbox":true}]}*/
}

interface BooksCollection extends CollectionBase<DbBook, "Books"> {
}

interface DbBook extends DbObject {
  __collectionName?: "Books"
  createdAt: Date
  postedAt: Date
  title: string
  subtitle: string
  collectionId: string
  number: number
  postIds: Array<string>
  sequenceIds: Array<string>
  contents: EditableFieldContents
}

interface ChaptersCollection extends CollectionBase<DbChapter, "Chapters"> {
}

interface DbChapter extends DbObject {
  __collectionName?: "Chapters"
  createdAt: Date
  title: string
  subtitle: string
  number: number
  sequenceId: string
  postIds: Array<string>
  contents: EditableFieldContents
}

interface CollectionsCollection extends CollectionBase<DbCollection, "Collections"> {
}

interface DbCollection extends DbObject {
  __collectionName?: "Collections"
  createdAt: Date
  userId: string
  title: string
  slug: string
  gridImageId: string
  firstPageLink: string
  contents: EditableFieldContents
}

interface CommentsCollection extends CollectionBase<DbComment, "Comments"> {
}

interface DbComment extends DbObject {
  __collectionName?: "Comments"
  parentCommentId: string
  topLevelCommentId: string
  createdAt: Date
  postedAt: Date
  author: string
  postId: string
  tagId: string
  userId: string
  userIP: string
  userAgent: string
  referrer: string
  authorIsUnreviewed: boolean
  answer: boolean
  parentAnswerId: string
  directChildrenCount: number
  descendentCount: number
  shortform: boolean
  nominatedForReview: string
  reviewingForReview: string
  lastSubthreadActivity: Date
  postVersion: string
  promoted: boolean
  promotedByUserId: string
  promotedAt: Date
  hideKarma: boolean
  legacy: boolean
  legacyId: string
  legacyPoll: boolean
  legacyParentId: string
  retracted: boolean
  deleted: boolean
  deletedPublic: boolean
  deletedReason: string
  deletedDate: Date
  deletedByUserId: string
  spam: boolean
  repliesBlockedUntil: Date
  needsReview: boolean
  reviewedByUserId: string
  hideAuthor: boolean
  moderatorHat: boolean
  contents: EditableFieldContents
  voteCount: number
  baseScore: number
  score: number
  inactive: boolean
  af: boolean
  afBaseScore: number
  suggestForAlignmentUserIds: Array<string>
  reviewForAlignmentUserId: string
  afDate: Date
  moveToAlignmentUserId: string
}

interface ConversationsCollection extends CollectionBase<DbConversation, "Conversations"> {
}

interface DbConversation extends DbObject {
  __collectionName?: "Conversations"
  createdAt: Date
  title: string
  participantIds: Array<string>
  latestActivity: Date
  af: boolean
  messageCount: number
  archivedByIds: Array<string>
}

interface DatabaseMetadataCollection extends CollectionBase<DbDatabaseMetadata, "DatabaseMetadata"> {
}

interface DbDatabaseMetadata extends DbObject {
  __collectionName?: "DatabaseMetadata"
  name: string
  value: any /*{"definitions":[{"blackbox":true}]}*/
}

interface DebouncerEventsCollection extends CollectionBase<DbDebouncerEvents, "DebouncerEvents"> {
}

interface DbDebouncerEvents extends DbObject {
  __collectionName?: "DebouncerEvents"
  name: string
  af: boolean
  dispatched: boolean
  failed: boolean
  delayTime: Date
  upperBoundTime: Date
  key: string
  pendingEvents: Array<any /*{"definitions":[{"blackbox":true}]}*/>
}

interface EmailTokensCollection extends CollectionBase<DbEmailTokens, "EmailTokens"> {
}

interface DbEmailTokens extends DbObject {
  __collectionName?: "EmailTokens"
  token: string
  tokenType: string
  userId: string
  usedAt: Date
  params: any /*{"definitions":[{"blackbox":true}]}*/
}

interface GardenCodesCollection extends CollectionBase<DbGardenCode, "GardenCodes"> {
}

interface DbGardenCode extends DbObject {
  __collectionName?: "GardenCodes"
  createdAt: Date
  code: string
  title: string
  userId: string
  slug: string
  startTime: Date
  endTime: Date
  fbLink: string
  type: string
  hidden: boolean
  deleted: boolean
  afOnly: boolean
  contents: EditableFieldContents
  pingbacks: any /*{"definitions":[{}]}*/
}

interface LWEventsCollection extends CollectionBase<DbLWEvent, "LWEvents"> {
}

interface DbLWEvent extends DbObject {
  __collectionName?: "LWEvents"
  createdAt: Date
  userId: string
  name: string
  documentId: string
  important: boolean
  properties: any /*{"definitions":[{"blackbox":true}]}*/
  intercom: boolean
}

interface LegacyDataCollection extends CollectionBase<DbLegacyData, "LegacyData"> {
}

interface DbLegacyData extends DbObject {
  __collectionName?: "LegacyData"
  objectId: string
  collectionName: string
  legacyData: any /*{"definitions":[{"blackbox":true}]}*/
}

interface LocalgroupsCollection extends CollectionBase<DbLocalgroup, "Localgroups"> {
}

interface DbLocalgroup extends DbObject {
  __collectionName?: "Localgroups"
  createdAt: Date
  name: string
  organizerIds: Array<string>
  lastActivity: Date
  types: Array<string>
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string
  contactInfo: string
  facebookLink: string
  website: string
  inactive: boolean
  contents: EditableFieldContents
}

interface MessagesCollection extends CollectionBase<DbMessage, "Messages"> {
}

interface DbMessage extends DbObject {
  __collectionName?: "Messages"
  userId: string
  createdAt: Date
  conversationId: string
  noEmail: boolean
  contents: EditableFieldContents
}

interface MigrationsCollection extends CollectionBase<DbMigration, "Migrations"> {
}

interface DbMigration extends DbObject {
  __collectionName?: "Migrations"
  name: string
  started: Date
  finished: Date
  succeeded: boolean
}

interface NotificationsCollection extends CollectionBase<DbNotification, "Notifications"> {
}

interface DbNotification extends DbObject {
  __collectionName?: "Notifications"
  userId: string
  createdAt: Date
  documentId: string
  documentType: string
  link: string
  title: string
  message: string
  type: string
  deleted: boolean
  viewed: boolean
  emailed: boolean
  waitingForBatch: boolean
}

interface PetrovDayLaunchsCollection extends CollectionBase<DbPetrovDayLaunch, "PetrovDayLaunchs"> {
}

interface DbPetrovDayLaunch extends DbObject {
  __collectionName?: "PetrovDayLaunchs"
  createdAt: Date
  launchCode: string
  hashedLaunchCode: string
  userId: string
}

interface PostRelationsCollection extends CollectionBase<DbPostRelation, "PostRelations"> {
}

interface DbPostRelation extends DbObject {
  __collectionName?: "PostRelations"
  createdAt: Date
  type: string
  sourcePostId: string
  targetPostId: string
  order: number
}

interface PostsCollection extends CollectionBase<DbPost, "Posts"> {
}

interface DbPost extends DbObject {
  __collectionName?: "Posts"
  createdAt: Date
  postedAt: Date
  modifiedAt: Date
  url: string
  title: string
  slug: string
  viewCount: number
  lastCommentedAt: Date
  clickCount: number
  deletedDraft: boolean
  status: number
  isFuture: boolean
  sticky: boolean
  stickyPriority: number
  userIP: string
  userAgent: string
  referrer: string
  author: string
  userId: string
  question: boolean
  authorIsUnreviewed: boolean
  submitToFrontpage: boolean
  hiddenRelatedQuestion: boolean
  originalPostRelationSourceId: string
  shortform: boolean
  canonicalSource: string
  nominationCount2018: number
  nominationCount2019: number
  reviewCount2018: number
  reviewCount2019: number
  lastCommentPromotedAt: Date
  tagRelevance: any /*{"definitions":[{}]}*/
  noIndex: boolean
  rsvps: Array<any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"name":{"type":{"definitions":[{}]},"optional":false,"label":"Name"},"email":{"optional":true,"type":{"definitions":[{}]},"label":"Email"},"nonPublic":{"optional":true,"type":{"definitions":[{}]},"label":"Non public"},"response":{"type":{"definitions":[{"allowedValues":["yes","maybe","no"]}]},"optional":false,"label":"Response"},"userId":{"optional":true,"type":{"definitions":[{}]},"label":"User ID"},"createdAt":{"optional":true,"type":{"definitions":[{}]},"label":"Created at"}},"_depsLabels":{},"_schemaKeys":["name","email","nonPublic","response","userId","createdAt"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["name","email","nonPublic","response","userId","createdAt"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/>
  activateRSVPs: boolean
  nextDayReminderSent: boolean
  voteCount: number
  baseScore: number
  score: number
  inactive: boolean
  legacy: boolean
  legacyId: string
  legacySpam: boolean
  feedId: string
  feedLink: string
  curatedDate: Date
  metaDate: Date
  suggestForCuratedUserIds: Array<string>
  frontpageDate: Date
  collectionTitle: string
  coauthorUserIds: Array<string>
  socialPreviewImageId: string
  socialPreviewImageAutoUrl: string
  canonicalSequenceId: string
  canonicalCollectionSlug: string
  canonicalBookId: string
  canonicalNextPostSlug: string
  canonicalPrevPostSlug: string
  unlisted: boolean
  disableRecommendation: boolean
  defaultRecommendation: boolean
  draft: boolean
  meta: boolean
  hideFrontpageComments: boolean
  maxBaseScore: number
  scoreExceeded2Date: Date
  scoreExceeded30Date: Date
  scoreExceeded45Date: Date
  scoreExceeded75Date: Date
  bannedUserIds: Array<string>
  commentsLocked: boolean
  organizerIds: Array<string>
  groupId: string
  isEvent: boolean
  reviewedByUserId: string
  reviewForCuratedUserId: string
  startTime: Date
  localStartTime: Date
  endTime: Date
  localEndTime: Date
  onlineEvent: boolean
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string
  contactInfo: string
  facebookLink: string
  website: string
  types: Array<string>
  metaSticky: boolean
  shareWithUsers: Array<string>
  commentSortOrder: string
  hideAuthor: boolean
  moderationStyle: string
  hideCommentKarma: boolean
  commentCount: number
  contents: EditableFieldContents
  pingbacks: any /*{"definitions":[{}]}*/
  moderationGuidelines: EditableFieldContents
  customHighlight: EditableFieldContents
  af: boolean
  afDate: Date
  afBaseScore: number
  afCommentCount: number
  afLastCommentedAt: Date
  afSticky: boolean
  suggestForAlignmentUserIds: Array<string>
  reviewForAlignmentUserId: string
}

interface RSSFeedsCollection extends CollectionBase<DbRSSFeed, "RSSFeeds"> {
}

interface DbRSSFeed extends DbObject {
  __collectionName?: "RSSFeeds"
  userId: string
  createdAt: Date
  ownedByUser: boolean
  displayFullContent: boolean
  nickname: string
  url: string
  status: string
  rawFeed: any /*{"definitions":[{}]}*/
  setCanonicalUrl: boolean
}

interface ReadStatusesCollection extends CollectionBase<DbReadStatus, "ReadStatuses"> {
}

interface DbReadStatus extends DbObject {
  __collectionName?: "ReadStatuses"
  postId: string
  tagId: string
  userId: string
  isRead: boolean
  lastUpdated: Date
}

interface ReportsCollection extends CollectionBase<DbReport, "Reports"> {
}

interface DbReport extends DbObject {
  __collectionName?: "Reports"
  userId: string
  commentId: string
  postId: string
  link: string
  claimedUserId: string
  description: string
  createdAt: Date
  closedAt: Date
  markedAsSpam: boolean
  reportedAsSpam: boolean
}

interface ReviewVotesCollection extends CollectionBase<DbReviewVote, "ReviewVotes"> {
}

interface DbReviewVote extends DbObject {
  __collectionName?: "ReviewVotes"
  createdAt: Date
  userId: string
  postId: string
  qualitativeScore: number
  quadraticScore: number
  comment: string
  year: string
  dummy: boolean
  reactions: Array<string>
}

interface RevisionsCollection extends CollectionBase<DbRevision, "Revisions"> {
}

interface DbRevision extends DbObject {
  __collectionName?: "Revisions"
  documentId: string
  collectionName: CollectionNameString
  fieldName: string
  editedAt: Date
  updateType: string
  version: string
  commitMessage: string
  userId: string
  draft: boolean
  originalContents: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"type":{"type":{"definitions":[{}]},"optional":false,"label":"Type"},"data":{"type":{"definitions":[{},{"blackbox":true}]},"optional":false,"label":"Data"}},"_depsLabels":{},"_schemaKeys":["type","data"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["type","data"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  html: string
  wordCount: number
  changeMetrics: any /*{"definitions":[{"blackbox":true}]}*/
  voteCount: number
  baseScore: number
  score: number
  inactive: boolean
}

interface SequencesCollection extends CollectionBase<DbSequence, "Sequences"> {
}

interface DbSequence extends DbObject {
  __collectionName?: "Sequences"
  createdAt: Date
  userId: string
  title: string
  gridImageId: string
  bannerImageId: string
  curatedOrder: number
  userProfileOrder: number
  draft: boolean
  isDeleted: boolean
  canonicalCollectionSlug: string
  hidden: boolean
  contents: EditableFieldContents
  af: boolean
}

interface SubscriptionsCollection extends CollectionBase<DbSubscription, "Subscriptions"> {
}

interface DbSubscription extends DbObject {
  __collectionName?: "Subscriptions"
  createdAt: Date
  userId: string
  state: string
  documentId: string
  collectionName: CollectionNameString
  deleted: boolean
  type: string
}

interface TagFlagsCollection extends CollectionBase<DbTagFlag, "TagFlags"> {
}

interface DbTagFlag extends DbObject {
  __collectionName?: "TagFlags"
  createdAt: Date
  name: string
  deleted: boolean
  slug: string
  order: number
  contents: EditableFieldContents
}

interface TagRelsCollection extends CollectionBase<DbTagRel, "TagRels"> {
}

interface DbTagRel extends DbObject {
  __collectionName?: "TagRels"
  createdAt: Date
  tagId: string
  postId: string
  deleted: boolean
  userId: string
  afBaseScore: number
  voteCount: number
  baseScore: number
  score: number
  inactive: boolean
}

interface TagsCollection extends CollectionBase<DbTag, "Tags"> {
}

interface DbTag extends DbObject {
  __collectionName?: "Tags"
  createdAt: Date
  name: string
  slug: string
  oldSlugs: Array<string>
  core: boolean
  suggestedAsFilter: boolean
  defaultOrder: number
  descriptionTruncationCount: number
  postCount: number
  userId: string
  adminOnly: boolean
  charsAdded: number
  charsRemoved: number
  deleted: boolean
  lastCommentedAt: Date
  needsReview: boolean
  reviewedByUserId: string
  wikiGrade: number
  wikiOnly: boolean
  tagFlagsIds: Array<string>
  lesswrongWikiImportRevision: string
  lesswrongWikiImportSlug: string
  lesswrongWikiImportCompleted: boolean
  htmlWithContributorAnnotations: string
  contributionStats: any /*{"definitions":[{"blackbox":true}]}*/
  description: EditableFieldContents
}

interface UsersCollection extends CollectionBase<DbUser, "Users"> {
}

interface DbUser extends DbObject {
  __collectionName?: "Users"
  username: string
  emails: Array<any /*{"definitions":[{}]}*/>
  createdAt: Date
  isAdmin: boolean
  profile: any /*{"definitions":[{"blackbox":true}]}*/
  services: any /*{"definitions":[{"blackbox":true}]}*/
  displayName: string
  email: string
  slug: string
  groups: Array<string>
  lwWikiImport: boolean
  whenConfirmationEmailSent: Date
  legacy: boolean
  commentSorting: string
  sortDrafts: string
  hideIntercom: boolean
  markDownPostEditor: boolean
  hideElicitPredictions: boolean
  hideAFNonMemberInitialWarning: boolean
  hideNavigationSidebar: boolean
  currentFrontpageFilter: string
  frontpageFilterSettings: any /*{"definitions":[{"blackbox":true}]}*/
  allPostsTimeframe: string
  allPostsFilter: string
  allPostsSorting: string
  allPostsShowLowKarma: boolean
  allPostsOpenSettings: boolean
  lastNotificationsCheck: Date
  bio: string
  htmlBio: string
  karma: number
  website: string
  moderationStyle: string
  moderatorAssistance: boolean
  collapseModerationGuidelines: boolean
  showHideKarmaOption: boolean
  bannedUserIds: Array<string>
  bannedPersonalUserIds: Array<string>
  bookmarkedPostsMetadata: Array<any /*{"definitions":[{}]}*/>
  legacyId: string
  deleted: boolean
  voteBanned: boolean
  nullifyVotes: boolean
  deleteContent: boolean
  banned: Date
  auto_subscribe_to_my_posts: boolean
  auto_subscribe_to_my_comments: boolean
  autoSubscribeAsOrganizer: boolean
  notificationCommentsOnSubscribedPost: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationShortformContent: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationRepliesToMyComments: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationRepliesToSubscribedComments: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationSubscribedUserPost: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationPostsInGroups: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationSubscribedTagPost: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationPrivateMessage: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationSharedWithMe: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationAlignmentSubmissionApproved: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationEventInRadius: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  notificationRSVPs: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"channel":{"type":{"definitions":[{"allowedValues":["none","onsite","email","both"]}]},"optional":false,"label":"Channel"},"batchingFrequency":{"type":{"definitions":[{"allowedValues":["realtime","daily","weekly"]}]},"optional":false,"label":"Batching frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{}]},"label":"Day of week gmt"}},"_depsLabels":{},"_schemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["channel","batchingFrequency","timeOfDayGMT","dayOfWeekGMT"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  karmaChangeNotifierSettings: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"updateFrequency":{"optional":true,"type":{"definitions":[{"allowedValues":["disabled","daily","weekly","realtime"]}]},"label":"Update frequency"},"timeOfDayGMT":{"optional":true,"type":{"definitions":[{"type":"SimpleSchema.Integer","min":0,"max":23}]},"label":"Time of day gmt"},"dayOfWeekGMT":{"optional":true,"type":{"definitions":[{"allowedValues":["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]}]},"label":"Day of week gmt"},"showNegativeKarma":{"optional":true,"type":{"definitions":[{}]},"label":"Show negative karma"}},"_depsLabels":{},"_schemaKeys":["updateFrequency","timeOfDayGMT","dayOfWeekGMT","showNegativeKarma"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["updateFrequency","timeOfDayGMT","dayOfWeekGMT","showNegativeKarma"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/
  karmaChangeLastOpened: Date
  karmaChangeBatchStart: Date
  emailSubscribedToCurated: boolean
  subscribedToDigest: boolean
  unsubscribeFromAll: boolean
  hideSubscribePoke: boolean
  hideMeetupsPoke: boolean
  frontpagePostCount: number
  sequenceCount: number
  sequenceDraftCount: number
  mongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  googleLocation: any /*{"definitions":[{"blackbox":true}]}*/
  location: string
  mapLocation: any /*{"definitions":[{"blackbox":true}]}*/
  mapLocationSet: boolean
  mapMarkerText: string
  htmlMapMarkerText: string
  nearbyEventsNotifications: boolean
  nearbyEventsNotificationsLocation: any /*{"definitions":[{"blackbox":true}]}*/
  nearbyEventsNotificationsMongoLocation: any /*{"definitions":[{"blackbox":true}]}*/
  nearbyEventsNotificationsRadius: number
  nearbyPeopleNotificationThreshold: number
  hideFrontpageMap: boolean
  hideTaggingProgressBar: boolean
  hideFrontpageBookAd: boolean
  sunshineNotes: string
  sunshineFlagged: boolean
  needsReview: boolean
  sunshineSnoozed: boolean
  reviewedByUserId: string
  reviewedAt: Date
  afKarma: number
  voteCount: number
  smallUpvoteCount: number
  smallDownvoteCount: number
  bigUpvoteCount: number
  bigDownvoteCount: number
  fullName: string
  noSingleLineComments: boolean
  noCollapseCommentsPosts: boolean
  noCollapseCommentsFrontpage: boolean
  shortformFeedId: string
  viewUnreviewedComments: boolean
  partiallyReadSequences: Array<any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"sequenceId":{"foreignKey":"Sequences","optional":true,"type":{"definitions":[{}]},"label":"Sequence ID"},"collectionId":{"foreignKey":"Collections","optional":true,"type":{"definitions":[{}]},"label":"Collection ID"},"lastReadPostId":{"foreignKey":"Posts","type":{"definitions":[{}]},"optional":false,"label":"Last read post ID"},"nextPostId":{"foreignKey":"Posts","type":{"definitions":[{}]},"optional":false,"label":"Next post ID"},"numRead":{"type":{"definitions":[{"type":"SimpleSchema.Integer"}]},"optional":false,"label":"Num read"},"numTotal":{"type":{"definitions":[{"type":"SimpleSchema.Integer"}]},"optional":false,"label":"Num total"},"lastReadTime":{"optional":true,"type":{"definitions":[{}]},"label":"Last read time"}},"_depsLabels":{},"_schemaKeys":["sequenceId","collectionId","lastReadPostId","nextPostId","numRead","numTotal","lastReadTime"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["sequenceId","collectionId","lastReadPostId","nextPostId","numRead","numTotal","lastReadTime"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]}*/>
  beta: boolean
  reviewVotesQuadratic: boolean
  reviewVotesQuadratic2019: boolean
  petrovPressedButtonDate: Date
  petrovLaunchCodeDate: Date
  defaultToCKEditor: boolean
  signUpReCaptchaRating: number
  oldSlugs: Array<string>
  noExpandUnreadCommentsReview: boolean
  postCount: number
  maxPostCount: number
  commentCount: number
  maxCommentCount: number
  tagRevisionCount: number
  abTestKey: string
  abTestOverrides: any /*{"definitions":[{"type":"JSON","blackbox":true}]}*/
  reenableDraftJs: boolean
  walledGardenInvite: boolean
  hideWalledGardenUI: boolean
  walledGardenPortalOnboarded: boolean
  taggingDashboardCollapsed: boolean
  usernameUnset: boolean
  moderationGuidelines: EditableFieldContents
  recommendationSettings: any /*{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"frontpage":{"type":{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"method":{"type":{"definitions":[{}]},"optional":false,"label":"Method"},"count":{"type":{"definitions":[{"type":"SimpleSchema.Integer"}]},"optional":false,"label":"Count"},"scoreOffset":{"type":{"definitions":[{}]},"optional":false,"label":"Score offset"},"scoreExponent":{"type":{"definitions":[{}]},"optional":false,"label":"Score exponent"},"personalBlogpostModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Personal blogpost modifier"},"frontpageModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Frontpage modifier"},"curatedModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Curated modifier"},"onlyUnread":{"type":{"definitions":[{}]},"optional":false,"label":"Only unread"}},"_depsLabels":{},"_schemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]},"optional":false,"label":"Frontpage"},"frontpageEA":{"type":{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"method":{"type":{"definitions":[{}]},"optional":false,"label":"Method"},"count":{"type":{"definitions":[{"type":"SimpleSchema.Integer"}]},"optional":false,"label":"Count"},"scoreOffset":{"type":{"definitions":[{}]},"optional":false,"label":"Score offset"},"scoreExponent":{"type":{"definitions":[{}]},"optional":false,"label":"Score exponent"},"personalBlogpostModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Personal blogpost modifier"},"frontpageModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Frontpage modifier"},"curatedModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Curated modifier"},"onlyUnread":{"type":{"definitions":[{}]},"optional":false,"label":"Only unread"}},"_depsLabels":{},"_schemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]},"optional":false,"label":"Frontpage ea"},"recommendationspage":{"type":{"definitions":[{"type":{"_constructorOptions":{"humanizeAutoLabels":true,"requiredByDefault":true},"_cleanOptions":{"autoConvert":true,"extendAutoValueContext":{},"filter":true,"getAutoValues":true,"removeEmptyStrings":true,"removeNullsFromArrays":false,"trimStrings":true},"_validators":[],"_docValidators":[],"_validationContexts":{},"_schema":{"method":{"type":{"definitions":[{}]},"optional":false,"label":"Method"},"count":{"type":{"definitions":[{"type":"SimpleSchema.Integer"}]},"optional":false,"label":"Count"},"scoreOffset":{"type":{"definitions":[{}]},"optional":false,"label":"Score offset"},"scoreExponent":{"type":{"definitions":[{}]},"optional":false,"label":"Score exponent"},"personalBlogpostModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Personal blogpost modifier"},"frontpageModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Frontpage modifier"},"curatedModifier":{"type":{"definitions":[{}]},"optional":false,"label":"Curated modifier"},"onlyUnread":{"type":{"definitions":[{}]},"optional":false,"label":"Only unread"}},"_depsLabels":{},"_schemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"_objectKeys":{},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2}}]},"optional":false,"label":"Recommendationspage"}},"_depsLabels":{},"_schemaKeys":["frontpage","frontpageEA","recommendationspage"],"_autoValues":[],"_blackboxKeys":{},"_firstLevelSchemaKeys":["frontpage","frontpageEA","recommendationspage"],"_objectKeys":{"frontpage.":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"frontpageEA.":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"],"recommendationspage.":["method","count","scoreOffset","scoreExponent","personalBlogpostModifier","frontpageModifier","curatedModifier","onlyUnread"]},"messageBox":{"language":"en","messageList":{"en":{"required":"{{{label}}} is required","minString":"{{{label}}} must be at least {{min}} characters","maxString":"{{{label}}} cannot exceed {{max}} characters","minNumber":"{{{label}}} must be at least {{min}}","maxNumber":"{{{label}}} cannot exceed {{max}}","minNumberExclusive":"{{{label}}} must be greater than {{min}}","maxNumberExclusive":"{{{label}}} must be less than {{max}}","minDate":"{{{label}}} must be on or after {{min}}","maxDate":"{{{label}}} cannot be after {{max}}","badDate":"{{{label}}} is not a valid date","minCount":"You must specify at least {{minCount}} values","maxCount":"You cannot specify more than {{maxCount}} values","noDecimal":"{{{label}}} must be an integer","notAllowed":"{{{value}}} is not an allowed value","expectedType":"{{{label}}} must be of type {{dataType}}","keyNotInSchema":"{{name}} is not allowed by the schema"}},"interpolate":{},"escape":{}},"version":2},"blackbox":true}]}*/
  afPostCount: number
  afCommentCount: number
  afSequenceCount: number
  afSequenceDraftCount: number
  reviewForAlignmentForumUserId: string
  afApplicationText: string
  afSubmittedApplication: boolean
}

interface VotesCollection extends CollectionBase<DbVote, "Votes"> {
}

interface DbVote extends DbObject {
  __collectionName?: "Votes"
  documentId: string
  collectionName: CollectionNameString
  userId: string
  authorId: string
  voteType: string
  power: number
  afPower: number
  cancelled: boolean
  isUnvote: boolean
  votedAt: Date
  documentIsAf: boolean
}

interface CollectionsByName {
  Bans: BansCollection
  Books: BooksCollection
  Chapters: ChaptersCollection
  Collections: CollectionsCollection
  Comments: CommentsCollection
  Conversations: ConversationsCollection
  DatabaseMetadata: DatabaseMetadataCollection
  DebouncerEvents: DebouncerEventsCollection
  EmailTokens: EmailTokensCollection
  GardenCodes: GardenCodesCollection
  LWEvents: LWEventsCollection
  LegacyData: LegacyDataCollection
  Localgroups: LocalgroupsCollection
  Messages: MessagesCollection
  Migrations: MigrationsCollection
  Notifications: NotificationsCollection
  PetrovDayLaunchs: PetrovDayLaunchsCollection
  PostRelations: PostRelationsCollection
  Posts: PostsCollection
  RSSFeeds: RSSFeedsCollection
  ReadStatuses: ReadStatusesCollection
  Reports: ReportsCollection
  ReviewVotes: ReviewVotesCollection
  Revisions: RevisionsCollection
  Sequences: SequencesCollection
  Subscriptions: SubscriptionsCollection
  TagFlags: TagFlagsCollection
  TagRels: TagRelsCollection
  Tags: TagsCollection
  Users: UsersCollection
  Votes: VotesCollection
}

interface ObjectsByCollectionName {
  Bans: DbBan
  Books: DbBook
  Chapters: DbChapter
  Collections: DbCollection
  Comments: DbComment
  Conversations: DbConversation
  DatabaseMetadata: DbDatabaseMetadata
  DebouncerEvents: DbDebouncerEvents
  EmailTokens: DbEmailTokens
  GardenCodes: DbGardenCode
  LWEvents: DbLWEvent
  LegacyData: DbLegacyData
  Localgroups: DbLocalgroup
  Messages: DbMessage
  Migrations: DbMigration
  Notifications: DbNotification
  PetrovDayLaunchs: DbPetrovDayLaunch
  PostRelations: DbPostRelation
  Posts: DbPost
  RSSFeeds: DbRSSFeed
  ReadStatuses: DbReadStatus
  Reports: DbReport
  ReviewVotes: DbReviewVote
  Revisions: DbRevision
  Sequences: DbSequence
  Subscriptions: DbSubscription
  TagFlags: DbTagFlag
  TagRels: DbTagRel
  Tags: DbTag
  Users: DbUser
  Votes: DbVote
}

